//BEGIN_HEADING - file version: 1.0
//WARNING - automatically generated code - DO NOT EDIT THIS FILE!

#include "stdafx.h"

//BEGIN_SOURCE_INCLUDE
#include	"sqlrec.h"
#include	"sqlconnect.h"
#include	"oledbmng.h"
//END_SOURCE_INCLUDE

#include <atlsafe.h>
#include <TbGeneric\WebServiceStateObjects.h>
#include <TBNameSolver\Templates.h>
//END_HEADING


namespace TbOleDbTbOleDb {
	//File: Framework\TbOleDb\OleDbMng.cpp.
	extern "C" __declspec(dllexport) long __GetConnection(HWND _hwnd) throw(...)
	{
		SqlSession* returnValueParam;
		returnValueParam = AfxInvokeThreadGlobalFunction<SqlSession*>(_hwnd, &AfxGetDefaultSqlSession);
		AfxAddWebServiceStateObject(returnValueParam, _hwnd);
		return (long)returnValueParam;
	}
	//File: Framework\TbOleDb\OleDbMng.cpp.
	extern "C" __declspec(dllexport) long __OpenConnection(HWND _hwnd, BSTR dsConnectionString) throw(...)
	{
		SqlSession* returnValueParam;
		DataStr dsConnectionStringParam;
		dsConnectionStringParam.SetCollateCultureSensitive(TRUE);
		dsConnectionStringParam.SetSoapValue(dsConnectionString);
		returnValueParam = AfxInvokeThreadGlobalFunction<SqlSession*, DataStr>(_hwnd, &AfxOpenSqlSession, dsConnectionStringParam);
		AfxAddWebServiceStateObject(returnValueParam, _hwnd);
		return (long)returnValueParam;
	}
	//File: Framework\TbOleDb\OleDbMng.cpp.
	extern "C" __declspec(dllexport) long __CreateRecord(HWND _hwnd, BSTR tableName) throw(...)
	{
		SqlRecord* returnValueParam;
		DataStr tableNameParam;
		tableNameParam.SetCollateCultureSensitive(TRUE);
		tableNameParam.SetSoapValue(tableName);
		returnValueParam = AfxInvokeThreadGlobalFunction<SqlRecord*, DataStr>(_hwnd, &AfxCreateRecord, tableNameParam);
		AfxAddWebServiceStateObject(returnValueParam, _hwnd);
		return (long)returnValueParam;
	}
	//File: Framework\TbOleDb\SqlConnect.cpp.
	extern "C" __declspec(dllexport) void __Connection_Close(HWND _hwnd, long handle) throw(...)
	{
		CObject* pObj = ((CObject*)handle);
		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlSession)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlSession"));
		SqlSession& obj = *((SqlSession*)pObj);
		AfxInvokeThreadProcedure<SqlSession>(_hwnd, &obj, &SqlSession::Close);
	}
	//File: Framework\TbOleDb\SqlConnect.cpp.
	extern "C" __declspec(dllexport) void __Connection_BeginTransaction(HWND _hwnd, long handle) throw(...)
	{
		CObject* pObj = ((CObject*)handle);
		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlSession)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlSession"));
		SqlSession& obj = *((SqlSession*)pObj);
		AfxInvokeThreadProcedure<SqlSession>(_hwnd, &obj, &SqlSession::StartTransaction);
	}
	//File: Framework\TbOleDb\SqlConnect.cpp.
	extern "C" __declspec(dllexport) void __Connection_Commit(HWND _hwnd, long handle) throw(...)
	{
		CObject* pObj = ((CObject*)handle);
		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlSession)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlSession"));
		SqlSession& obj = *((SqlSession*)pObj);
		AfxInvokeThreadProcedure<SqlSession>(_hwnd, &obj, &SqlSession::Commit);
	}
	//File: Framework\TbOleDb\SqlConnect.cpp.
	extern "C" __declspec(dllexport) void __Connection_Rollback(HWND _hwnd, long handle) throw(...)
	{
		CObject* pObj = ((CObject*)handle);
		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlSession)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlSession"));
		SqlSession& obj = *((SqlSession*)pObj);
		AfxInvokeThreadProcedure<SqlSession>(_hwnd, &obj, &SqlSession::Abort);
	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) BSTR __GetExtraFiltering(HWND _hwnd, SAFEARRAY* aTablesNames, BSTR aWC) throw(...)
	{

		DataStr returnValueParam;
		returnValueParam.SetCollateCultureSensitive(TRUE);

		DataArray aTablesNamesParam;

		CComSafeArray<BSTR> sfaraTablesNames;
		if(aTablesNames) {
			sfaraTablesNames.Attach(aTablesNames);
			for (long i = 0; i < (long)sfaraTablesNames.GetCount(); i++){
				DataStr *pObj = new DataStr();
				pObj->SetCollateCultureSensitive(TRUE);
				pObj->SetSoapValue((sfaraTablesNames)[i]);
				aTablesNamesParam.Add(pObj);
			}


			sfaraTablesNames.Detach();
		}
		DataStr aWCParam;
		aWCParam.SetCollateCultureSensitive(TRUE);
		aWCParam.SetSoapValue(aWC);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataStr, DataArray, DataStr>(_hwnd, &GetExtraFiltering, aTablesNamesParam, aWCParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) long __SqlRecord_Clone(HWND _hwnd, long handle) throw(...)
	{

		SqlRecord* returnValueParam;


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		returnValueParam = AfxInvokeThreadFunction<SqlRecord*, SqlRecord>(_hwnd, &obj, &SqlRecord::Clone);

		AfxAddWebServiceStateObject(returnValueParam, _hwnd);


		return (long)returnValueParam;

	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) void __SqlRecord_Copy(HWND _hwnd, long handle, long pRecSource) throw(...)
	{

		SqlRecord* pRecSourceParam;
		pRecSourceParam = (SqlRecord*)pRecSource;


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		AfxInvokeThreadProcedure<SqlRecord, SqlRecord*>(_hwnd, &obj, &SqlRecord::CopyRecord, pRecSourceParam);


	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) BSTR __SqlRecord_GetFieldValue(HWND _hwnd, long handle, BSTR FieldName) throw(...)
	{

		DataStr returnValueParam;
		returnValueParam.SetCollateCultureSensitive(TRUE);

		DataStr FieldNameParam;
		FieldNameParam.SetCollateCultureSensitive(TRUE);
		FieldNameParam.SetSoapValue(FieldName);


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		returnValueParam = AfxInvokeThreadFunction<DataStr, SqlRecord, DataStr>(_hwnd, &obj, &SqlRecord::GetFieldValue, FieldNameParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) void __SqlRecord_SetFieldValue(HWND _hwnd, long handle, BSTR FieldName, BSTR Value) throw(...)
	{

		DataStr FieldNameParam;
		FieldNameParam.SetCollateCultureSensitive(TRUE);
		FieldNameParam.SetSoapValue(FieldName);

		DataStr ValueParam;
		ValueParam.SetCollateCultureSensitive(TRUE);
		ValueParam.SetSoapValue(Value);


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		AfxInvokeThreadProcedure<SqlRecord, DataStr, DataStr>(_hwnd, &obj, &SqlRecord::SetFieldValue, FieldNameParam, ValueParam);


	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) bool __SqlRecord_IsStorable(HWND _hwnd, long handle) throw(...)
	{

		DataBool returnValueParam;


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		returnValueParam = AfxInvokeThreadFunction<DataBool, SqlRecord>(_hwnd, &obj, &SqlRecord::TbScriptIsStorable);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) void __SqlRecord_SetStorable(HWND _hwnd, long handle, bool bStorable) throw(...)
	{

		DataBool bStorableParam;
		bStorableParam.SetSoapValue(bStorable);


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		AfxInvokeThreadProcedure<SqlRecord, DataBool>(_hwnd, &obj, &SqlRecord::TbScriptSetStorable, bStorableParam);


	}

	//File: Framework\TbOleDb\SqlRec.cpp.
	extern "C" __declspec(dllexport) long __SqlRecord_GetDataObjFromName(HWND _hwnd, long handle, BSTR str) throw(...)
	{

		DataObj* returnValueParam;

		DataStr strParam;
		strParam.SetCollateCultureSensitive(TRUE);
		strParam.SetSoapValue(str);


		CObject* pObj = ((CObject*)handle);

		if (!pObj->IsKindOf(RUNTIME_CLASS(SqlRecord)))
			throw new CApplicationErrorException(_T("Invalid context object: SqlRecord"));

		SqlRecord& obj = *((SqlRecord*)pObj);
		returnValueParam = AfxInvokeThreadFunction<DataObj*, SqlRecord, DataStr>(_hwnd, &obj, &SqlRecord::GetDataObjFromName, strParam);

		AfxAddWebServiceStateObject(returnValueParam, _hwnd);


		return (long)returnValueParam;

	}
}

TB_REGISTER_SOAP_SERVICE(TbOleDbTbOleDb::CTbOleDbTbOleDb)