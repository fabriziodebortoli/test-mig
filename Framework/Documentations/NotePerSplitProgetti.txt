
Note per aggiungere un modulo o un progetto...

Lavorare da Explorer aggiungendo la struttura cartelle del Modulo (o la cartella del progetto) 
Modulo
	Dbl
		file1.h
		file1.cpp	--> fare un file per gruppi di tabelle relative a uno stesso documento
		file2.h
		file2.cpp	

Includere il wizard personalizzato di creazione progetti TB tra quelli standard:
1) Sincronizzare $/Sviluppo/Running/Standard/tools/VCProjectWizards/Library Gestionale TB-CPP 
2) Copiare da C:\MicroareaServer\SVILUPPO\Running\Standard\Tools\VSProjectWizards\Library Gestionale TB-CPP i files: 
      Library Gestionale TB-CPP.vsz 
      Library Gestionale TB-CPP.vsdir 
      Library Gestionale TB-CPP.ico 
   in C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\vcprojects

Fare una nuova Solution vuota: 
==============================
File | New | Blank Solution | Visual Studio Solutions
Aggiungere negli Include file C:\MICROAREASERVER\SVILUPPO\Running\Standard\TASKBUILDERAPPLICATIONS\MagoNet

Aggiungere un project:
======================
tasto destro sul modulo, Add | New Project| Visual C++ project | Library Gestionale TB C++,
su Name dare nome della Library (es. SpedizioniDbl) su Location dare il path fino alla cartella
sopra, ossia quella del Modulo (es. C:\MICROAREASERVER\SVILUPPO\Running\Standard\TASKBUILDERAPPLICATIONS\MagoNet\Spedizioni)
A questo punto parte il nostro wizard...
indicare il tipo di library che si vuole creare (Dbl, Components ecc...)



Nel .rc del modulo mettere le include ai .rc singoli e solo in quelli singoli impostare nelle Properties
Excluded From Build a Yes

Aggiungere i propri file al progetto:
Project Add Existing Item selezionare i propri file .h .cpp

Aggiungere il progetto e tutti i file a SSF:
File Source Control Add Selected Project to


Configurazione finale sorgenti in SSF di un modulo
==================================================
Modulo
	Dbl
		beginh.dex	
		endh.dex
		file1.cpp	
		file1.h
		file2.cpp
		file2.h
		ModuloDbl.cpp
		ModuloDbl.rc	
		moduloDbl.vcproj
		moduloDbl.vspscc
		stdafx.cpp
		stdafx.h

INCLUDE
=======
Notare quante e quali inclusioni abbiamo fatto nei .h e .cpp dei file già portati e
non farne una di + se non effettivamente necessaria

ATTENZIONE!!!!!!!!!
===================
Prendendo i sorgenti da md2000.net TOGLIETE le cose che portate di modo che nei sorgenti di
md2000.net rimanga quello che ancora non è stato portato.

RENAME
======
Occorre seguire una serie di norme di convention dei nomi delle classi e
dei sorgenti di modo da avere nomi chiari, semplici e soprattutto uniformi:

Le classi che definiscono le tabelle si chiamano TXXX
Le classi che definiscono le view di database si chiamano VXXX
Le classi che derivano da HotKeyLink si chiamano HKLXXX
Le classi che derivano da DataSource si chiamano DSXXX
Le classi che derivano da TableReader si chiamano TRXXX
Le classi che derivano da TableUpdater si chiamano TUXXX

Le classi che derivano da ADMObj si chiamano ADMXXXObj

Le classi che derivano da CObject si chiamano CXXX

Le classi che definiscono i DBT si chiamano DBTXXX
Le classi che definiscono i Documenti si chiamano DXXX
Le classi che definiscono i Documenti Batch si chiamano BDXXX
Le classi che derivano da ClientDoc si chiamano CDXXX

Le classi che derivano da CTabManager si chiamano CXXXTabManager
Le classi che derivano da CTabDialog si chiamano CXXXTabDialog
Le classi che derivano da CBodyEdit si chiamano CXXXBodyEdit

Le classi che derivano da CMasterFormView si chiamano CXXXView
Le classi che derivano da CSlaveFormView  si chiamano CXXXSlaveView
Le classi che derivano da CRowFormView si chiamano CXXXRowView
Le classi che derivano da CMasterFrame si chiamano CXXXFrame


I file che gestiscono le tabelle si chiamano  TXXX
I file che gestiscono gli ADM si chiamano  ADMXXX
I file che gestiscono i documenti si chiamano  DXXX
I file che gestiscono i documenti batch si chiamano  BDXXX
I file che gestiscono la parte grafica si chiamano  UIXXX (e hanno .hrc e .rc)

Per casi particolari si applica il buon senso e ci si consulta.

Sicuri errori in compilazione da correggere:
===========================================

HOTLINK
=======
IDHL negli hotlink sono sostituite da _T("Modulo.Documento") 
non usare spazi ma usare maiuscoli es. _T("Spedizioni.ModiTrasporto")
chiedere sempre conferma nomi documenti
NON USARE MAI PUNTI NEI NOMI DI DOCUMENTI, MODULI, LIBRARY O APPLICAZIONI

Togliere SetErrorIDS metodo di HKL (non veniva mai utilizzato ora non esiste
manco + il metodo di HKL)
Rinominare SetErrorIDP metodo di HKL in SetErrorString, il parametro ora e` una stringa
quindi sostituire 0 con ""

LEN
===
Il file LEN viene splittato per modulo e servono solo per le LEN dei campi local.

Nel caso di SetCtrlSize invece che usare la LEN basta sostituire il campo.GetLen()
Esempio:
	pColInfo = AddColumn(
							_T("RagioneSociale"),
							_TB("Ragione sociale"),
							0,
							IDC_AZIENDA_INDIRIZZI_RAG_SOC,
							&(pIndirizzi->f_RagSoc),
							RUNTIME_CLASS(CStrEdit));
	pColInfo->SetCtrlSize(pIndirizzi->f_RagSoc.GetColumnLen(), 2);
 
ENUMERATIVI
===========
Splittare enumerativi nella dbl di competenza (chiedere SEMPRE conferma su dove) e se riferiti in
altra dbl metterne l'include

CONTROLLO CONFIGURAZIONE
========================
Usare if AfxIsActivated() per test CFG al posto di AfxGetMicroareaConfiguration() & CFG
Esempio:
	BOOL bNoCFG = (AfxGetMicroareaConfiguration() & CFG_CONTA) == 0;
	if (bNoCFG)
		return FALSE;

diventa
	if (!AfxIsActivated(_T("Contabilita")))
		return FALSE;
La stringa da passare alla AfxIsActivated è il nome del Modulo o del Modulo.Funzionalità
esempio _T("Distinta.Disegni")

Per i documenti:
================
rename classe documento
derivazione da CAbstractFormDoc e da ADMXXXObj e implementazione di almeno i 2 metodi di ADMXXXObj
Eliminare la SetReportName MA non l'sz relativa così ci ricordiamo il nome del report di default

EX FUNZIONI DI GESAPP
=====================
AfxGetGesApp()->GetApplicationDate()
diventa
AfxGetApplicationDate()

esistono anche
AfxGetApplicationDay()
AfxGetApplicationYear()
AfxGetApplicationMonth()

MODULI (solo Dbl e Components)
=============================
Core							Rinaldi
InvoiceMng						Rinaldi
IDsMng							Rinaldi
Azienda							Perna
Divise							Perna
ClientiFornitori				Amodio
Piano dei conti					Amodio
Banche							Amodio
Condizioni pagamento			Amodio
Spedizioni						Perna
Agenti							Vayra
Contabilita (con previsionale)	Perna
Partite							Perna
Percipienti						Poggi
Intrastat						Poggi
Bilanci consolidati				Poggi
Analitica						Perna-Poggi
Linee di Prodotto				Perna-Poggi
P&L								Poggi
Ribaltamenti					Poggi
Cespiti							Perna-Poggi
Magazzino (con Ubicazioni LottiMatricole CodiciParlanti)	Persano
LifoFifoScattiContinui			Persano
Vendite							Vayra
Politche spese					Vayra
Conai							Persano
Acquisti (con Collaudi)			Persano
OrdiniClienti					Vayra
OrdiniFornitori					Vayra
AllineamentoPrezziFornitore		Vayra
OneriAccessori					Vayra
OrdiniAperti					Vayra
Distinta Base (con Cicli)		Talotta
Varianti						Squiccimarro
Configuratore					Squiccimarro
Produzione						Scala-Giannini
Conto lavoro					Scala-Giannini
MRP								Rogledi
CRP								Squiccimarro
XGateAccounting					Amodio

NON ORA
ConsumiMediMensili
CommesseProduzione
Schedulatore CF
Lavorazione fasi
ConfezionamentoSpedizione
