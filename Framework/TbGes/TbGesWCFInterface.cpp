//BEGIN_HEADING - file version: 1.0
//WARNING - automatically generated code - DO NOT EDIT THIS FILE!

#include "stdafx.h"

////BEGIN_SOURCE_INCLUDE
//#include	"tbgessoapfunctions.h"

#include	"soapfunctions.h"
//END_SOURCE_INCLUDE

#include <atlsafe.h>
#include <TbGeneric\WebServiceStateObjects.h>
#include <TBNameSolver\Templates.h>
//END_HEADING


namespace TbGesTbGes {

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __GetLogins(HWND _hwnd) throw(...)
	{

		DataInt returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt>(_hwnd, &GetLogins);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __SetUserInteractionMode(HWND _hwnd, int mode) throw(...)
	{

		DataInt modeParam;
		modeParam.SetSoapValue(mode);

		AfxInvokeThreadGlobalProcedure<DataInt>(_hwnd, &SetUserInteractionMode, modeParam);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __UseRemoteInterface(HWND _hwnd, bool set) throw(...)
	{

		DataBool setParam;
		setParam.SetSoapValue(set);

		AfxInvokeThreadGlobalProcedure<DataBool>(_hwnd, &UseRemoteInterface, setParam);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __Login(HWND _hwnd, BSTR authenticationToken) throw(...)
	{

		DataBool returnValueParam;

		DataStr authenticationTokenParam;
		authenticationTokenParam.SetSoapValue(authenticationToken);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr>(_hwnd, &Login, authenticationTokenParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) long __GetProcessID(HWND _hwnd) throw(...)
	{

		DataLng returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataLng>(_hwnd, &GetProcessID);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __KillThread(HWND _hwnd, long ThreadId) throw(...)
	{

		DataLng ThreadIdParam;
		ThreadIdParam.SetSoapValue(ThreadId);

		AfxInvokeThreadGlobalProcedure<DataLng>(_hwnd, &KillThread, ThreadIdParam);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __StopThread(HWND _hwnd, long ThreadId) throw(...)
	{

		DataBool returnValueParam;

		DataLng ThreadIdParam;
		ThreadIdParam.SetSoapValue(ThreadId);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &StopThread, ThreadIdParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CanStopThread(HWND _hwnd, long ThreadId) throw(...)
	{

		DataBool returnValueParam;

		DataLng ThreadIdParam;
		ThreadIdParam.SetSoapValue(ThreadId);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &CanStopThread, ThreadIdParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) BSTR __GetActiveThreads(HWND _hwnd) throw(...)
	{

		DataStr returnValueParam;
		returnValueParam.SetCollateCultureSensitive(TRUE);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataStr>(_hwnd, &GetActiveThreads);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) BSTR __GetLoginActiveThreads(HWND _hwnd) throw(...)
	{

		DataStr returnValueParam;
		returnValueParam.SetCollateCultureSensitive(TRUE);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataStr>(_hwnd, &GetLoginActiveThreads);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) SAFEARRAY* __GetDocumentThreads(HWND _hwnd) throw(...)
	{

		DataArray returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataArray>(_hwnd, &GetDocumentThreads);


		CComSafeArray<long> sfarreturnValue;
		sfarreturnValue.Create(returnValueParam.GetSize());

		for (long i = 0; i < (long)sfarreturnValue.GetCount(); i++)
		{
			(sfarreturnValue)[i] = ((DataLng*)returnValueParam.GetAt(i))->GetSoapValue();
		}


		return sfarreturnValue.Detach();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __SetMenuHandle(HWND _hwnd, long menuWindowHandle) throw(...)
	{

		DataLng menuWindowHandleParam;
		menuWindowHandleParam.SetSoapValue(menuWindowHandle);

		AfxInvokeThreadGlobalProcedure<DataLng>(_hwnd, &SetMenuHandle, menuWindowHandleParam);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __SetDocumentInForeground(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &SetDocumentInForeground, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __GetCurrentUser(HWND _hwnd, BSTR* strUser, BSTR* strCompany) throw(...)
	{

		DataBool returnValueParam;

		DataStr strUserParam;
		strUserParam.SetSoapValue(*strUser);

		DataStr strCompanyParam;
		strCompanyParam.SetSoapValue(*strCompany);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr&, DataStr&>(_hwnd, &GetCurrentUser, strUserParam, strCompanyParam);

		SysFreeString(*strUser);
		*strUser = strUserParam.GetSoapValue();
		SysFreeString(*strCompany);
		*strCompany = strCompanyParam.GetSoapValue();

		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) long __RunDocument(HWND _hwnd, BSTR documentNamespace, BSTR arguments) throw(...)
	{

		DataLng returnValueParam;

		DataStr documentNamespaceParam;
		documentNamespaceParam.SetSoapValue(documentNamespace);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataLng, DataStr, DataStr>(_hwnd, &RunDocument, documentNamespaceParam, argumentsParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) long __RunReport(HWND _hwnd, BSTR reportNamespace, BSTR arguments) throw(...)
	{

		DataLng returnValueParam;

		DataStr reportNamespaceParam;
		reportNamespaceParam.SetSoapValue(reportNamespace);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataLng, DataStr, DataStr>(_hwnd, &RunReport, reportNamespaceParam, argumentsParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) long __RunReportFromWoormInfo(HWND _hwnd, long woormInfoHandle, BSTR arguments) throw(...)
	{

		DataLng returnValueParam;

		DataLng woormInfoHandleParam;
		woormInfoHandleParam.SetSoapValue(woormInfoHandle);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataLng, DataLng, DataStr>(_hwnd, &RunReportFromWoormInfo, woormInfoHandleParam, argumentsParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __RunFunction(HWND _hwnd, BSTR functionNamespace, BSTR arguments) throw(...)
	{

		DataBool returnValueParam;

		DataStr functionNamespaceParam;
		functionNamespaceParam.SetSoapValue(functionNamespace);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr, DataStr>(_hwnd, &RunFunction, functionNamespaceParam, argumentsParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __RunFunctionInNewThread(HWND _hwnd, BSTR functionNamespace, BSTR arguments) throw(...)
	{

		DataStr functionNamespaceParam;
		functionNamespaceParam.SetSoapValue(functionNamespace);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		AfxInvokeThreadGlobalProcedure<DataStr, DataStr>(_hwnd, &RunFunctionInNewThread, functionNamespaceParam, argumentsParam);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __RunEditor(HWND _hwnd, BSTR functionNamespace) throw(...)
	{

		DataBool returnValueParam;

		DataStr functionNamespaceParam;
		functionNamespaceParam.SetSoapValue(functionNamespace);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr>(_hwnd, &RunEditor, functionNamespaceParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CloseDocument(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &CloseDocument, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __RunIconizedDocument(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &RunIconizedDocument, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CanCloseDocument(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &CanCloseDocument, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __ExistDocument(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &ExistDocument, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __DestroyDocument(HWND _hwnd, long documentHandle) throw(...)
	{

		DataBool returnValueParam;

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(documentHandle);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng>(_hwnd, &DestroyDocument, documentHandleParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CloseAllDocuments(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &CloseAllDocuments);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) SAFEARRAY* __GetOpenDocuments(HWND _hwnd) throw(...)
	{

		DataObjArray returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataObjArray>(_hwnd, &GetOpenDocuments);


		CComSafeArray<long> sfarreturnValue;
		sfarreturnValue.Create(returnValueParam.GetSize());

		for (long i = 0; i < (long)sfarreturnValue.GetCount(); i++)
		{
			(sfarreturnValue)[i] = ((DataLng*)returnValueParam.GetAt(i))->GetSoapValue();
		}


		return sfarreturnValue.Detach();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __GetApplicationContextMessages(HWND _hwnd, bool clearMessages, SAFEARRAY** messages, SAFEARRAY** types) throw(...)
	{

		DataBool clearMessagesParam;
		clearMessagesParam.SetSoapValue(clearMessages);

		DataArray messagesParam;

		CComSafeArray<BSTR> sfarmessages;
		if (*messages) {
			sfarmessages.Attach(*messages);
			for (long i = 0; i < (long)sfarmessages.GetCount(); i++) {
				DataStr *pObj = new DataStr();
				pObj->SetCollateCultureSensitive(TRUE);
				pObj->SetSoapValue((sfarmessages)[i]);
				messagesParam.Add(pObj);
			}


		}
		DataArray typesParam;

		CComSafeArray<int> sfartypes;
		if (*types) {
			sfartypes.Attach(*types);
			for (long i = 0; i < (long)sfartypes.GetCount(); i++) {
				DataInt *pObj = new DataInt();
				pObj->SetSoapValue((sfartypes)[i]);
				typesParam.Add(pObj);
			}


		}
		AfxInvokeThreadGlobalProcedure<DataBool, DataArray&, DataArray&>(_hwnd, &GetApplicationContextMessages, clearMessagesParam, messagesParam, typesParam);


		if (sfarmessages.m_psa)
			sfarmessages.Resize(messagesParam.GetSize());
		else
			sfarmessages.Create(messagesParam.GetSize());

		for (long i = 0; i < (long)sfarmessages.GetCount(); i++)
		{
			BSTR bstrmessages = ((DataStr*)messagesParam.GetAt(i))->GetSoapValue();
			(sfarmessages)[i] = bstrmessages;
			::SysFreeString(bstrmessages);
		}


		*messages = sfarmessages.Detach();
		if (sfartypes.m_psa)
			sfartypes.Resize(typesParam.GetSize());
		else
			sfartypes.Create(typesParam.GetSize());

		for (long i = 0; i < (long)sfartypes.GetCount(); i++)
		{
			(sfartypes)[i] = ((DataInt*)typesParam.GetAt(i))->GetSoapValue();
		}


		*types = sfartypes.Detach();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __GetLoginContextMessages(HWND _hwnd, bool clearMessages, SAFEARRAY** messages, SAFEARRAY** types) throw(...)
	{

		DataBool clearMessagesParam;
		clearMessagesParam.SetSoapValue(clearMessages);

		DataArray messagesParam;

		CComSafeArray<BSTR> sfarmessages;
		if (*messages) {
			sfarmessages.Attach(*messages);
			for (long i = 0; i < (long)sfarmessages.GetCount(); i++) {
				DataStr *pObj = new DataStr();
				pObj->SetCollateCultureSensitive(TRUE);
				pObj->SetSoapValue((sfarmessages)[i]);
				messagesParam.Add(pObj);
			}


		}
		DataArray typesParam;

		CComSafeArray<int> sfartypes;
		if (*types) {
			sfartypes.Attach(*types);
			for (long i = 0; i < (long)sfartypes.GetCount(); i++) {
				DataInt *pObj = new DataInt();
				pObj->SetSoapValue((sfartypes)[i]);
				typesParam.Add(pObj);
			}


		}
		AfxInvokeThreadGlobalProcedure<DataBool, DataArray&, DataArray&>(_hwnd, &GetLoginContextMessages, clearMessagesParam, messagesParam, typesParam);


		if (sfarmessages.m_psa)
			sfarmessages.Resize(messagesParam.GetSize());
		else
			sfarmessages.Create(messagesParam.GetSize());

		for (long i = 0; i < (long)sfarmessages.GetCount(); i++)
		{
			BSTR bstrmessages = ((DataStr*)messagesParam.GetAt(i))->GetSoapValue();
			(sfarmessages)[i] = bstrmessages;
			::SysFreeString(bstrmessages);
		}


		*messages = sfarmessages.Detach();
		if (sfartypes.m_psa)
			sfartypes.Resize(typesParam.GetSize());
		else
			sfartypes.Create(typesParam.GetSize());

		for (long i = 0; i < (long)sfartypes.GetCount(); i++)
		{
			(sfartypes)[i] = ((DataInt*)typesParam.GetAt(i))->GetSoapValue();
		}


		*types = sfartypes.Detach();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __OnBeforeCanCloseTB(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &OnBeforeCanCloseTB);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CanCloseTB(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &CanCloseTB);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CanCloseLogin(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &CanCloseLogin);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __CloseLogin(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &CloseLogin);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __IsLoginValid(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &IsLoginValid);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __CloseTB(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &CloseTB);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __DestroyTB(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &DestroyTB);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __AdminDocumentReports(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &AdminDocumentReports);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __AdminDocumentProfiles(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &AdminDocumentProfiles);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __XMLDocumentDescription(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &XMLDocumentDescription);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) BSTR __GetHotlinkQuery(HWND _hwnd, BSTR hotLinkNamespace, BSTR arguments, int action) throw(...)
	{

		DataStr returnValueParam;
		returnValueParam.SetCollateCultureSensitive(TRUE);

		DataStr hotLinkNamespaceParam;
		hotLinkNamespaceParam.SetSoapValue(hotLinkNamespace);

		DataStr argumentsParam;
		argumentsParam.SetCollateCultureSensitive(TRUE);
		argumentsParam.SetSoapValue(arguments);

		DataInt actionParam;
		actionParam.SetSoapValue(action);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataStr, DataStr, DataStr, DataInt>(_hwnd, &GetHotlinkQuery, hotLinkNamespaceParam, argumentsParam, actionParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __GetDocumentParameters(HWND _hwnd, BSTR documentNamespace, BSTR* xmlParams, BSTR code) throw(...)
	{

		DataBool returnValueParam;

		DataStr documentNamespaceParam;
		documentNamespaceParam.SetSoapValue(documentNamespace);

		DataStr xmlParamsParam;
		xmlParamsParam.SetCollateCultureSensitive(TRUE);
		xmlParamsParam.SetSoapValue(*xmlParams);

		DataStr codeParam;
		codeParam.SetCollateCultureSensitive(TRUE);
		codeParam.SetSoapValue(code);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr, DataStr&, DataStr>(_hwnd, &GetDocumentParameters, documentNamespaceParam, xmlParamsParam, codeParam);

		SysFreeString(*xmlParams);
		*xmlParams = xmlParamsParam.GetSoapValue();

		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __GetReportParameters(HWND _hwnd, BSTR reportNamespace, BSTR* xmlParams, BSTR code) throw(...)
	{

		DataBool returnValueParam;

		DataStr reportNamespaceParam;
		reportNamespaceParam.SetSoapValue(reportNamespace);

		DataStr xmlParamsParam;
		xmlParamsParam.SetCollateCultureSensitive(TRUE);
		xmlParamsParam.SetSoapValue(*xmlParams);

		DataStr codeParam;
		codeParam.SetSoapValue(code);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr, DataStr&, DataStr>(_hwnd, &GetReportParameters, reportNamespaceParam, xmlParamsParam, codeParam);

		SysFreeString(*xmlParams);
		*xmlParams = xmlParamsParam.GetSoapValue();

		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __RunBatchInUnattendedMode(HWND _hwnd, BSTR documentNamespace, BSTR xmlParams, long* documentHandle, SAFEARRAY** messages) throw(...)
	{

		DataBool returnValueParam;

		DataStr documentNamespaceParam;
		documentNamespaceParam.SetSoapValue(documentNamespace);

		DataStr xmlParamsParam;
		xmlParamsParam.SetCollateCultureSensitive(TRUE);
		xmlParamsParam.SetSoapValue(xmlParams);

		DataLng documentHandleParam;
		documentHandleParam.SetSoapValue(*documentHandle);

		DataObjArray messagesParam;

		CComSafeArray<BSTR> sfarmessages;
		if (*messages) {
			sfarmessages.Attach(*messages);
			for (long i = 0; i < (long)sfarmessages.GetCount(); i++) {
				DataStr *pObj = new DataStr();
				pObj->SetCollateCultureSensitive(TRUE);
				pObj->SetSoapValue((sfarmessages)[i]);
				messagesParam.Add(pObj);
			}


		}
		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr, DataStr, DataLng&, DataObjArray&>(_hwnd, &RunBatchInUnattendedMode, documentNamespaceParam, xmlParamsParam, documentHandleParam, messagesParam);

		*documentHandle = documentHandleParam.GetSoapValue();

		if (sfarmessages.m_psa)
			sfarmessages.Resize(messagesParam.GetSize());
		else
			sfarmessages.Create(messagesParam.GetSize());

		for (long i = 0; i < (long)sfarmessages.GetCount(); i++)
		{
			BSTR bstrmessages = ((DataStr*)messagesParam.GetAt(i))->GetSoapValue();
			(sfarmessages)[i] = bstrmessages;
			::SysFreeString(bstrmessages);
		}


		*messages = sfarmessages.Detach();
		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __RunReportInUnattendedMode(HWND _hwnd, long woormInfoHandle, BSTR xmlParams, long* reportHandle, SAFEARRAY** messages) throw(...)
	{

		DataBool returnValueParam;

		DataLng woormInfoHandleParam;
		woormInfoHandleParam.SetSoapValue(woormInfoHandle);

		DataStr xmlParamsParam;
		xmlParamsParam.SetCollateCultureSensitive(TRUE);
		xmlParamsParam.SetSoapValue(xmlParams);

		DataLng reportHandleParam;
		reportHandleParam.SetSoapValue(*reportHandle);

		DataObjArray messagesParam;

		CComSafeArray<BSTR> sfarmessages;
		if (*messages) {
			sfarmessages.Attach(*messages);
			for (long i = 0; i < (long)sfarmessages.GetCount(); i++) {
				DataStr *pObj = new DataStr();
				pObj->SetCollateCultureSensitive(TRUE);
				pObj->SetSoapValue((sfarmessages)[i]);
				messagesParam.Add(pObj);
			}


		}
		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataLng, DataStr, DataLng&, DataObjArray&>(_hwnd, &RunReportInUnattendedMode, woormInfoHandleParam, xmlParamsParam, reportHandleParam, messagesParam);

		*reportHandle = reportHandleParam.GetSoapValue();

		if (sfarmessages.m_psa)
			sfarmessages.Resize(messagesParam.GetSize());
		else
			sfarmessages.Create(messagesParam.GetSize());

		for (long i = 0; i < (long)sfarmessages.GetCount(); i++)
		{
			BSTR bstrmessages = ((DataStr*)messagesParam.GetAt(i))->GetSoapValue();
			(sfarmessages)[i] = bstrmessages;
			::SysFreeString(bstrmessages);
		}


		*messages = sfarmessages.Detach();
		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) BSTR __GetApplicationDate(HWND _hwnd) throw(...)
	{

		DataDate returnValueParam;
		returnValueParam.SetFullDate(TRUE);
		returnValueParam.SetAsTime(FALSE);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataDate>(_hwnd, &GetApplicationDate);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __GetApplicationYear(HWND _hwnd) throw(...)
	{

		DataInt returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt>(_hwnd, &GetApplicationYear);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __GetApplicationMonth(HWND _hwnd) throw(...)
	{

		DataInt returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt>(_hwnd, &GetApplicationMonth);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __GetApplicationDay(HWND _hwnd) throw(...)
	{

		DataInt returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt>(_hwnd, &GetApplicationDay);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __EnableSoapFunctionExecutionControl(HWND _hwnd, bool enable) throw(...)
	{

		DataBool returnValueParam;

		DataBool enableParam;
		enableParam.SetSoapValue(enable);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataBool>(_hwnd, &EnableSoapFunctionExecutionControl, enableParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __CanChangeLogin(HWND _hwnd, bool bLock) throw(...)
	{

		DataBool returnValueParam;

		DataBool bLockParam;
		bLockParam.SetSoapValue(bLock);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataBool>(_hwnd, &CanChangeLogin, bLockParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __ChangeLogin(HWND _hwnd, BSTR oldAuthenticationToken, BSTR newAuthenticationToken, bool bUnLock) throw(...)
	{

		DataInt returnValueParam;

		DataStr oldAuthenticationTokenParam;
		oldAuthenticationTokenParam.SetSoapValue(oldAuthenticationToken);

		DataStr newAuthenticationTokenParam;
		newAuthenticationTokenParam.SetSoapValue(newAuthenticationToken);

		DataBool bUnLockParam;
		bUnLockParam.SetSoapValue(bUnLock);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt, DataStr, DataStr, DataBool>(_hwnd, &ChangeLogin, oldAuthenticationTokenParam, newAuthenticationTokenParam, bUnLockParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __IsTBLocked(HWND _hwnd) throw(...)
	{

		DataBool returnValueParam;

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool>(_hwnd, &IsTBLocked);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __LockTB(HWND _hwnd, BSTR authenticationToken) throw(...)
	{

		DataBool returnValueParam;

		DataStr authenticationTokenParam;
		authenticationTokenParam.SetSoapValue(authenticationToken);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr>(_hwnd, &LockTB, authenticationTokenParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) bool __UnLockTB(HWND _hwnd, BSTR authenticationToken) throw(...)
	{

		DataBool returnValueParam;

		DataStr authenticationTokenParam;
		authenticationTokenParam.SetSoapValue(authenticationToken);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataBool, DataStr>(_hwnd, &UnLockTB, authenticationTokenParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) void __ClearCache(HWND _hwnd) throw(...)
	{

		AfxInvokeThreadGlobalProcedure(_hwnd, &ClearCache);


	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __DisconnectCompany(HWND _hwnd, BSTR authenticationToken) throw(...)
	{

		DataInt returnValueParam;

		DataStr authenticationTokenParam;
		authenticationTokenParam.SetCollateCultureSensitive(TRUE);
		authenticationTokenParam.SetSoapValue(authenticationToken);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt, DataStr>(_hwnd, &DisconnectCompany, authenticationTokenParam);


		return returnValueParam.GetSoapValue();
	}

	//File: Framework\TbGes\TbGesSoapFunctions.cpp.
	extern "C" __declspec(dllexport) int __ReconnectCompany(HWND _hwnd, BSTR authenticationToken) throw(...)
	{

		DataInt returnValueParam;

		DataStr authenticationTokenParam;
		authenticationTokenParam.SetCollateCultureSensitive(TRUE);
		authenticationTokenParam.SetSoapValue(authenticationToken);

		returnValueParam = AfxInvokeThreadGlobalFunction<DataInt, DataStr>(_hwnd, &ReconnectCompany, authenticationTokenParam);


		return returnValueParam.GetSoapValue();
	}
}

TB_REGISTER_SOAP_SERVICE(TbGesTbGes::CTbGesTbGes)