//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.Snap.Services.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microarea.Snap.Services.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I cannot read product installation path neither from registry nor from my execution path, please use snapinstaller.exe -pf &lt;product folder path&gt; to initialize that value.
        /// </summary>
        internal static string CannotReadInstallationPathFromRegistry {
            get {
                return ResourceManager.GetString("CannotReadInstallationPathFromRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not exist, I cannot uninstall anything.
        /// </summary>
        internal static string CannotUninstallWhereNotExist {
            get {
                return ResourceManager.GetString("CannotUninstallWhereNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes successfully applied.
        /// </summary>
        internal static string ChangesSuccessfullyApplied {
            get {
                return ResourceManager.GetString("ChangesSuccessfullyApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClickOnceDeployer terminated.
        /// </summary>
        internal static string ClickOnceTerminated {
            get {
                return ResourceManager.GetString("ClickOnceTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClickOnceDeployer terminated with errors, see ClickOnceDeployer log for details.
        /// </summary>
        internal static string ClickOnceTerminatedWithErrors {
            get {
                return ResourceManager.GetString("ClickOnceTerminatedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error installing {0}.
        /// </summary>
        internal static string ErrorInstallingPackage {
            get {
                return ResourceManager.GetString("ErrorInstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading installed dictionaries.
        /// </summary>
        internal static string ErrorReadingInstalledDictionaries {
            get {
                return ResourceManager.GetString("ErrorReadingInstalledDictionaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading product installation path.
        /// </summary>
        internal static string ErrorReadingProductInstallationPath {
            get {
                return ResourceManager.GetString("ErrorReadingProductInstallationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error uninstalling {0}.
        /// </summary>
        internal static string ErrorUninstallingPackage {
            get {
                return ResourceManager.GetString("ErrorUninstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error updating {0}.
        /// </summary>
        internal static string ErrorUpdatingPackage {
            get {
                return ResourceManager.GetString("ErrorUpdatingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {0} from {1}.
        /// </summary>
        internal static string InstallingPackage {
            get {
                return ResourceManager.GetString("InstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalidating menu cache.
        /// </summary>
        internal static string InvalidatingMenuCache {
            get {
                return ResourceManager.GetString("InvalidatingMenuCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching ClickOnceDeployer....
        /// </summary>
        internal static string LaunchingClickOnce {
            get {
                return ResourceManager.GetString("LaunchingClickOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu cache invalidated.
        /// </summary>
        internal static string MenuCacheInvalidated {
            get {
                return ResourceManager.GetString("MenuCacheInvalidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find any manifest in the given package.
        /// </summary>
        internal static string NoManifest {
            get {
                return ResourceManager.GetString("NoManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find any manifest id in the given package.
        /// </summary>
        internal static string NoManifestId {
            get {
                return ResourceManager.GetString("NoManifestId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to where folder does not exist, I&apos;ll create it.
        /// </summary>
        internal static string NoWhereFolder {
            get {
                return ResourceManager.GetString("NoWhereFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null package id received.
        /// </summary>
        internal static string NullPackageIdReceived {
            get {
                return ResourceManager.GetString("NullPackageIdReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null package received.
        /// </summary>
        internal static string NullPackageReceived {
            get {
                return ResourceManager.GetString("NullPackageReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null where folder received.
        /// </summary>
        internal static string NullWhereFolderReceived {
            get {
                return ResourceManager.GetString("NullWhereFolderReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is already present and its version is {1} whereas the passed package version is {2}.
        /// </summary>
        internal static string PackageIdAlreadyPresentDifferentVersion {
            get {
                return ResourceManager.GetString("PackageIdAlreadyPresentDifferentVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not installed, I cannot uninstall it.
        /// </summary>
        internal static string PackageIdNotInstalled {
            get {
                return ResourceManager.GetString("PackageIdNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to package id is white spaces.
        /// </summary>
        internal static string PackageIdWhiteSpaces {
            get {
                return ResourceManager.GetString("PackageIdWhiteSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} installed.
        /// </summary>
        internal static string PackageInstalled {
            get {
                return ResourceManager.GetString("PackageInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package registry folder does not exist, trying to create it....
        /// </summary>
        internal static string PackageRegistryFolderDoesNotExist {
            get {
                return ResourceManager.GetString("PackageRegistryFolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package registry folder successfully created.
        /// </summary>
        internal static string PackageRegistrySuccessfullyCreated {
            get {
                return ResourceManager.GetString("PackageRegistrySuccessfullyCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} uninstalled.
        /// </summary>
        internal static string PackageUninstalled {
            get {
                return ResourceManager.GetString("PackageUninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} updated.
        /// </summary>
        internal static string PackageUpdated {
            get {
                return ResourceManager.GetString("PackageUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product installation path is not set, trying to calculate it from my file system location.
        /// </summary>
        internal static string ProductInstallationPathNotSet {
            get {
                return ResourceManager.GetString("ProductInstallationPathNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Product installation path successfully set to {0}.
        /// </summary>
        internal static string ProductInstallationPathSet {
            get {
                return ResourceManager.GetString("ProductInstallationPathSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProductInstanceFolder cannot be empty.
        /// </summary>
        internal static string SentProductFolderCannotBeEmpty {
            get {
                return ResourceManager.GetString("SentProductFolderCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ProductInstanceFolder cannot be null.
        /// </summary>
        internal static string SentProductFolderCannotBeNull {
            get {
                return ResourceManager.GetString("SentProductFolderCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} doesn&apos;t exist or it isn&apos;t a folder.
        /// </summary>
        internal static string SentProductFolderDoesNotExist {
            get {
                return ResourceManager.GetString("SentProductFolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting up last details....
        /// </summary>
        internal static string SettingUpLastDetails {
            get {
                return ResourceManager.GetString("SettingUpLastDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling {0}.
        /// </summary>
        internal static string UninstallingPackage {
            get {
                return ResourceManager.GetString("UninstallingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating {0} from {1}.
        /// </summary>
        internal static string UpdatingPackage {
            get {
                return ResourceManager.GetString("UpdatingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to where is null.
        /// </summary>
        internal static string WhereNull {
            get {
                return ResourceManager.GetString("WhereNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is built for another product.
        /// </summary>
        internal static string WrongProduct {
            get {
                return ResourceManager.GetString("WrongProduct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is built for another version of the product.
        /// </summary>
        internal static string WrongProductVersion {
            get {
                return ResourceManager.GetString("WrongProductVersion", resourceCulture);
            }
        }
    }
}
