{"__symbolic":"module","version":3,"metadata":{"TaskbuilderCoreModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[[{"__symbolic":"reference","name":"TbCoreModule"},{"__symbolic":"reference","name":"TbSharedModule"},{"__symbolic":"reference","name":"TbMenuModule"},{"__symbolic":"reference","name":"TbIconsModule"}]],"exports":[[{"__symbolic":"reference","name":"TbCoreModule"},{"__symbolic":"reference","name":"TbSharedModule"},{"__symbolic":"reference","name":"TbMenuModule"},{"__symbolic":"reference","name":"TbIconsModule"}]]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"TaskbuilderCoreModule"}}}}},"TbCoreModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"declarations":[[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"}],[{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbe"}],[{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵbl"},{"__symbolic":"reference","name":"ɵbm"},{"__symbolic":"reference","name":"ɵbn"},{"__symbolic":"reference","name":"ɵbo"},{"__symbolic":"reference","name":"ɵbp"},{"__symbolic":"reference","name":"ɵbq"},{"__symbolic":"reference","name":"ɵbr"},{"__symbolic":"reference","name":"ɵbs"},{"__symbolic":"reference","name":"ɵbt"},{"__symbolic":"reference","name":"ɵbu"},{"__symbolic":"reference","name":"ɵbv"},{"__symbolic":"reference","name":"ɵbw"},{"__symbolic":"reference","name":"ɵbx"},{"__symbolic":"reference","name":"ɵby"},{"__symbolic":"reference","name":"ɵbz"},{"__symbolic":"reference","name":"ɵca"},{"__symbolic":"reference","name":"ɵcb"},{"__symbolic":"reference","name":"ɵcc"},{"__symbolic":"reference","name":"ɵcd"},{"__symbolic":"reference","name":"ɵce"},{"__symbolic":"reference","name":"ɵcf"},{"__symbolic":"reference","name":"ɵcg"},{"__symbolic":"reference","name":"ɵch"},{"__symbolic":"reference","name":"ɵci"},{"__symbolic":"reference","name":"ɵcj"},{"__symbolic":"reference","name":"ɵck"}]],"exports":[[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"}],[{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbe"}],[{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵbl"},{"__symbolic":"reference","name":"ɵbm"},{"__symbolic":"reference","name":"ɵbn"},{"__symbolic":"reference","name":"ɵbo"},{"__symbolic":"reference","name":"ɵbp"},{"__symbolic":"reference","name":"ɵbq"},{"__symbolic":"reference","name":"ɵbr"},{"__symbolic":"reference","name":"ɵbs"},{"__symbolic":"reference","name":"ɵbt"},{"__symbolic":"reference","name":"ɵbu"},{"__symbolic":"reference","name":"ɵbv"},{"__symbolic":"reference","name":"ɵbw"},{"__symbolic":"reference","name":"ɵbx"},{"__symbolic":"reference","name":"ɵby"},{"__symbolic":"reference","name":"ɵbz"},{"__symbolic":"reference","name":"ɵca"},{"__symbolic":"reference","name":"ɵcb"},{"__symbolic":"reference","name":"ɵcc"},{"__symbolic":"reference","name":"ɵcd"},{"__symbolic":"reference","name":"ɵce"},{"__symbolic":"reference","name":"ɵcf"},{"__symbolic":"reference","name":"ɵcg"},{"__symbolic":"reference","name":"ɵch"},{"__symbolic":"reference","name":"ɵci"},{"__symbolic":"reference","name":"ɵcj"},{"__symbolic":"reference","name":"ɵck"}]],"providers":[[{"__symbolic":"reference","name":"ɵcl"},{"__symbolic":"reference","name":"ɵcm"},{"__symbolic":"reference","name":"ɵcn"},{"__symbolic":"reference","name":"ɵco"},{"__symbolic":"reference","name":"ɵcp"},{"__symbolic":"reference","name":"ɵcq"},{"__symbolic":"reference","name":"ɵcr"},{"__symbolic":"reference","name":"ɵcs"},{"__symbolic":"reference","name":"ɵct"},{"__symbolic":"reference","name":"ɵcu"},{"__symbolic":"reference","name":"ɵcv"},{"__symbolic":"reference","name":"ɵcw"},{"__symbolic":"reference","name":"ɵcx"},{"__symbolic":"reference","name":"ɵcy"},{"__symbolic":"reference","name":"ɵcz"},{"__symbolic":"reference","name":"ɵda"},{"__symbolic":"reference","name":"ɵdb"}],[{"__symbolic":"reference","name":"ɵdc"}]]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"SkipSelf"}}]],"parameters":[{"__symbolic":"reference","name":"TbCoreModule"}]}]},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"TbCoreModule"},"providers":[[{"__symbolic":"reference","name":"ɵcl"},{"__symbolic":"reference","name":"ɵcm"},{"__symbolic":"reference","name":"ɵcn"},{"__symbolic":"reference","name":"ɵco"},{"__symbolic":"reference","name":"ɵcp"},{"__symbolic":"reference","name":"ɵcq"},{"__symbolic":"reference","name":"ɵcr"},{"__symbolic":"reference","name":"ɵcs"},{"__symbolic":"reference","name":"ɵct"},{"__symbolic":"reference","name":"ɵcu"},{"__symbolic":"reference","name":"ɵcv"},{"__symbolic":"reference","name":"ɵcw"},{"__symbolic":"reference","name":"ɵcx"},{"__symbolic":"reference","name":"ɵcy"},{"__symbolic":"reference","name":"ɵcz"},{"__symbolic":"reference","name":"ɵda"},{"__symbolic":"reference","name":"ɵdb"}],[{"__symbolic":"reference","name":"ɵdc"}]]}}}},"BOService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"DocumentService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"BOHelperService"},{"__symbolic":"reference","name":"EventDataService"}]}],"getPatchedData":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"dispose":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"isServerSideCommand":[{"__symbolic":"method"}],"registerModelField":[{"__symbolic":"method"}],"doCommand":[{"__symbolic":"method"}],"doChange":[{"__symbolic":"method"}],"onCommand":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"doEvent":[{"__symbolic":"method"}]}},"BOClient":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"BOService"}]}],"init":[{"__symbolic":"method"}],"onCommand":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}]}},"BOHelperService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"WebSocketService"}]}]}},"ComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"HttpService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"UtilsService"}]}],"argsToString":[{"__symbolic":"method"}],"createReportComponent":[{"__symbolic":"method"}],"dispose":[{"__symbolic":"method"}],"createNextComponent":[{"__symbolic":"method"}],"addComponent":[{"__symbolic":"method"}],"removeComponent":[{"__symbolic":"method"}],"removeComponentById":[{"__symbolic":"method"}],"createComponentFromUrl":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}],"onComponentCreated":[{"__symbolic":"method"}]}},"ComponentCreatedArgs":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Number"},{"__symbolic":"reference","name":"boolean"}]}]}},"DataService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"DocumentService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"EventDataService"},{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"ɵdm"}]}],"getData":[{"__symbolic":"method"}],"getColumns":[{"__symbolic":"method"}],"getSelections":[{"__symbolic":"method"}],"getParameters":[{"__symbolic":"method"}]}},"DocumentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"EventDataService"}]}],"init":[{"__symbolic":"method"}],"dispose":[{"__symbolic":"method"}],"getTitle":[{"__symbolic":"method"}],"getViewModeType":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}]}},"EnumsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"}]}],"getEnumsTable":[{"__symbolic":"method"}],"getEnumsItem":[{"__symbolic":"method"}],"getItemsFromTag":[{"__symbolic":"method"}],"dispose":[{"__symbolic":"method"}]}},"EventDataService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"ExplorerService":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"DocumentService"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"EventDataService"}]}],"setSelectedApplication":[{"__symbolic":"method"}]}},"HttpService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"ɵdm"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"}]}],"createOperationResult":[{"__symbolic":"method"}],"isLogged":[{"__symbolic":"method"}],"getInstallationInfo":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"getCompaniesForUser":[{"__symbolic":"method"}],"isActivated":[{"__symbolic":"method"}],"loginCompact":[{"__symbolic":"method"}],"logoff":[{"__symbolic":"method"}],"logout":[{"__symbolic":"method"}],"runDocument":[{"__symbolic":"method"}],"runReport":[{"__symbolic":"method"}],"postData":[{"__symbolic":"method"}],"getComponentUrl":[{"__symbolic":"method"}],"getBaseUrl":[{"__symbolic":"method"}],"getDocumentBaseUrl":[{"__symbolic":"method"}],"getMenuBaseUrl":[{"__symbolic":"method"}],"getAccountManagerBaseUrl":[{"__symbolic":"method"}],"getMenuServiceUrl":[{"__symbolic":"method"}],"getEnumsServiceUrl":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"getEnumsTable":[{"__symbolic":"method"}]}},"InfoService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"}]}]}},"LayoutService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"setViewHeight":[{"__symbolic":"method"}],"getViewHeight":[{"__symbolic":"method"}]}},"Logger":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"log":[{"__symbolic":"method"}],"info":[{"__symbolic":"method"}],"debug":[{"__symbolic":"method"}],"warn":[{"__symbolic":"method"}],"error":[{"__symbolic":"method"}]}},"LoginSessionService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"},{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","module":"@angular/router","name":"Router"}]}],"checkIfLogged":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"logout":[{"__symbolic":"method"}],"isConnected":[{"__symbolic":"method"}],"setConnected":[{"__symbolic":"method"}]}},"SidenavService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"toggleSidenav":[{"__symbolic":"method"}]}},"TabberService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"selectTab":[{"__symbolic":"method"}]}},"UtilsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"}]}],"serializeData":[{"__symbolic":"method"}],"generateGUID":[{"__symbolic":"method"}],"toArray":[{"__symbolic":"method"}],"parseBool":[{"__symbolic":"method"}],"getApplicationFromQueryString":[{"__symbolic":"method"}],"hexToRgba":[{"__symbolic":"method"}]}},"WebSocketService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"},{"__symbolic":"reference","name":"ɵdm"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","name":"Logger"}]}],"wsConnect":[{"__symbolic":"method"}],"wsClose":[{"__symbolic":"method"}],"doFillListBox":[{"__symbolic":"method"}],"doCommand":[{"__symbolic":"method"}],"doValueChanged":[{"__symbolic":"method"}],"getDocumentData":[{"__symbolic":"method"}],"checkMessageDialog":[{"__symbolic":"method"}],"doCloseMessageDialog":[{"__symbolic":"method"}],"setReportResult":[{"__symbolic":"method"}]}},"SocketMessage":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"string"},{"__symbolic":"reference","name":"any"}]}]}},"CoreGuard":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","name":"LoginSessionService"}]}],[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","name":"InfoService"}]}]],"parameters":[{"__symbolic":"reference","name":"LoginSessionService"},{"__symbolic":"reference","name":"InfoService"}]}],"canActivate":[{"__symbolic":"method"}]}},"FrameComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-frame","template":"<div [style.height.px]=\"viewHeight\" class=\"tb-frame\"> <ng-content></ng-content> </div>","styles":[".tb-frame { display: flex; flex-direction: column; } "]}]}],"members":{"viewHeight":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding"},"arguments":["style.height"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LayoutService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"FrameContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-frame-content","template":"<ng-content></ng-content>","styles":[":host(tb-frame-content) { flex: 1 1 auto; overflow: hidden; display: flex; flex-direction: column; } :host(tb-frame-content).scroll { overflow: scroll; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ViewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-view","template":"<ng-content></ng-content>","styles":[":host(tb-view) { display: flex; flex: 1; max-width: 100%; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ViewContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-view-container","template":"<ng-content></ng-content>","styles":[":host(tb-view-container) { display: flex; flex: 1; max-width: 100%; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"DockpaneComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-dockpane","template":"<div class=\"tb-dockpane\"> <ng-content></ng-content> </div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"DockpaneContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-dockpane-container","template":"<ng-content></ng-content>","styles":[":host(tb-dockpane-container) { display: none; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TileManagerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-tilemanager","template":"<div class=\"tile-manager\"> <kendo-tabstrip #tabber (tabSelect)=\"changeTabByIndex($event)\"> <kendo-tabstrip-tab *ngFor=\"let tile of getTiles();let i = index\" [selected]=\"i == 0\"> <ng-template kendoTabTitle> <tb-icon [iconType]=\"tile?.iconType\" [icon]=\"tile?.icon\"></tb-icon> <span>{{tile?.title}}</span> </ng-template> <template kendoTabContent> <div class='kendoTabContent' [style.height.px]=\"viewHeight\"> <ng-content></ng-content> </div> </template> </kendo-tabstrip-tab> </kendo-tabstrip> </div>","styles":["tb-tilemanager { flex: 1; max-width: 100%; } .tile-manager { flex: 1; display: flex; min-height: 100%; } .tile-manager .k-tabstrip { flex-direction: row; display: flex; flex: 1; max-width: 100%; } .tile-manager .k-tabstrip-top > .k-content { flex: 1; background-color: transparent; } .tile-manager .k-tabstrip > .k-tabstrip-items { flex-direction: column; flex: 0 0 60px; background: #fff; } @media screen and (min-width: 48em) { .tile-manager .k-tabstrip > .k-tabstrip-items { flex: 0 0 160px; } } @media screen and (min-width: 64em) { .tile-manager .k-tabstrip > .k-tabstrip-items { flex: 0 0 200px; } } @media screen and (min-width: 75em) { .tile-manager .k-tabstrip > .k-tabstrip-items { flex: 0 0 260px; } } .tile-manager .k-item .k-link { display: flex; flex-direction: row; flex: 1; align-items: center; } .tile-manager .k-item .k-link img { margin-right: 5px; } .tile-manager .k-item .k-link span { font-size: 12px; color: #000; } .tile-manager .k-item.k-state-active { border: none; background: #f1f4f7; } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"tiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChildren"},"arguments":[{"__symbolic":"reference","name":"TileGroupComponent"}]}]}],"getTiles":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LayoutService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterContentInit":[{"__symbolic":"method"}],"selectTile":[{"__symbolic":"method"}],"changeTabByIndex":[{"__symbolic":"method"}]}},"TileGroupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-tilegroup","template":"<div class=\"tile-group\" *ngIf=\"active\"> <ng-content></ng-content> </div>","styles":[".tile-group { flex-direction: row; flex-wrap: wrap; justify-content: flex-start; padding-bottom: 100px; } "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"iconType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TileComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-tile","template":"<!--<md-card [ngClass]=\"{'sameHeight': !isCollapsed}\"> <md-card-title (click)=\"toggleCollapse($event)\" *ngIf=\"hasTitle\" [ngClass]=\"{'c-pointer': isCollapsible }\"> <span>{{title}}</span> <md-icon *ngIf=\"isCollapsible\">{{getArrowIcon()}}</md-icon> </md-card-title> <md-card-content *ngIf=\"!isCollapsed\"> <ng-content></ng-content> </md-card-content> </md-card>--> <div [ngClass]=\"{'sameHeight': !isCollapsed}\" class=\"tbcard\"> <tb-card-title [ngClass]=\"{'c-pointer': isCollapsible }\" [isCollapsible]=\"isCollapsible\" [isCollapsed]=\"isCollapsed\" (click)=\"toggleCollapse($event)\" *ngIf=\"hasTitle\" [title]=\"title\"></tb-card-title> <md-card-content *ngIf=\"!isCollapsed\"> <ng-content></ng-content> </md-card-content> </div>","styles":[".h200 md-card-content { min-height: 200px; max-height: 200px; overflow: auto; } tb-tile { flex: 1; } tb-tile.tile-micro { flex: 0 0 12.5%; } tb-tile.tile-mini { flex: 0 0 25%; } tb-tile.tile-standard { flex: 0 0 50%; } tb-tile.tile-wide { flex: 0 0 100%; } tb-tile.tile-autofill { flex: 1; } tb-tile.tile-standard md-card.sameHeight { height: 100%; } tb-tile.tile-standard div.sameHeight { height: 100%; } tb-tile.tile-wide md-card-content { display: flex; flex-direction: column; } tb-tile.tile-wide .col { flex: 0 0 100%; } tb-tile.tile-wide .col2 { margin-left: 16px; } .anchored { display: flex; flex-direction: column; } tb-tile > div { background: white; margin: 5px 5px 0px 5px; padding: 5px; } tb-tile > div tb-card-title { position: relative; font-size: 1.2rem; font-weight: 500; color: #000; font-size: 1rem; text-transform: uppercase; } tb-tile > div tb-card-title div { display: flex; flex-wrap: nowrap; flex-basis: row; } tb-tile > div tb-card-title div span { flex: 2 0 0%; align-self: flex-start; } tb-tile > div tb-card-title div md-icon { align-self: flex-end; } tb-tile > div md-card-content { border-top: 0px; display: flex; flex-wrap: nowrap; flex-basis: row; } @media screen and (min-width: 48em) { tb-tile.tile-wide md-card-content { flex-direction: row; } tb-tile.tile-wide .col { flex: 0 0 100%; } } @media screen and (min-width: 75em) { tb-tile.tile-wide md-card-content { flex-direction: row; } tb-tile.tile-wide .col { flex: 0 0 50%; } .anchored { flex-direction: row; } } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["title"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getArrowIcon":[{"__symbolic":"method"}],"toggleCollapse":[{"__symbolic":"method"}],"isCollapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isCollapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"hasTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"TilePanelComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-tilepanel","template":"<div class=\"tile-panel\"> <md-card-title (click)=\"toggleCollapse($event)\" *ngIf=\"showAsTile\" [ngClass]=\"{'c-pointer': isCollapsible }\"> <span>{{title}}</span> <md-icon *ngIf=\"isCollapsible\">{{getArrowIcon()}}</md-icon> </md-card-title> <md-card-content *ngIf=\"!isCollapsed\"> <ng-content></ng-content> </md-card-content> </div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"showAsTile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"toggleCollapse":[{"__symbolic":"method"}],"getArrowIcon":[{"__symbolic":"method"}]}},"LayoutContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-layoutcontainer","template":"<ng-content></ng-content>","styles":[":host { display: flex; flex-direction: column; margin-bottom: 16px; } :host(.layoutType-column) { flex-direction: row; flex: 0 0 100%; } :host(.layoutType-hbox) { display: flex; flex-direction: row; } :host(.layoutType-vbox) { display: flex; flex-direction: column; } @media screen and (min-width: 75em) { .layout-container { flex-direction: row; } } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"MessageDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-message-dialog","template":"<kendo-dialog title=\"Please confirm\" *ngIf=\"opened\" (close)=\"close('cancel')\"> <p style=\"margin: 30px; text-align: center;\">{{args.text}}</p> <kendo-dialog-actions> <button *ngIf=\"args.no\" kendoButton (click)=\"close('no')\">No</button> <button *ngIf=\"args.yes\" kendoButton (click)=\"close('yes')\" primary=\"true\">Yes</button> <button *ngIf=\"args.cancel\" kendoButton (click)=\"close('cancel')\">Cancel</button> <button *ngIf=\"args.ok\" kendoButton (click)=\"close('ok')\"primary=\"true\">Ok</button> <button *ngIf=\"args.retry\" kendoButton (click)=\"close('retry')\">Retry</button> <button *ngIf=\"args.continue\" kendoButton (click)=\"close('continue')\">Continue</button> <button *ngIf=\"args.abort\" kendoButton (click)=\"close('abort')\">Abort</button> <button *ngIf=\"args.ignore\" kendoButton (click)=\"close('ignore')\">Ignore</button> </kendo-dialog-actions> </kendo-dialog>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"open":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}]}},"MessageDlgArgs":{"__symbolic":"class","members":{}},"MessageDlgResult":{"__symbolic":"class","members":{}},"BOComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"DocumentComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-bo","template":"","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"BOService"},{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"DocumentComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"TbComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-document","template":"","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DocumentService"},{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"DynamicCmpComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-dynamic-cmp","template":"<div #cmpContainer></div><tb-message-dialog></tb-message-dialog>"}]}],"members":{"componentInfo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cmpContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["cmpContainer",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef"}}]}]}],"messageDialog":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","name":"MessageDialogComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ComponentService"}]}],"ngOnInit":[{"__symbolic":"method"}],"createComponent":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"openMessageDialog":[{"__symbolic":"method"}]}},"PageNotFoundComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-page-not-found","template":"\n    <p>Page not found</p>\n  ","styles":[]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TbComponent":{"__symbolic":"class","members":{"cmpId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"TopbarComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar","template":"<md-toolbar color=\"primary\"> <md-icon id=\"toggle-sidebar\" (click)=\"toggleSidenav()\">menu</md-icon> <div class=\"topbar-title\"> <ng-content select=\".topbar-title-content\"></ng-content> </div> <div class=\"fill-remaining-space\"> <ng-content select=\".topbar-center\"></ng-content> </div> <div class=\"topbar-menu\"> <ng-content select=\".topbar-menu-content\"></ng-content> </div> </md-toolbar>","styles":[".fill-remaining-space { flex: 1 1 auto; text-align: center; } #toggle-sidebar { cursor: pointer; margin-right: 10px; } tb-topbar md-toolbar.md-primary { min-height: 53px; } tb-topbar md-toolbar md-toolbar-row { height: 53px !important; min-height: 53px !important; } tb-topbar .topbar-title { margin-left: 5px; } tb-topbar .topbar-title h1, tb-topbar .topbar-title h2 { margin: 0; padding: 0; } tb-topbar .topbar-title h1 { font-size: 22px; color: #fff; } tb-topbar .topbar-title h2 { font-size: 12px; font-weight: normal; } tb-topbar .mat-toolbar { min-height: 55px; } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SidenavService"}]}],"ngOnInit":[{"__symbolic":"method"}],"toggleSidenav":[{"__symbolic":"method"}]}},"TopbarMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar-menu","template":"<div class=\"tbcontainer\"> <tb-topbar-menu-test class=\"topbar-menu-layout\"></tb-topbar-menu-test> <tb-topbar-menu-user class=\"topbar-menu-layout\"></tb-topbar-menu-user> <tb-topbar-menu-app class=\"topbar-menu-layout\"></tb-topbar-menu-app> </div>","styles":[".tbcontainer { display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -webkit-flex; display: flex; flex-direction: row; flex-wrap: nowrap; align-items: baseline; justify-content: flex-end; } .topbar-menu-layout { padding: 10px; } .tbcontainer .topbar-menu-layout .k-button { color: white; background-color: #00578c; background-image: none; border-color: transparent; border: 0; border-radius: 0px; } .tbcontainer .topbar-menu-layout .topbar-menu-button { background-color: transparent; border-width: 0px; border-style: none; border-color: transparent; border-image: none; padding-top: 5px; margin: 0px; } .tbcontainer .topbar-menu-layout .k-button:hover { color: #0277BD; background-color: white; background-image: none; border-color: #00578c; border: 0; border-left: 2px; border-right: 2px; border-radius: 0px; } .tbcontainer .topbar-menu-layout .topbar-menu-button:focus, .tbcontainer .topbar-menu-layout .topbar-menu-button:active { background-color: #00578c; background-image: none; border-color: #00578c; border: 0; border-radius: 0px; } .tbcontainer .topbar-menu-layout.k-list .tbcontainer .topbar-menu-layout.k-item:focus, .tbcontainer .topbar-menu-layout.k-list .tbcontainer .topbar-menu-layout.k-item.k-state-focused { box-shadow: inset 0 0 0 0 transparent; } .tbcontainer .topbar-menu-layout .material-icons { color: white; background-color: transparent; border-color: transparent; cursor: pointer; } .tbcontainer .topbar-menu-layout .material-icons:focus { color: #bcd3e1; background-color: transparent; border-color: transparent; } .tbcontainer .topbar-menu-layout .content { display: flex; flex-direction: column; flex-wrap: wrap; width: 200px; height: 24px; } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TopbarMenuAppComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar-menu-app","template":"<tb-topbar-menu-elements [menuElements]=\"menuElements\" popupClass='popup'></tb-topbar-menu-elements>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material","name":"MdDialog"},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"LocalizationService"},{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"activateViaSMS":[{"__symbolic":"method"}],"goToSite":[{"__symbolic":"method"}],"clearCachedData":[{"__symbolic":"method"}],"openProductInfoDialog":[{"__symbolic":"method"}],"openConnectionInfoDialog":[{"__symbolic":"method"}]}},"TopbarMenuElementsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar-menu-elements","template":"<div id=\"anchor\" #anchor tabindex=\"0\" (blur)=\"closePopupIf()\"> <md-icon (click)=\"onToggle()\" [ngClass]=\"{ 'borderOn': show }\">{{fontIcon}}</md-icon> <kendo-popup *ngIf=\"show\" popupClass='' [anchor]=\"anchor\" (anchorViewportLeave)=\"outView(null)\" (open)=\"onOpen()\" [collision]=\"collision\" [anchorAlign]=\"anchorAlign\" [popupAlign]=\"popupAlign\"> <button kendoButton *ngFor=\"let menuItem of menuElements\" class=\"content\" [disabled]=\"!menuItem?.enabled\" (mouseenter)=\"openSubItems(true, menuItem)\" (mouseleave)=\"openSubItems(false, menuItem)\" (mousedown)=\"setMouseDown()\" (click)=\"doCommand(menuItem)\"> <div #anchor2 class=\"divW\"> <md-icon *ngIf=\"hasSubItems(menuItem)\" class=\"subsIcon\">chevron_left</md-icon> <span [ngClass]=\"{ 'spaceOn': !hasSubItems(menuItem)}\"> {{menuItem?.text}} </span> <md-icon *ngIf=\"menuItem?.checked\" class=\"checkIcon\">check</md-icon>  </div> <kendo-popup *ngIf=\"menuItem?.showMySub\" [anchor]=\"anchor2\" (anchorViewportLeave)=\"outView(menuItem)\" [collision]=\"collision\" [anchorAlign]=\"anchorAlign2\" [popupAlign]=\"popupAlign2\" [popupClass]=\"'content popup'\"> <button kendoButton *ngFor=\"let subItem of menuItem.subItems\" class=\"content\" (click)=\"doCommand(subItem)\" [disabled]=\"!subItem?.enabled\"> <div class=\"divW\"> <md-icon class=\"checkIcon\" *ngIf=\"subItem?.checked\">check</md-icon> <span class=\"spaceOn\"> {{subItem?.text}} </span> </div> </button> </kendo-popup> </button> </kendo-popup> </div>","styles":[""]}]}],"members":{"fontIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"menuElements":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"divFocus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["anchor"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"EventDataService"}]}],"onOpen":[{"__symbolic":"method"}],"doCommand":[{"__symbolic":"method"}],"onToggle":[{"__symbolic":"method"}],"closePopupIf":[{"__symbolic":"method"}],"setMouseDown":[{"__symbolic":"method"}],"hasSubItems":[{"__symbolic":"method"}],"openSubItems":[{"__symbolic":"method"}],"outView":[{"__symbolic":"method"}]}},"TopbarMenuTestComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar-menu-test","template":"<tb-topbar-menu-elements [menuElements]=\"menuElements\" [fontIcon]=\"'build'\" popupClass='popup'></tb-topbar-menu-elements>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ComponentService"},{"__symbolic":"reference","name":"EventDataService"}]}],"openDataService":[{"__symbolic":"method"}],"openRS":[{"__symbolic":"method"}],"openTBExplorer":[{"__symbolic":"method"}],"openTestGrid":[{"__symbolic":"method"}],"openTestIcons":[{"__symbolic":"method"}]}},"TopbarMenuUserComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-topbar-menu-user","template":"<tb-topbar-menu-elements [menuElements]=\"menuElements\" [fontIcon]=\"'person'\" popupClass='popup'></tb-topbar-menu-elements>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LoginSessionService"},{"__symbolic":"reference","name":"EventDataService"}]}],"logout":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ContextMenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-context-menu","template":"<div id=\"anchor\" #anchor tabindex=\"0\" (blur)=\"closePopupIf()\"> <md-icon (click)=\"onToggle()\" [ngClass]=\"{ 'borderOn': show }\">{{fontIcon}}</md-icon> <kendo-popup *ngIf=\"show\" popupClass='{{popupClass}}' [anchor]=\"anchor\" (anchorViewportLeave)=\"outView(null)\" (open)=\"onOpen()\" [collision]=\"collision\" [anchorAlign]=\"anchorAlign\" [popupAlign]=\"popupAlign\"> <button kendoButton *ngFor=\"let menuItem of contextMenu\" class=\"content\" [disabled]=\"!menuItem?.enabled\" (mouseenter)=\"openSubItems(true, menuItem)\" (mouseleave)=\"openSubItems(false, menuItem)\" (mousedown)=\"setMouseDown()\" (click)=\"doCommand(menuItem)\"> <div #anchor2 class=\"divW\"> <md-icon *ngIf=\"hasSubItems(menuItem)\" class=\"subsIcon\">chevron_left</md-icon> <span [ngClass]=\"{ 'spaceOn': !hasSubItems(menuItem)}\"> {{menuItem?.text}} </span> <md-icon *ngIf=\"menuItem?.checked\" class=\"checkIcon\">check</md-icon>  </div> <kendo-popup *ngIf=\"menuItem?.showMySub\" [anchor]=\"anchor2\" (anchorViewportLeave)=\"outView(menuItem)\" [collision]=\"collision\" [anchorAlign]=\"anchorAlign2\" [popupAlign]=\"popupAlign2\" [popupClass]=\"'content popup'\"> <button kendoButton *ngFor=\"let subItem of menuItem.subItems\" class=\"content\" (click)=\"doCommand(subItem)\" [disabled]=\"!subItem?.enabled\"> <div class=\"divW\"> <md-icon class=\"checkIcon\" *ngIf=\"subItem?.checked\">check</md-icon> <span class=\"spaceOn\"> {{subItem?.text}} </span> </div> </button> </kendo-popup> </button> </kendo-popup> </div>","styles":[".contextMenuClass { width: 5%; margin-right: 0px; margin-left: auto; padding-top: 5px; outline: none; } .material-icons { font-size: 1.3rem; cursor: pointer; flex-direction: row; } .cm-content { display: flex; flex-direction: column; flex-wrap: wrap; width: 200px; height: 24px; } .divW { width: inherit; flex-direction: row; flex-wrap: wrap; text-align: left; font-size: smaller; } .checkIcon { float: right; } .subsIcon { float: left; } .borderOn { border: 1px solid blue; } .spaceOn { padding-left: 24px; } span { vertical-align: sub; } "]}]}],"members":{"fontIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"contextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"popupClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"divFocus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["anchor"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"EventDataService"}]}],"onOpen":[{"__symbolic":"method"}],"doCommand":[{"__symbolic":"method"}],"onToggle":[{"__symbolic":"method"}],"closePopupIf":[{"__symbolic":"method"}],"setMouseDown":[{"__symbolic":"method"}],"hasSubItems":[{"__symbolic":"method"}],"openSubItems":[{"__symbolic":"method"}],"outView":[{"__symbolic":"method"}]}},"SaveComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-save","template":"<p> save works! </p> ","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"OpenComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"DocumentComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-open","template":"<!--<div class=\"divSinistra\"> <div class=\"panelbar-wrapper\"> <kendo-panelbar> <kendo-panelbar-item *ngFor=\"let application of applications\" (click)=selecteApplication(application.path) [title]=\"application.name\"> <template kendoPanelBarContent> <div *ngFor=\"let folder of folders\" class=\"appTitle\" (click)=selecteFolder(folder.path)> <div class=\"panel\">{{folder.name}}</div> </div> </template> </kendo-panelbar-item> </kendo-panelbar> </div> </div>  <kendo-panelbar> <kendo-panelbar-item *ngFor=\"let application of applications\" (click)=selecteApplication(application.path) [title]=\"application.name\"> <template kendoPanelBarContent> <div *ngFor=\"let folder of folders\" class=\"appTitle\" (click)=selecteFolder(folder.path)> <div class=\"panel\">{{folder.name}}</div> </div> </template> //  <div (click)=selecteFolder(folder.path)>{{folder.name}}</div> </kendo-panelbar-item> </kendo-panelbar>--> <div style=\"float:left; display:block; width:20%; height:150px; background-color:#F00;\"> <div class=\"panelbar-wrapper\"> <kendo-panelbar> <kendo-panelbar-item *ngFor=\"let application of applications\" (click)=selecteApplication(application.path) [title]=\"application.name\"> <ng-template kendoPanelBarContent> <div *ngFor=\"let folder of folders\"> <kendo-panelbar-item [title]=\"folder.name\" (click)=selecteFolder(folder.path)></kendo-panelbar-item> </div> </ng-template> </kendo-panelbar-item> </kendo-panelbar> </div> </div> <div style=\"float:left; display:block; width:70%; background-color:#FF0;\"> <kendo-grid [data]=\"files\" [selectable]=\"true\"> <kendo-grid-column width=\"20\"> <ng-template kendoGridCellTemplate let-dataItem> <input type=\"checkbox\" /> </ng-template> </kendo-grid-column> <kendo-grid-column field=\"name\" title=\"Name\" width=\"120\"></kendo-grid-column> <kendo-grid-column field=\"path\" title=\"Path\" width=\"470\"></kendo-grid-column> </kendo-grid> </div> <div style=\"clear:both;\"></div>","styles":[".appTitle { height: 30px; } .bookmarks { margin-top: 10px; font-size: small; } /* Style the buttons that are used to open and close the accordion panel */ button.accordion { background-color: #eee; color: #444; cursor: pointer; padding: 18px; width: 30%; text-align: left; border: none; outline: none; } /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */ /* Style the accordion panel. Note: hidden by default */ div.panel { padding: 0 18px; background-color: white; } .divSinistra { width: 40%; float: left; display: block; } .divDestra { float: left; display: block; padding: 70; background-color: #FF0; } .panelbar-wrapper { max-width: 400px; margin: 0 auto; }"],"providers":[{"__symbolic":"reference","name":"ɵdp"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵdq"},{"__symbolic":"reference","name":"ɵdp"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"ɵdr"},{"__symbolic":"reference","module":"@angular/http","name":"Http"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"getApplications":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"selecteApplication":[{"__symbolic":"method"}],"callGetFolder":[{"__symbolic":"method"}],"selecteFolder":[{"__symbolic":"method"}],"callGetFolderFiles":[{"__symbolic":"method"}]}},"AccordionComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-accordion","template":"<ng-content></ng-content>","host":{"class":"panel-group"}}]}],"members":{"addGroup":[{"__symbolic":"method"}],"closeOthers":[{"__symbolic":"method"}],"removeGroup":[{"__symbolic":"method"}]}},"AccordionGroupComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"accordion-group","template":"\n                <div class=\"panel panel-default\" [ngClass]=\"{'panel-open': isOpen}\">\n                  <div class=\"panel-heading\" (click)=\"toggleOpen($event)\">\n                    <h4 class=\"panel-title\">\n                      <a href tabindex=\"0\"><span>{{heading}}</span></a>\n                    </h4>\n                  </div>\n                  <div class=\"panel-collapse\" [hidden]=\"!isOpen\">\n                    <div class=\"panel-body\">\n                        <ng-content></ng-content>\n                    </div>\n                  </div>\n                </div>\n          "}]}],"members":{"heading":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isOpen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"AccordionComponent"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"toggleOpen":[{"__symbolic":"method"}]}},"HeaderStripComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-header-strip","template":"<div class=\"header-strip\"> <div class=\"above\"> <h1 *ngIf=\"title\">{{title}}</h1> <div class=\"content\"> <ng-content select=\".header-strip-content\"></ng-content> </div> </div> <span class=\"line\"></span> <div class=\"under\"> <ng-content select=\".header-strip-under\"></ng-content> </div> </div>","styles":[".header-strip { margin: 15px .5rem; } .header-strip h1 { text-align: left; padding: 0 3px; font-size: 26px; margin: 0; } .header-strip .line { height: 1px; background: #ccc; display: block; background: #ccc; background: linear-gradient(to right, #0277bd 0%, #EEF1F5 100%); } .header-strip .above { display: flex; flex-direction: row; justify-content: space-between; align-items: center; } .header-strip .upper { display: flex; flex-direction: row; } "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["title"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ToolbarTopComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-toolbar-top","template":"<div class=\"toolbar-top\"> <div class=\"toolbar-top-item title\"> <span class=\"document-title truncate\">{{eventData?.model?.Title?.value || title}}</span> </div> <div class=\"toolbar-top-item functions\"></div> <div class=\"toolbar-top-item navigation\"> <ng-content></ng-content> </div> </div>","styles":[".toolbar-top { display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; align-items: stretch; background: #fff; border-bottom: 1px solid #ddd; height: 30px; } .title { flex-grow: 2; display: flex; } .navigation { display: flex; } .document-title { line-height: 32px; margin: 0 10px; font-weight: 700; font-size: 14px; text-transform: uppercase; } "]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}]}},"ToolbarSeparatorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-toolbar-separator","template":"<div></div>","styles":["\n    div{\n      width:1px;\n      height:30px;\n      background:#ddd;\n    }\n  "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ToolbarTopButtonComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵds"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-toolbar-top-button","template":"<button kendoButton class=\"top-button\" (click)=\"onCommand()\" [disabled]=\"disabled\" title=\"{{caption}}\"> <tb-icon [iconType]=\"iconType\" [icon]=\"icon\"></tb-icon> <span>{{caption}}</span> </button>","styles":[".top-button { margin: 0; padding: 0; height: 30px; min-width: 30px; border: 0; background: none; } .top-button:hover { background: #f1f4f7; } .k-button > span { font-size: 12px; line-height: 30px; height: 30px; margin: 0; padding: 0 8px 0 0; display: none; } tb-icon { min-width: 30px; font-size: 20px; line-height: 34px; } md-icon { font-size: 30px; width: 30px; } .div-icon { width: 30px; height: 30px; line-height: 30px; } .div-icon img { height: 20px; margin-top: 4px; } "]}]}],"members":{"caption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"iconType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"},{"__symbolic":"reference","name":"HttpService"}]}],"onCommand":[{"__symbolic":"method"}]}},"ToolbarBottomComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-toolbar-bottom","template":"<div class=\"toolbar-bottom\"> <div class=\"status-bar\"> <span>{{statusMessage}}</span> </div> <div class=\"buttons\"> <ng-content></ng-content> </div> </div>","styles":[".toolbar-bottom { height: 40px; line-height: 40px; background: #1976d2; display: flex; flex-direction: row; flex-wrap: nowrap; justify-content: space-between; align-items: stretch; width: 100%; } .toolbar-bottom .status-bar { padding-left: 5px; } .toolbar-bottom .status-bar > span { color: #fff; font-size: 12px; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ToolbarBottomButtonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-toolbar-bottom-button","template":"<button kendoButton title='{{caption}}' (click)='onCommand()' [disabled]=\"disabled\">{{caption}}</button>","styles":["button { cursor: pointer; margin: 0 6px 0 0px; background: #065aad; color: #fff; padding: 0 15px; line-height: 30px; border-radius: 5px; font-size: 14px; font-weight: 300; border: 0; } button:hover { background: #003a73; } "]}]}],"members":{"caption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"cmpId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onCommand":[{"__symbolic":"method"}]}},"BodyEditComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-body-edit","template":"<kendo-grid [kendoGridBinding]=\"model\"> <kendo-grid-column *ngFor=\"let column of columns\" field=\"{{column?.binding?.datasource}}\" title=\"{{column?.text}}\" width=\"200\"> <template kendoGridCellTemplate let-dataItem> <div>{{dataItem[column.binding.datasource]?.value}}</div> </template> </kendo-grid-column> </kendo-grid>","styles":[""]}]}],"members":{"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"BoolEditComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-bool-edit","template":"<div> <input id=\"{{cmpId}}\"  type=\"text\"  [ngModel]=\"model?.value\" [disabled]=\"!model?.enabled\" (blur)=\"onBlur()\" (keydown)=\"keyPress($event)\" (ngModelChange)=\"model.value=$event\" /> </div>","styles":[""]}]}],"members":{"yesText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"noText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"keyPress":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}]}},"ButtonComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-button","template":"<button kendoButton id=\"{{cmpId}}\">{{ caption }}</button>","styles":[""]}]}],"members":{}},"CaptionComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-caption","template":"<label for=\"{{for}}\" class=\"control-label\">{{caption}}</label>","styles":[""]}]}],"members":{"for":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"LinearGaugeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-linear-gauge","template":"<kendo-sparkline [data]=\"model?.nCurrentElement\" type=\"bullet\" [valueAxis]=\"rulerAxis\" (blur)=\"onBlur($event)\"></kendo-sparkline>","styles":[""]}]}],"members":{"maxRange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"setDefault":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}]}},"CheckBoxComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-checkbox","template":"<div class=\"tb-control tb-checkbox\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <input type=\"checkbox\" id=\"{{cmpId}}\" [ngModel]=\"model?.value\" [disabled]=\"!model?.enabled\" (ngModelChange)=\"model.value=$event\" class=\"k-checkbox\"> <label class=\"k-checkbox-label\" for=\"{{cmpId}}\">&nbsp;</label> </div>","styles":[".mat-checkbox-input { border: 1px solid red; } "]}]}],"members":{}},"ColorPickerComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-color-picker","template":"<div class=\"tb-control tb-color-picker\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <input id=\"{{cmpId}}\" type=\"text\" (blur)=\"onBlur()\" [disabled]=\"!model?.enabled\" [ngModel]=\"model?.value\" (ngModelChange)=\"model.value=$event\" [placeholder]=\"caption\" class=\"tb-color-picker\" /> </div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"ComboComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-combo","template":"<!--<tb-caption caption=\"{{caption}}\"></tb-caption> <kendo-dropdownlist id=\"{{cmpId}}\" [data]=\"items\" [textField]=\"'description'\" [valueField]=\"'code'\" [value]=\"selectedItem\" (selectionChange)=\"onChange()\" (open)=\"fillListBox()\"> <template kendoDropDownListNoDataTemplate> <h4><span class=\"k-icon k-i-warning\"></span><br /><br /> No data here</h4> </template> </kendo-dropdownlist>--> <div class=\"tb-control tb-combo\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-dropdownlist [data]=\"items\" [textField]=\"'description'\" [disabled]=\"!model?.enabled\" [valueField]=\"'code'\" [value]=\"selectedItem\" (selectionChange)=\"onChange($event)\" (open)=\"fillListBox()\" [popupSettings]=\"{ height: 300, width: 400 }\" [style.width.px]=\"width\"> <template kendoDropDownListNoDataTemplate> <h4><span class=\"k-icon k-i-warning\"></span><br /><br /> No data here</h4> </template> </kendo-dropdownlist> </div>","styles":[".k-i-warning { font-size: 2.5em; } h4 { font-size: 1em; } "]}]}],"members":{"itemSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"hotLink":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"EventDataService"}]}],"fillListBox":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ComboSimpleComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-combo-simple","template":"<div class=\"tb-control tb-combo-simple\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-dropdownlist [data]=\"items\" [textField]=\"'description'\" [disabled]=\"!model?.enabled\" [valueField]=\"'code'\" [defaultItem]=\"defaultItem\" (selectionChange)=\"selectionChange($event)\"> <template kendoDropDownListNoDataTemplate> <h4><span class=\"k-icon k-i-warning\"></span><br /><br /> No data here</h4> </template> </kendo-dropdownlist> </div>","styles":[".k-i-warning { font-size: 2.5em; } h4 { font-size: 1em; } "]}]}],"members":{"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"defaultItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"changed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["changed"]}]}],"selectionChange":[{"__symbolic":"method"}]}},"DateInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-date-input","template":"<div class=\"tb-control tb-date-input\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-datepicker [(ngModel)]=\"selectedDate\" [format]=\"getFormat(formatter)\" (valueChange)=\"onChange($event)\" [focusedDate]=\"selectedDate\" [disabled]=\"!model?.enable\" (blur)=\"onBlur($event)\"> </kendo-datepicker> </div>","styles":[""]}]}],"members":{"forCmpID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"formatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"onChange":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"onUpdateNgModel":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"getFormat":[{"__symbolic":"method"}],"modelValid":[{"__symbolic":"method"}]}},"EmailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-email","template":"<div class=\"tb-control tb-email\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <!--<input id=\"{{cmpId}}\" type=\"text\" [ngClass]=\"showError\" class=\"tb-text\" (blur)=\"onBlur()\" [disabled]=\"!model?.enabled\" [ngModel]=\"model?.value\" (ngModelChange)=\"model.value=$event\" [readonly]=\"readonly\" />--> <kendo-maskedtextbox id=\"{{cmpId}}\"  [mask]=\"mask\" [ngClass]=\"showError\" class=\"tb-text\" [ngModel]=\"model?.value\" (blur)=\"onBlur()\" [disabled]=\"!(model?.enabled)\" (ngModelChange)=\"model.value=$event\"  ></kendo-maskedtextbox> <div class=\"has-error\">{{errorMessage}}</div> </div>","styles":[""]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["readonly"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onUpdateNgModel":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"modelValid":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}]}},"EnumComboComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-enum-combo","template":"<div class=\"tb-control tb-enum-combo\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-dropdownlist id=\"{{cmpId}}\" [data]=\"items\" [textField]=\"'description'\" [disabled]=\"!model?.enabled\" [valueField]=\"'code'\" [value]=\"selectedItem\" (selectionChange)=\"onChange()\" (open)=\"fillListBox()\" [style.width.px]=\"width\"> </kendo-dropdownlist> </div>","styles":[""]}]}],"members":{"itemSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"WebSocketService"},{"__symbolic":"reference","name":"EventDataService"},{"__symbolic":"reference","name":"EnumsService"}]}],"fillListBox":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"FileComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-file","template":"<div class=\"tb-control tb-file\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <input type=\"file\"> </div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"GridComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-grid","template":"<kendo-grid [data]=\"gridData\" [height]=\"370\"> <kendo-grid-column *ngFor=\"let col of gridColumns\" field=\"{{col}}\" title=\"{{col}}\"></kendo-grid-column> </kendo-grid>","styles":[""]}]}],"members":{"gridNamespace":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"gridSelectionType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"gridParams":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DataService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ImageComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-image","template":"<div [title]=\"title\"> <img id=\"{{cmpId}}\" [src]=\"getImageUrl(model?.value)\" *ngIf=\"model\" class=\"tb-static-component\" [ngStyle]=\"getStyles()\" /> </div>","styles":[""]}]}],"members":{"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"}]}],"getStyles":[{"__symbolic":"method"}],"getImageUrl":[{"__symbolic":"method"}]}},"LabelStaticComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"TextComponent"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-label-static","template":"<div> <tb-text [model]=\"model\" [width]=\"width\"></tb-text> </div>","styles":[""]}]}],"members":{"caption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}]}},"LinkComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-link","template":"<div class=\"tb-control tb-link\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-maskedtextbox [ngClass]=\"showError\" [(ngModel)]=\"selectedValue\" required=\"required\" (blur)=\"onBlur()\" [disabled]=\"!model?.enabled\" (ngModelChange)=\"model.value=$event\"></kendo-maskedtextbox> <ng-container #stateButton></ng-container> <div class=\"has-error\">{{errorMessage}}</div> </div>","styles":[""]}]}],"members":{"pattern":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onUpdateNgModel":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"modelValid":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}]}},"MaskedTextBoxComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-masked-text-box","template":"<div class=\"tb-control tb-masked-text-box\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-maskedtextbox [ngModel]=\"model?.value\" (ngModelChange)=\"model.value=$event\" [disabled]=\"!model?.enabled\" [mask]=\"mask\" [style.width.px]=\"width\"></kendo-maskedtextbox> </div>","styles":[""]}]}],"members":{"forCmpID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"mask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"NumericTextBoxComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-numeric-text-box","template":"<div class=\"tb-control tb-numeric-text-box\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-numerictextbox [ngClass]=\"showError\" [(ngModel)]=\"selectedValue\" (blur)=\"onBlur()\" (ngModelChange)=\"model.value=$event\" [spinners]=\"false\" [format]=\"getFormatOptions()\" [decimals]=\"getDecimalsOptions()\" [disabled]=\"!model?.enabled\" [style.width.px]=\"width\"></kendo-numerictextbox> <div class=\"has-error\">{{errorMessage}}</div> </div>","styles":[""]}]}],"members":{"forCmpID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"formatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"decimals":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"getDecimalsOptions":[{"__symbolic":"method"}],"getFormatOptions":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onUpdateNgModel":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"modelValid":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}]}},"PasswordComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-password","template":"<div class=\"tb-control tb-password\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <input type=\"password\" [ngModel]=\"model?.value\" [disabled]=\"!model?.enabled\" (ngModelChange)=\"model.value=$event\" /> </div>","styles":[""]}]}],"members":{"forCmpID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"PhoneComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-phone","template":"<div class=\"tb-control tb-phone\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-maskedtextbox [mask]=\"mask\" [ngModel]=\"model?.value\" (ngModelChange)=\"model.value=$event\" [disabled]=\"!model?.enabled\"></kendo-maskedtextbox> </div>","styles":[""]}]}],"members":{"mask":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"PlaceholderComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-placeholder","template":"<label for=\"{{forCmpID}}\">  {{placeHolder}} </label>","styles":[""]}]}],"members":{"placeHolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"RadioComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-radio","template":"<div class=\"tb-control tb-radio\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <input class=\"k-radio\" id=\"{{cmpId}}\" type=\"radio\" [ngModel]=\"model?.value\" [disabled]=\"!model?.enabled\" (ngModelChange)=\"model.value=$event\"> <label class=\"k-radio-label\" for=\"{{cmpId}}\">&nbsp;</label> </div>","styles":[""]}]}],"members":{"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"SectionTitleComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-section-title","template":"<div class=\"separator\"> <hr class=\"line-separator\"> <label id=\"{{cmpId}}\" class=\"class1\">{{caption}}</label> </div>","styles":[".class1 { color: #3399ff; } .line-separator { height: 1px; background: #3399ff; border-bottom: 1px solid #3399ff; } .separator { padding-top: 10px; padding-bottom: 10px; } "]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}]}},"StateButtonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-state-button","template":"<md-icon (click)=\"onClick()\" id=\"{{button.IDD_Comand}}\">{{button.iconFont}}</md-icon>","styles":[""]}]}],"members":{"button":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"onClick":[{"__symbolic":"method"}]}},"TbCardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-card","template":"","styles":[""]}]}],"members":{}},"TbCardContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-card-content","template":"<ng-content></ng-content>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"TbCardTitleComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-card-title","template":"<div> <span>{{title}}</span> <md-icon *ngIf=\"isCollapsible\">{{getArrowIcon()}}</md-icon> </div>","styles":[""]}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["title"]}]}],"isCollapsible":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"isCollapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"getArrowIcon":[{"__symbolic":"method"}]}},"TextComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-text","template":"<div class=\"tb-control tb-text\"> <tb-caption caption=\"{{caption}}\" forCmpID=\"forCmpID\"></tb-caption> <div class=\"group\"> <kendo-maskedtextbox [mask]=\"mask\" [ngModel]=\"model?.value\" required=\"required\" (blur)=\"onBlur()\" [disabled]=\"!(model?.enabled)\" (ngModelChange)=\"model.value=$event\" [style.width.px]=\"width\"></kendo-maskedtextbox> <ng-container #contextMenu></ng-container> </div> </div>","styles":[""]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["readonly"]}]}],"hotLink":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"contextMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["contextMenu",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef"}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"},{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"onBlur":[{"__symbolic":"method"}]}},"TextareaComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-textarea","template":"<div class=\"tb-control tb-textarea\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <textarea name=\"{{cmpId}}\" [readonly]=\"readonly\" [ngModel]=\"model?.value\"  (ngModelChange)=\"model.value=$event\" [disabled]=\"!model?.enabled\" [ngStyle]=\"{'height': getCorrectHeight(), 'width':  getCorrectWidth()}\"></textarea> <ng-container #contextMenu></ng-container> </div>","styles":["textarea { width: 100%; background: #ffffde; border: 1px solid #ddd; } textarea[disabled] { width: 100%; background-color: #f3f3f3; border: 1px solid #ddd; font-weight: bold; color: #9c9c9c; font-family: inherit; } "]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["readonly"]}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor"}],"getCorrectHeight":[{"__symbolic":"method"}],"getCorrectWidth":[{"__symbolic":"method"}]}},"TimeInputComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-time-input","template":"<div class=\"tb-control tb-time-input\"> <tb-caption caption=\"{{caption}}\" [for]=\"cmpId\"></tb-caption> <kendo-dateinput [(ngModel)]=\"selectedTime\" [format]=\"'HH:mm:ss'\" (valueChange)=\"onChange($event)\" (blur)=\"onBlur()\"></kendo-dateinput> </div>","styles":[""]}]}],"members":{"forCmpID":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"formatter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EventDataService"}]}],"onChange":[{"__symbolic":"method"}],"onUpdateNgModel":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"modelValid":[{"__symbolic":"method"}]}},"UnknownComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdt"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-unknown","template":"<p> unknown works! </p> ","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"TbSharedModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[[{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-inputs","name":"InputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dialog","name":"DialogModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"},{"__symbolic":"reference","module":"angular2-masonry","name":"MasonryModule"},[{"__symbolic":"reference","module":"@progress/kendo-angular-grid","name":"GridModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-inputs","name":"InputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dateinputs","name":"DateInputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dialog","name":"DialogModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dropdowns","name":"DropDownsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-layout","name":"LayoutModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-popup","name":"PopupModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-buttons","name":"ButtonsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-charts","name":"ChartsModule"}]]],"declarations":[[{"__symbolic":"reference","name":"ɵdd"},{"__symbolic":"reference","name":"ɵde"},{"__symbolic":"reference","name":"ɵdf"},{"__symbolic":"reference","name":"ɵdg"},{"__symbolic":"reference","name":"ɵdh"},{"__symbolic":"reference","name":"ɵdi"},{"__symbolic":"reference","name":"ɵdj"},{"__symbolic":"reference","name":"ɵdk"},{"__symbolic":"reference","name":"ɵdl"}]],"exports":[[{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-inputs","name":"InputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dialog","name":"DialogModule"},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MaterialModule"},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule"},{"__symbolic":"reference","module":"angular2-masonry","name":"MasonryModule"},[{"__symbolic":"reference","module":"@progress/kendo-angular-grid","name":"GridModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-inputs","name":"InputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dateinputs","name":"DateInputsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dialog","name":"DialogModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-dropdowns","name":"DropDownsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-layout","name":"LayoutModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-popup","name":"PopupModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-buttons","name":"ButtonsModule"},{"__symbolic":"reference","module":"@progress/kendo-angular-charts","name":"ChartsModule"}]],[{"__symbolic":"reference","name":"ɵdd"},{"__symbolic":"reference","name":"ɵde"},{"__symbolic":"reference","name":"ɵdf"},{"__symbolic":"reference","name":"ɵdg"},{"__symbolic":"reference","name":"ɵdh"},{"__symbolic":"reference","name":"ɵdi"},{"__symbolic":"reference","name":"ɵdj"},{"__symbolic":"reference","name":"ɵdk"},{"__symbolic":"reference","name":"ɵdl"}]]}]}],"members":{}},"TbMenuModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","name":"TbSharedModule"}],"declarations":[{"__symbolic":"reference","name":"LoginComponent"},{"__symbolic":"reference","name":"MenuComponent"},{"__symbolic":"reference","name":"ApplicationSelectorComponent"},{"__symbolic":"reference","name":"MenuContainerComponent"},{"__symbolic":"reference","name":"FavoritesComponent"},{"__symbolic":"reference","name":"MostUsedComponent"},{"__symbolic":"reference","name":"SearchComponent"},{"__symbolic":"reference","name":"ProductInfoDialogComponent"},{"__symbolic":"reference","name":"ConnectionInfoDialogComponent"},{"__symbolic":"reference","name":"GroupSelectorComponent"},{"__symbolic":"reference","name":"MenuStepperComponent"},{"__symbolic":"reference","name":"MenuTabberComponent"},{"__symbolic":"reference","name":"MenuTabComponent"},{"__symbolic":"reference","name":"MenuElementComponent"},{"__symbolic":"reference","name":"MenuContentComponent"}],"exports":[{"__symbolic":"reference","name":"LoginComponent"},{"__symbolic":"reference","name":"MenuComponent"},{"__symbolic":"reference","name":"MenuElementComponent"},{"__symbolic":"reference","name":"ApplicationSelectorComponent"},{"__symbolic":"reference","name":"MenuContainerComponent"},{"__symbolic":"reference","name":"FavoritesComponent"},{"__symbolic":"reference","name":"MostUsedComponent"},{"__symbolic":"reference","name":"SearchComponent"},{"__symbolic":"reference","name":"GroupSelectorComponent"},{"__symbolic":"reference","name":"MenuStepperComponent"},{"__symbolic":"reference","name":"MenuContentComponent"}],"providers":[[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"SettingsService"},{"__symbolic":"reference","name":"LocalizationService"},{"__symbolic":"reference","name":"EventManagerService"}]],"entryComponents":[{"__symbolic":"reference","name":"ProductInfoDialogComponent"},{"__symbolic":"reference","name":"ConnectionInfoDialogComponent"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵdo"}]}]},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"TbMenuModule"},"providers":[[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"SettingsService"},{"__symbolic":"reference","name":"LocalizationService"},{"__symbolic":"reference","name":"EventManagerService"}]]}}}},"MenuService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"selectedMenu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"selectedApplication":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpService"},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"SettingsService"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"ComponentService"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver"}]}],"initApplicationAndGroup":[{"__symbolic":"method"}],"setSelectedApplication":[{"__symbolic":"method"}],"setSelectedGroup":[{"__symbolic":"method"}],"setSelectedMenu":[{"__symbolic":"method"}],"getApplicationIcon":[{"__symbolic":"method"}],"clearMostUsed":[{"__symbolic":"method"}],"loadSearchObjects":[{"__symbolic":"method"}],"getSearchObjects":[{"__symbolic":"method"}],"findSearchesInApplication":[{"__symbolic":"method"}],"getSearchesObjectsFromMenu":[{"__symbolic":"method"}],"containsSameSearch":[{"__symbolic":"method"}],"toggleFavorites":[{"__symbolic":"method"}],"addToFavoritesInternal":[{"__symbolic":"method"}],"removeFromFavoritesInternal":[{"__symbolic":"method"}],"setFavoritesIsOpened":[{"__symbolic":"method"}],"rearrangePositions":[{"__symbolic":"method"}],"compareFavorites":[{"__symbolic":"method"}],"compareMostUsed":[{"__symbolic":"method"}],"compareTitle":[{"__symbolic":"method"}],"onAfterGetMenuElements":[{"__symbolic":"method"}],"loadFavoritesAndMostUsed":[{"__symbolic":"method"}],"findFavoritesAndMostUsedInApplication":[{"__symbolic":"method"}],"getFavoritesAndMostUsedObjectsFromMenu":[{"__symbolic":"method"}],"getFavorites":[{"__symbolic":"method"}],"addToMostUsed":[{"__symbolic":"method"}],"addToMostUsedArray":[{"__symbolic":"method"}],"removeFromMostUsedArray":[{"__symbolic":"method"}],"getFilteredSearch":[{"__symbolic":"method"}],"stringStartsWith":[{"__symbolic":"method"}],"toggleDecription":[{"__symbolic":"method"}],"activateMenu":[{"__symbolic":"method"}]}},"EventManagerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Logger"}]}],"emitPreferenceLoaded":[{"__symbolic":"method"}]}},"SettingsService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"EventManagerService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","name":"UtilsService"}]}],"setPreference":[{"__symbolic":"method"}],"getThemedSettings":[{"__symbolic":"method"}],"getPreferences":[{"__symbolic":"method"}],"getPreferenceByName":[{"__symbolic":"method"}],"getSettings":[{"__symbolic":"method"}]}},"HttpMenuService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","name":"HttpService"}]}],"postData":[{"__symbolic":"method"}],"getMenuElements":[{"__symbolic":"method"}],"getPreferences":[{"__symbolic":"method"}],"setPreference":[{"__symbolic":"method"}],"getThemedSettings":[{"__symbolic":"method"}],"getConnectionInfo":[{"__symbolic":"method"}],"favoriteObject":[{"__symbolic":"method"}],"unFavoriteObject":[{"__symbolic":"method"}],"mostUsedClearAll":[{"__symbolic":"method"}],"getMostUsedShowNr":[{"__symbolic":"method"}],"addToMostUsed":[{"__symbolic":"method"}],"clearCachedData":[{"__symbolic":"method"}],"loadLocalizedElements":[{"__symbolic":"method"}],"getProductInfo":[{"__symbolic":"method"}],"activateViaSMS":[{"__symbolic":"method"}],"goToSite":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]}},"ImageService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"Logger"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","name":"HttpService"}]}],"getApplicationIcon":[{"__symbolic":"method"}],"getStaticImage":[{"__symbolic":"method"}],"getObjectIconForMaterial":[{"__symbolic":"method"}]}},"LocalizationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"Logger"}]}],"loadLocalizedElements":[{"__symbolic":"method"}]}},"GroupSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-group-selector","template":"<div class=\"groups\" *ngIf=\"menuService != undefined\"> <ul class=\"groups-list\"> <li *ngFor=\"let group of utilsService.toArray(menuService?.selectedApplication?.Group)\" (click)=selectGroup(group)> <div *ngIf=\"group != undefined\"> <img [src]=\"imageService.getStaticImage(group)\" /><br /> <span>{{group?.title}}</span> </div> </li> </ul> </div>","styles":[".groups { margin-bottom: 20px; } ul.groups-list { list-style: none; padding: 0; margin: 0; padding-top: 10px; padding-bottom: 10px; display: flex; flex-wrap: wrap; background: #3e3e3e; } ul.groups-list > li { flex-grow: 1; width: 33%; height: 60px; cursor: pointer; display: flex; align-items: center; justify-content: center; flex-direction: column; color: #9f9f9f; background: #3e3e3e; text-align: center; margin-top: 15px; margin-bottom: 15px; } ul.groups-list > li:hover { color: #fff; } ul.groups-list > li > img { max-width: 120px; } ul.groups-list > li > div > span { font-size: 12px; } "]}]}],"members":{"itemSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"UtilsService"}]}],"selectGroup":[{"__symbolic":"method"}]}},"MenuStepperComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-stepper","template":"<div *ngIf=\"menuService?.selectedApplication?.title != undefined\"> <md-menu #apps=\"mdMenu\" x-position=\"after\" y-position=\"below\"> <button md-menu-item *ngFor=\"let application of applications\" (click)=menuService.setSelectedApplication(application) class=\"applicationItem\" [ngClass]=\"application?.title == menuService?.selectedApplication?.title ? 'active' : ''\"> {{application?.title}} </button> </md-menu> <md-menu #groups=\"mdMenu\" x-position=\"after\" y-position=\"below\"> <button md-menu-item *ngFor=\"let group of utilsService.toArray(menuService?.selectedApplication?.Group)\" (click)=menuService.setSelectedGroup(group) class=\"applicationItem\" [ngClass]=\"group?.title == menuService?.selectedGroup?.title ? 'active' : ''\"> <img [src]=\"imageService.getStaticImage(group)\" /> {{group?.title}} </button> </md-menu> <md-menu #menus=\"mdMenu\" x-position=\"after\" y-position=\"below\"> <button md-menu-item *ngFor=\"let menuTab of utilsService.toArray(menuService.selectedGroup?.Menu)\" (click)=menuService.setSelectedMenu(menuTab) class=\"applicationItem\" [ngClass]=\"menuTab?.title == menuService?.selectedMenu?.title ? 'active' : ''\"> {{menuTab?.title}} </button> </md-menu> <ul class=\"breadcrumb\"> <li [md-menu-trigger-for]=\"apps\"> <div> {{menuService?.selectedApplication?.title}} </div> </li> <li [md-menu-trigger-for]=\"groups\"> <div> {{menuService?.selectedGroup?.title}} </div> </li> <li [md-menu-trigger-for]=\"menus\"> <div> {{menuService?.selectedMenu?.title}} </div> </li> <li class=\"current\">{{menuService?.selectedMenu?.title}}</li> </ul> </div>","styles":[".breadcrumb { list-style: none; font-size: 12px; display: flex; flex-direction: row; margin: 2px 0; padding: 0; } .breadcrumb li div { padding: 0 3px; cursor: pointer; } .breadcrumb li div::after { content: '\u00000bb'; } .breadcrumb li.current { font-style: italic; font-weight: bold; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"Menu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"ConnectionInfoDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-connection-info-dialog","template":" <table> <tr> <td class=\"loginStyleOff pointer backButtonPadding\" ></td> <td> </td> </tr> <!--User--> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.CompanyLabel}}: </td> <td><b>{{connectionInfos?.company}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.Username}}: </td> <td><b>{{connectionInfos?.user}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.Administrator}}: </td> <td><b>{{connectionInfos?.admin}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.EasyStudioDeveloper}}: </td> <td><b>{{connectionInfos?.ebdev}}</b></td> </tr> <!--General--> <tr style=\"border-top:solid; border-color:black;border-top-style:solid; border-width:1px\"> <td style=\"text-align:right\"> {{localizationService.localizedElements.Instance}}: </td> <td><b>{{connectionInfos?.installation}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.FileApplicationServer}}: </td> <td><b>{{connectionInfos?.remotefileserver}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.WebApplicationServer}}: </td> <td><b>{{connectionInfos?.remotewebserver}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.AuditingEnabled}}: </td> <td><b>{{connectionInfos?.auditing}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.SecurityEnabled}}: </td> <td><b>connectionInfos?.security}}</b></td> </tr> <!--DATABASE--> <tr style=\"border-top:solid; border-color:black;border-top-style:solid; border-width:1px\"> <td style=\"text-align:right\"> {{localizationService.localizedElements.DBServer}}: </td> <td><b>{{connectionInfos?.dbserver}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.DBName}}: </td> <td><b>{{connectionInfos?.dbname}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements.DBUser}}: </td> <td><b>{{connectionInfos?.dbuser}}</b></td> </tr> <!--DATABASE SIZE (if needed)--> <tr [hidden]=\"!showdbsize\"> <td style=\" text-align:right\"> {{localizationService.localizedElements.UsedSpace}}: </td> <td><b>{{connectionInfos?.usedspace}}</b></td> </tr> <tr [hidden]=\"!showdbsize\"> <td style=\"text-align:right\"> {{localizationService.localizedElements.FreeSpace}}: </td> <td><b>{{connectionInfos?.freespace}}</b></td> </tr> </table> <button type=\"button\" (click)=\"dialogRef.close('yes')\">{{localizationService.localizedElements.CloseLabel}}</button> ","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MdDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"ConnectionInfoDialogComponent"}]},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ProductInfoDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-product-info-dialog","template":" <table> <tr> <td class=\"loginStyleOff pointer backButtonPadding\" ></td> <td> </td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements?.InstallationVersion}}: </td> <td><b>{{productInfos?.installationVersion}} {{productInfos?.debugState}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements?.Provider}}: </td> <td><b>{{productInfos?.providerDescription}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements?.Edition}}: </td> <td><b>{{productInfos?.edition}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements?.InstallationName}}: </td> <td><b>{{productInfos?.installationName}}</b></td> </tr> <tr> <td style=\"text-align:right\"> {{localizationService.localizedElements?.ActivationState}}: </td> <td><b>{{productInfos?.activationState}}</b></td> </tr> <tr *ngFor=\"let current of utilsService.toArray(productInfos?.Applications)\"> <td style=\"text-align:right\"> {{current?.application}}: </td> <td> <b>{{current?.licensed}}</b> </td> </tr> </table> <button type=\"button\" (click)=\"dialogRef.close('yes')\">{{localizationService.localizedElements?.CloseLabel}}</button> ","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MdDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"ProductInfoDialogComponent"}]},{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"ngOnInit":[{"__symbolic":"method"}]}},"SearchComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-search","template":"<div class=\"tb-search\"> <md-input-container> <span md-prefix><md-icon>search</md-icon></span> <input #myInput type=\"text\" mdInput [mdAutocomplete]=\"auto\" [formControl]=\"inputControl\" placeholder=\"Search...\"> </md-input-container> <md-autocomplete #auto=\"mdAutocomplete\" [displayWith]=\"displayElement\"> <md-option *ngFor=\"let option of filteredElements | async\" [value]=\"option\"> <tb-menu-element class=\"search-element\" [object]=\"option\"></tb-menu-element> </md-option> </md-autocomplete> </div>","styles":[".tb-search .mat-input-container { background: #ffffff; padding: 1px 5px; border-radius: 3px; border: 1px solid #044e7b; border: none; width: 330px; margin-bottom: 3px; box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.1), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.1); } .tb-search .mat-focused .mat-input-placeholder.mat-float, .tb-search .mat-input-placeholder.mat-float:not(.mat-empty) { display: none; } .tb-search .mat-input-placeholder.mat-empty { color: #00578c; font-size: 16px; position: relative; padding: 0; line-height: 34px; } .tb-search .mat-input-element { font-size: 14px; line-height: 26px; color: #00578c; margin-bottom: 3px; } .tb-search .mat-input-wrapper { margin: 0; padding: 0; } .tb-search .mat-input-underline { display: none; } .tb-search .dropdown-menu { width: 300px; } .tb-search .mat-icon { margin: 0px 5px 0 0; color: #00578c; } /************/ .search-element .menu-element { margin: 0; padding: 0; background: #fff; } .search-element .menu-element-content .mat-icon { margin-right: 0; } .search-element .menu-element span { font-size: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; flex: 1; } .search-element .menu-element .object-type { margin: 2px 0px 2px 5px; } .cdk-overlay-pane { width: 351px !important; margin-left: -35px; } .mat-option { line-height: 28px; height: 28px; padding: 0; } .mat-option.mat-active .search-element .menu-element { background: #fffbe0; transition: background 0.2s; } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"maxElements":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"myInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["myInput"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"filter":[{"__symbolic":"method"}],"displayElement":[{"__symbolic":"method"}],"isObject":[{"__symbolic":"method"}]}},"MostUsedComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-most-used","template":"<div class=\"most-used\" *ngIf=\"menuService?.mostUsedCount > 0\"> <ul class=\"most-used-list\"> <li *ngFor=\"let object of utilsService.toArray(menuService?.mostUsed) | slice:0:9;\" class=\"most-used-item\"> <md-icon class=\"type\">{{imageService.getObjectIcon(object)}}</md-icon> <span class=\"truncate\" (click)=\"runFunction(object)\">{{object.title}}</span> </li> </ul> </div>","styles":[".most-used { margin-bottom: 20px; } ul.most-used-list { list-style: none; padding: 0; margin: 0; display: flex; flex-direction: column; background: #3e3e3e; } .most-used-item { display: flex; flex-direction: row; color: #9f9f9f; background: #3e3e3e; line-height: 30px; position: relative; } .most-used-item > md-icon.type { margin: 0 2px 0 7px; line-height: 30px; font-size: 20px; } .most-used-item > span { font-size: 12px; cursor: pointer; } .most-used-item > span:hover { color: #fff; } "]}]}],"members":{"itemSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"runFunction":[{"__symbolic":"method"}]}},"MenuComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu","template":"<div class=\"menu-container\"> <tb-menu-container></tb-menu-container> </div>","styles":[""],"providers":[{"__symbolic":"reference","name":"EventDataService"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"LocalizationService"},{"__symbolic":"reference","name":"SettingsService"},{"__symbolic":"reference","name":"EventManagerService"},{"__symbolic":"reference","name":"EventDataService"},{"__symbolic":"reference","name":"EnumsService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ApplicationSelectorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-application-selector","template":"<div class=\"application-selector\" *ngIf=\"menuService != undefined\"> <ul class=\"application-list\"> <li *ngFor=\"let application of applications\" (click)=\"selecteApplication(application)\"> <div *ngIf=\"application != undefined\"> <img [src]=\"imageService.getApplicationIcon(application)\" /><br /> <span>{{application.title}}</span> </div> </li> </ul> </div>","styles":[".application-selector { margin-bottom: 20px; } ul.application-list { list-style: none; padding: 0; margin: 0; display: flex; padding-top: 10px; padding-bottom: 10px; background: #3e3e3e; } ul.application-list > li { width: 50%; cursor: pointer; display: flex; align-items: center; justify-content: center; flex-direction: column; color: #9f9f9f; background: #3e3e3e; text-align: center; } ul.application-list > li:hover { color: #fff; } ul.application-list > li img { max-width: 120px; } ul.application-list > li span { font-size: 12px; } "]}]}],"members":{"Menu":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"}]}],"selecteApplication":[{"__symbolic":"method"}]}},"FavoritesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-favorites","template":"<div class=\"favorites\" *ngIf=\"menuService?.favoritesCount > 0\"> <ul class=\"favorites-list\"> <li *ngFor=\"let favorite of favorites\" class=\"favorite-item\"> <md-icon class=\"type\">{{imageService.getObjectIcon(favorite)}}</md-icon> <span class=\"truncate\" (click)=\"runFunction(favorite)\">{{favorite.title}}</span> <md-icon class=\"close\" (click)=\"menuService.toggleFavorites(favorite)\" title=\"Remove\">close</md-icon> </li> </ul> </div>","styles":[".favorites { margin-bottom: 20px; } ul.favorites-list { list-style: none; padding: 0; margin: 0; display: flex; flex-direction: column; background: #3e3e3e; } .favorite-item { display: flex; flex-direction: row; color: #9f9f9f; background: #3e3e3e; line-height: 30px; position: relative; } .favorite-item > md-icon.type { margin: 0 2px 0 7px; line-height: 30px; font-size: 20px; } .favorite-item > span { font-size: 12px; cursor: pointer; } .favorite-item > span:hover { color: #fff; } .favorite-item > md-icon.close { position: absolute; right: 0; font-size: 14px; line-height: 30px; cursor: pointer; color: #646464; } .favorite-item > md-icon.close:hover { color: #fff; } "]}]}],"members":{"itemSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"runFunction":[{"__symbolic":"method"}]}},"LoginComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-login","template":"<header> <md-toolbar color=\"primary\"> <img src=\"assets/images/logoM4_h40.png\" /> <span class=\"fill-remaining-space\"></span> <span>Microarea Spa</span> </md-toolbar> </header> <main class=\"login-content\"> <md-card class=\"login-form\" *ngIf=\"!working\"> <md-card-title>Log In</md-card-title> <md-card-content> <div class=\"form-group\"> <md-input-container class=\"form-control\"> <input mdInput type=\"text\" [placeholder]=\"'User'\" autofocus [(ngModel)]=\"connectionData.user\" (blur)=getCompaniesForUser(connectionData.user) (keydown)=\"keyDownFunction($event)\" /> </md-input-container> <md-input-container class=\"form-control\"> <input mdInput type=\"password\" [placeholder]=\"'Password'\" [(ngModel)]=\"connectionData.password\" (keydown)=\"keyDownFunction($event)\" /> </md-input-container> <md-select class=\"form-control\" placeholder=\"Company\" [(ngModel)]=\"connectionData.company\"> <md-option *ngIf=\"!companies\">Loading...</md-option> <md-option *ngFor=\"let company of companies\" [value]=\"company?.name\"> {{ company?.name }} </md-option> </md-select> <div class=\"error\" *ngFor=\"let errorMessage of loginSessionService.errorMessages\">{{errorMessage.text}}</div> <button class=\"form-button\" md-raised-button color=\"primary\" (click)=\"login();\" [disabled]=\"companies.length == 0\">Login</button> </div> </md-card-content> </md-card> <div class=\"spinner\" *ngIf=\"working\"> <md-spinner mode=\"indeterminate\" color=\"primary\"></md-spinner> </div> </main> <footer> <span>Copyright © 1984-2017 Microarea SpA - Tutti i diritti riservati | <a href=\"http://www.microarea.it\">Microarea.It</a></span> </footer>","styles":[":host { display: flex; min-height: 100vh; flex-direction: column; } .fill-remaining-space { flex: 1 1 auto; } .login-content { flex: 1; background: #efefef; } .login-form { flex: 1; max-width: 400px; margin: 100px auto; } footer { background: #0277bd; padding: 10px 15px; color: #fff; font-weight: 300; font-size: 12px; } footer a { color: #fff; } .form-group .form-control { width: 100%; margin: 10px 0; } .form-group .form-button { margin-top: 20px; width: 100%; } div.error { color: red; margin: 20px 0 0; } .spinner { margin: 200px auto; width: 100px; } .md-spinner path { stroke: #0277BD; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"LoginSessionService"},{"__symbolic":"reference","module":"angular2-cookie/services/cookies.service","name":"CookieService"},{"__symbolic":"reference","module":"@angular/router","name":"Router"},{"__symbolic":"reference","name":"HttpService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"getCompaniesForUser":[{"__symbolic":"method"}],"loadState":[{"__symbolic":"method"}],"saveState":[{"__symbolic":"method"}],"login":[{"__symbolic":"method"}],"keyDownFunction":[{"__symbolic":"method"}]}},"MenuTabberComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵdn"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-tabber","template":"<ul class=\"menu-tabber\"> <li (click)=\"selectTab(tab)\" *ngFor=\"let tab of tabs\" [ngClass]=\"tab.active ? 'active' : ''\" title=\"Activate\"> <span>{{tab.title}}</span> </li> </ul>","styles":["ul.menu-tabber { list-style: none; padding: 0; display: flex; flex-direction: row; flex-wrap: nowrap; margin: -1px 0 0 0; height: 30px; line-height: 30px; background-color: #fff; padding-left: 20px; border-bottom: 1px solid #ddd; } ul.menu-tabber > li { line-height: 30px; padding: 0 10px; font-size: 12px; position: relative; cursor: pointer; color: #000; font-weight: 500; } ul.menu-tabber > li.active { /* background-color: #b8b8b8;*/ border-bottom: 2px solid #0277bd; } "]}]}],"members":{"selectedTab":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selectTab":[{"__symbolic":"method"}],"addTab":[{"__symbolic":"method"}],"removeTab":[{"__symbolic":"method"}]}},"MenuTabComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-tab","template":""}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuTabberComponent"}]}],"ngOnDestroy":[{"__symbolic":"method"}]}},"MenuContainerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-container","template":"<tb-frame> <tb-toolbar-top></tb-toolbar-top> <tb-frame-content> <div class=\"menu-page\"> <kendo-tabstrip #tabber (tabSelect)=\"changeTabByIndex($event)\" [height]=\"31\"> <kendo-tabstrip-tab [title]=\"menuTab?.title\" *ngFor=\"let menuTab of utilsService.toArray(menuService?.selectedGroup?.Menu)\"> <ng-template kendoTabContent> <div class=\"wrap\"> <tb-header-strip [title]=\"menuService?.selectedMenu?.title\"> <div class=\"header-strip-content\"> <button class=\"show-description\" title=\"Show Descriptions\" kendoButton (click)=\"menuService?.toggleDecription()\" [bare]=\"!menuService?.showDescription\" [primary]=\"menuService?.showDescription\"><md-icon>subject</md-icon></button> </div> <div class=\"header-strip-under\"> <tb-menu-stepper [Menu]=\"menuService.applicationMenu\"></tb-menu-stepper> </div> </tb-header-strip> <div class=\"menu-container\" *ngIf=\"menuService.selectedMenu != undefined\"> <masonry [options]=\"masonryOptions\" #masonryContainer> <div class=\"brick-sizer\"></div> <tb-menu-content *ngFor=\"let tile of tiles\" [tile]=\"tile\" class=\"col-xs-12 col-md-6\" [ngClass]=\"{'col-lg-3': tiles.length > 3, 'col-lg-4': tiles.length < 4}\"></tb-menu-content> </masonry> </div> </div> </ng-template> </kendo-tabstrip-tab> </kendo-tabstrip> </div> </tb-frame-content> </tb-frame>","styles":[".menu-page { display: flex; flex-direction: column; flex: 1; } .menu-container div.toolbar-top { border-bottom: 0; } .menu-page kendo-tabstrip { background: #fff; flex: 1; } .menu-page .k-tabstrip-top > .k-tabstrip-items { min-height: 30px; } .menu-page .k-tabstrip-top > .k-tabstrip-items .k-item { border: none; border-radius: 0; margin-bottom: 0; } .menu-page .k-tabstrip > .k-tabstrip-items .k-item .k-link { font-weight: 700; font-size: 13px; color: #000; } .menu-page .k-tabstrip-top > .k-tabstrip-items .k-item.k-state-active { border: none; } .menu-page .k-tabstrip-top > .k-tabstrip-items .k-item.k-state-active .k-link { color: #0277bd; } .menu-page .k-content { background: #F1F4F7; flex: 1; } .menu-page .show-description md-icon { padding: 0; margin: 0; width: 18px; height: 18px; font-size: 18px; } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"tabber":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["tabber"]}]}],"masonryContainer":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["masonryContainer"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"SettingsService"},{"__symbolic":"reference","name":"LocalizationService"}]}],"refreshLayout":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"initTab":[{"__symbolic":"method"}],"isSelected":[{"__symbolic":"method"}],"changeTabWhenMenuChanges":[{"__symbolic":"method"}],"findTabIndexByMenu":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"changeTabByIndex":[{"__symbolic":"method"}],"getTiles":[{"__symbolic":"method"}],"ifTileHasObjects":[{"__symbolic":"method"}],"tileIsVisible":[{"__symbolic":"method"}]}},"MenuElementComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-element","template":"<div class=\"menu-element\" [ngClass]=\"object.starHover ? 'active' : ''\"> <md-spinner *ngIf=\"object.isLoading\">{{object.title}}</md-spinner> <div class=\"menu-element-content\"> <div class=\"header\"> <md-icon class=\"object-type\" [ngClass]=\"object.objectType\">{{imageService.getObjectIcon(object)}}</md-icon> <span (click)=\"runFunction(object)\">{{object.title}}</span> <md-icon class=\"star\" [class.favorite]=\"object.isFavorite\" (click)=\"menuService.toggleFavorites(object)\" (mouseenter)=\"object.starHover=true\" (mouseleave)=\"object.starHover=false\">{{getFavoriteClass(object)}}</md-icon> </div> <p (click)=\"runFunction(object)\" *ngIf=\"menuService?.showDescription\" class=\"description\">{{lorem}}</p> </div> </div>","styles":[".menu-element { display: flex; flex-direction: row; flex-wrap: nowrap; align-content: stretch; align-items: flex-start; background: #f1f4f7; padding: 0.3rem; margin: 0.2rem 0; color: #0277bd; font-weight: 700; } .menu-element:hover { background: #fffbe0; transition: background 0.2s; } .menu-element-content { display: flex; flex-direction: column; justify-content: space-between; width: 100%; } .menu-element-content .header { display: flex; flex-direction: row; align-items: center; } .menu-element-content p.description { font-size: 12px; font-weight: 500; color: #000; margin-bottom: 0; cursor: pointer; display: flex; align-items: flex-end; } .menu-element .object-type { color: #bbb; font-size: 20px; line-height: 24px; } .menu-element .object-type.Document { color: #0277bd; } .menu-element .object-type.Report, .menu-element .object-type.Function { color: #3EAB66; } .menu-element .object-type.Batch { color: #ffa700; } .menu-element md-spinner { width: 30px; height: 21px; margin-top: 2px; } .menu-element span { font-size: 13px; line-height: 16px; cursor: pointer; flex: 1 1 auto; padding: 0 3px; color: #000; font-weight: 500; } .menu-element .isLoading { color: #999; } .menu-element .star { color: #bbb; font-size: 20px; line-height: 24px; } .menu-element .star:hover { color: #0277bd; cursor: pointer; } .menu-element .star.favorite { color: #0277bd; } @media screen and (min-width: 48em) { .menu-element .menu-element-content p.description { min-height: 25px; } .menu-element span { font-size: 14px; } } "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"object":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"}]}],"getFavoriteClass":[{"__symbolic":"method"}],"runFunction":[{"__symbolic":"method"}]}},"MenuContentComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-menu-content","template":"<masonry-brick class=\"brick\" [ngClass]=\"{'brick--width2': getObjects().length > 10 }\"> <md-card *ngIf=\"tile != undefined\"> <md-card-title> <span>{{tile.title}}</span> </md-card-title> <md-card-content> <div class=\"row\"> <tb-menu-element [object]=\"object\" *ngFor=\"let object of getObjects();\" class=\"menu-content col-xs-12\" [ngClass]=\"{'col-md-6': getObjects().length > 10 , 'col-md-12': getObjects().length <= 10}\"></tb-menu-element> </div> </md-card-content> </md-card> </masonry-brick>","styles":[":host(tb-menu-content).limited md-card-content { max-height: 215px; overflow: auto; } /* @custom-media --sm-viewport only screen and (min-width: 48em); @custom-media --md-viewport only screen and (min-width: 64em); @custom-media --lg-viewport only screen and (min-width: 75em); */ .brick { width: 100%; } .brick--width2 { width: 100%; } @media screen and (min-width: 48em) { .brick { width: 50%; } .brick--width2 { width: 100%; } } @media screen and (min-width: 64em) { .brick { width: 33.3%; } .brick--width2 { width: 66.6%; } } @media screen and (min-width: 75em) { .brick { width: 25%; } .brick--width2 { width: 50%; } } tb-menu-element { padding-right: 0.3rem; padding-left: 0.3rem; } "]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"HttpMenuService"},{"__symbolic":"reference","name":"MenuService"},{"__symbolic":"reference","name":"UtilsService"},{"__symbolic":"reference","name":"ImageService"},{"__symbolic":"reference","name":"EventManagerService"}]}],"tile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["tile"]}]}],"getObjects":[{"__symbolic":"method"}],"getPinnedClass":[{"__symbolic":"method"}]}},"TbIconsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule"}],"declarations":[{"__symbolic":"reference","name":"TbIconComponent"},{"__symbolic":"reference","name":"M4IconComponent"}],"exports":[{"__symbolic":"reference","name":"TbIconComponent"},{"__symbolic":"reference","name":"M4IconComponent"}]}]}],"members":{}},"TbIconComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"tb-icon","template":"<div [ngSwitch]=\"iconType\" class=\"div-icon\"> <img *ngSwitchCase=\"'IMG'\" src=\"{{imgUrl}}{{icon}}\" /> <m4-icon *ngSwitchCase=\"'M4'\" icon=\"{{icon}}\"></m4-icon> <i *ngSwitchCase=\"'CLASS'\" class=\"{{icon}}\">asdgf</i> <h5 *ngSwitchDefault>no-icon</h5> </div>"}]}],"members":{"iconType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}},"M4IconComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"m4-icon","styles":[""],"template":"<i class=\"m4-icon m4-{{icon}}\"></i>"}]}],"members":{"icon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"},"arguments":["icon"]}]}],"__ctor__":[{"__symbolic":"constructor"}]}},"ɵdm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable"}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"getBackendUrl":[{"__symbolic":"method"}],"getApiUrl":[{"__symbolic":"method"}],"getWsUrl":[{"__symbolic":"method"}],"setPort":[{"__symbolic":"method"}],"setHost":[{"__symbolic":"method"}],"setSecure":[{"__symbolic":"method"}]}},"ɵdt":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵds"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"template":""}]}],"members":{"caption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"args":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"validators":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"value":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"blur":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["blur"]}]}],"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}]}}},"origins":{"TaskbuilderCoreModule":"./index","TbCoreModule":"./core/core.module","BOService":"./core/services/bo.service","BOClient":"./core/services/bo.service","BOHelperService":"./core/services/bohelper.service","ComponentService":"./core/services/component.service","ComponentCreatedArgs":"./core/services/component.service","DataService":"./core/services/data.service","DocumentService":"./core/services/document.service","EnumsService":"./core/services/enums.service","EventDataService":"./core/services/eventdata.service","ExplorerService":"./core/services/explorer.service","HttpService":"./core/services/http.service","InfoService":"./core/services/info.service","LayoutService":"./core/services/layout.service","Logger":"./core/services/logger.service","LoginSessionService":"./core/services/login-session.service","SidenavService":"./core/services/sidenav.service","TabberService":"./core/services/tabber.service","UtilsService":"./core/services/utils.service","WebSocketService":"./core/services/websocket.service","SocketMessage":"./core/services/websocket.service","CoreGuard":"./core/guards/core.guard","FrameComponent":"./core/containers/frame/frame.component","FrameContentComponent":"./core/containers/frame/frame-content/frame-content.component","ViewComponent":"./core/containers/view/view.component","ViewContainerComponent":"./core/containers/view/view-container/view-container.component","DockpaneComponent":"./core/containers/dockpane/dockpane.component","DockpaneContainerComponent":"./core/containers/dockpane/dockpane-container/dockpane-container.component","TileManagerComponent":"./core/containers/tiles/tile-manager/tile-manager.component","TileGroupComponent":"./core/containers/tiles/tile-group/tile-group.component","TileComponent":"./core/containers/tiles/tile/tile.component","TilePanelComponent":"./core/containers/tiles/tile-panel/tile-panel.component","LayoutContainerComponent":"./core/containers/tiles/layout-container/layout-container.component","MessageDialogComponent":"./core/containers/message-dialog/message-dialog.component","MessageDlgArgs":"./core/containers/message-dialog/message-dialog.component","MessageDlgResult":"./core/containers/message-dialog/message-dialog.component","BOComponent":"./core/components/bo.component","DocumentComponent":"./core/components/document.component","DynamicCmpComponent":"./core/components/dynamic-cmp.component","PageNotFoundComponent":"./core/components/page-not-found.component","TbComponent":"./core/components/tb.component","TopbarComponent":"./core/components/topbar/topbar.component","TopbarMenuComponent":"./core/components/topbar/topbar-menu/topbar-menu.component","TopbarMenuAppComponent":"./core/components/topbar/topbar-menu/topbar-menu-app/topbar-menu-app.component","TopbarMenuElementsComponent":"./core/components/topbar/topbar-menu/topbar-menu-elements/topbar-menu-elements.component","TopbarMenuTestComponent":"./core/components/topbar/topbar-menu/topbar-menu-test/topbar-menu-test.component","TopbarMenuUserComponent":"./core/components/topbar/topbar-menu/topbar-menu-user/topbar-menu-user.component","ContextMenuComponent":"./core/components/context-menu/context-menu.component","SaveComponent":"./core/components/explorer/save/save.component","OpenComponent":"./core/components/explorer/open/open.component","AccordionComponent":"./core/components/accordion/accordion.component","AccordionGroupComponent":"./core/components/accordion/accordion.component","HeaderStripComponent":"./core/components/header-strip/header-strip.component","ToolbarTopComponent":"./core/components/toolbar/toolbar-top/toolbar-top.component","ToolbarSeparatorComponent":"./core/components/toolbar/toolbar-top/toolbar-separator.component","ToolbarTopButtonComponent":"./core/components/toolbar/toolbar-top/toolbar-top-button/toolbar-top-button.component","ToolbarBottomComponent":"./core/components/toolbar/toolbar-bottom/toolbar-bottom.component","ToolbarBottomButtonComponent":"./core/components/toolbar/toolbar-bottom/toolbar-bottom-button/toolbar-bottom-button.component","BodyEditComponent":"./core/controls/body-edit/body-edit.component","BoolEditComponent":"./core/controls/bool-edit/bool-edit.component","ButtonComponent":"./core/controls/button/button.component","CaptionComponent":"./core/controls/caption/caption.component","LinearGaugeComponent":"./core/controls/charts/linear-gauge/linear-gauge.component","CheckBoxComponent":"./core/controls/checkbox/checkbox.component","ColorPickerComponent":"./core/controls/color-picker/color-picker.component","ComboComponent":"./core/controls/combo/combo.component","ComboSimpleComponent":"./core/controls/combo-simple/combo-simple.component","DateInputComponent":"./core/controls/date-input/date-input.component","EmailComponent":"./core/controls/email/email.component","EnumComboComponent":"./core/controls/enum-combo/enum-combo.component","FileComponent":"./core/controls/file/file.component","GridComponent":"./core/controls/grid/grid.component","ImageComponent":"./core/controls/image/image.component","LabelStaticComponent":"./core/controls/label-static/label-static.component","LinkComponent":"./core/controls/link/link.component","MaskedTextBoxComponent":"./core/controls/masked-text-box/masked-text-box.component","NumericTextBoxComponent":"./core/controls/numeric-text-box/numeric-text-box.component","PasswordComponent":"./core/controls/password/password.component","PhoneComponent":"./core/controls/phone/phone.component","PlaceholderComponent":"./core/controls/placeholder/placeholder.component","RadioComponent":"./core/controls/radio/radio.component","SectionTitleComponent":"./core/controls/section-title/section-title.component","StateButtonComponent":"./core/controls/state-button/state-button.component","TbCardComponent":"./core/controls/tb-card/tb-card.component","TbCardContentComponent":"./core/controls/tb-card/tb-card-content/tb-card-content.component","TbCardTitleComponent":"./core/controls/tb-card/tb-card-title/tb-card-title.component","TextComponent":"./core/controls/text/text.component","TextareaComponent":"./core/controls/textarea/textarea.component","TimeInputComponent":"./core/controls/time-input/time-input.component","UnknownComponent":"./core/controls/unknown/unknown.component","TbSharedModule":"./shared/shared.module","TbMenuModule":"./menu/menu.module","MenuService":"./menu/services/menu.service","EventManagerService":"./menu/services/event-manager.service","SettingsService":"./menu/services/settings.service","HttpMenuService":"./menu/services/http-menu.service","ImageService":"./menu/services/image.service","LocalizationService":"./menu/services/localization.service","GroupSelectorComponent":"./menu/components/menu/group-selector/group-selector.component","MenuStepperComponent":"./menu/components/menu/menu-stepper/menu-stepper.component","ConnectionInfoDialogComponent":"./menu/components/menu/connection-info-dialog/connection-info-dialog.component","ProductInfoDialogComponent":"./menu/components/menu/product-info-dialog/product-info-dialog.component","SearchComponent":"./menu/components/menu/search/search.component","MostUsedComponent":"./menu/components/menu/most-used/most-used.component","MenuComponent":"./menu/components/menu/menu.component","ApplicationSelectorComponent":"./menu/components/menu/application-selector/application-selector.component","FavoritesComponent":"./menu/components/menu/favorites/favorites.component","LoginComponent":"./menu/components/login/login.component","MenuTabberComponent":"./menu/components/menu/menu-tabber/menu-tabber.component","MenuTabComponent":"./menu/components/menu/menu-tabber/menu-tab/menu-tab.component","MenuContainerComponent":"./menu/components/menu/menu-container/menu-container.component","MenuElementComponent":"./menu/components/menu/menu-element/menu-element.component","MenuContentComponent":"./menu/components/menu/menu-content/menu-content.component","TbIconsModule":"./icons/icons.module","TbIconComponent":"./icons/tb-icon.component","M4IconComponent":"./icons/m4-icon.component","ɵa":"./core/containers","ɵb":"./core/containers","ɵc":"./core/containers","ɵd":"./core/containers","ɵe":"./core/containers","ɵf":"./core/containers","ɵg":"./core/containers","ɵh":"./core/containers","ɵi":"./core/containers","ɵj":"./core/containers","ɵk":"./core/containers","ɵl":"./core/containers","ɵm":"./core/components","ɵn":"./core/components","ɵo":"./core/components","ɵp":"./core/components","ɵq":"./core/components","ɵr":"./core/components","ɵs":"./core/components","ɵt":"./core/components","ɵu":"./core/components","ɵv":"./core/components","ɵw":"./core/components","ɵx":"./core/components","ɵy":"./core/components","ɵz":"./core/components","ɵba":"./core/components","ɵbb":"./core/components","ɵbc":"./core/components","ɵbd":"./core/components","ɵbe":"./core/components","ɵbf":"./core/controls","ɵbg":"./core/controls","ɵbh":"./core/controls","ɵbi":"./core/controls","ɵbj":"./core/controls","ɵbk":"./core/controls","ɵbl":"./core/controls","ɵbm":"./core/controls","ɵbn":"./core/controls","ɵbo":"./core/controls","ɵbp":"./core/controls","ɵbq":"./core/controls","ɵbr":"./core/controls","ɵbs":"./core/controls","ɵbt":"./core/controls","ɵbu":"./core/controls","ɵbv":"./core/controls","ɵbw":"./core/controls","ɵbx":"./core/controls","ɵby":"./core/controls","ɵbz":"./core/controls","ɵca":"./core/controls","ɵcb":"./core/controls","ɵcc":"./core/controls","ɵcd":"./core/controls","ɵce":"./core/controls","ɵcf":"./core/controls","ɵcg":"./core/controls","ɵch":"./core/controls","ɵci":"./core/controls","ɵcj":"./core/controls","ɵck":"./core/controls","ɵcl":"./core/services","ɵcm":"./core/services","ɵcn":"./core/services","ɵco":"./core/services","ɵcp":"./core/services","ɵcq":"./core/services","ɵcr":"./core/services","ɵcs":"./core/services","ɵct":"./core/services","ɵcu":"./core/services","ɵcv":"./core/services","ɵcw":"./core/services","ɵcx":"./core/services","ɵcy":"./core/services","ɵcz":"./core/services","ɵda":"./core/services","ɵdb":"./core/services","ɵdc":"./core/guards","ɵdd":"./shared/directives","ɵde":"./shared/directives","ɵdf":"./shared/directives","ɵdg":"./shared/directives","ɵdh":"./shared/directives","ɵdi":"./shared/directives","ɵdj":"./shared/directives","ɵdk":"./shared/directives","ɵdl":"./shared/directives","ɵdm":"./core/services/url.service","ɵdn":"./core","ɵdo":"./core","ɵdp":"./core/","ɵdq":"./core/","ɵdr":"./core/","ɵds":"./core/components","ɵdt":"./core/controls/control.component"},"importAs":"@taskbuilder/core"}