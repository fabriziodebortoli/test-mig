//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.RSWeb .WebServicesWrapper {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class WebServicesWrapperStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal WebServicesWrapperStrings() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("rs-web .WebServicesWrapper.WebServicesWrapperStrings", typeof(WebServicesWrapperStrings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The activation expression contains invalid characters..
        /// </summary>
        public static string ActivationExpressionContainsInvalidCharErrMsg {
            get {
                return ResourceManager.GetString("ActivationExpressionContainsInvalidCharErrMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Probably parenthesis mismatch in activation expression..
        /// </summary>
        public static string ActivationExpressionParenthesisMismatchErrMsg {
            get {
                return ResourceManager.GetString("ActivationExpressionParenthesisMismatchErrMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Syntax error in activation expression (Error in &apos;{0}&apos;)..
        /// </summary>
        public static string ActivationExpressionSyntaxErrMsg {
            get {
                return ResourceManager.GetString("ActivationExpressionSyntaxErrMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product is running in Demo mode with limited functionalities. It has to be registered within {0}, or the program will stop working and you will have to register it in order to continue using it..
        /// </summary>
        public static string ActivationStateDemo {
            get {
                return ResourceManager.GetString("ActivationStateDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product is running in Demo mode..
        /// </summary>
        public static string ActivationStateDemoNew {
            get {
                return ResourceManager.GetString("ActivationStateDemoNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product has been disabled. Please contact the producer..
        /// </summary>
        public static string ActivationStateDisabled {
            get {
                return ResourceManager.GetString("ActivationStateDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product is not activated and has to be registered. After registration you will be able to continue using it..
        /// </summary>
        public static string ActivationStateNoActivated {
            get {
                return ResourceManager.GetString("ActivationStateNoActivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product has to be registered within {0} or it will stop working. After registration you will be able to continue using it..
        /// </summary>
        public static string ActivationStateWarning {
            get {
                return ResourceManager.GetString("ActivationStateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user is already connected to the system using a company different from the specified one..
        /// </summary>
        public static string AlreadyLoggedOnDifferentCompanyError {
            get {
                return ResourceManager.GetString("AlreadyLoggedOnDifferentCompanyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Integrated security users can not use this functionality.
        /// </summary>
        public static string AuthenticationTypeError {
            get {
                return ResourceManager.GetString("AuthenticationTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The beginning of the execution of the command in silente mode is failed..
        /// </summary>
        public static string BeginRunBatchInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("BeginRunBatchInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The begin of function call {0} has failed.
        /// </summary>
        public static string BeginRunFunctionFailedFmt {
            get {
                return ResourceManager.GetString("BeginRunFunctionFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The beginning of the execution of the report in silente mode is failed..
        /// </summary>
        public static string BeginRunReportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("BeginRunReportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The beginning of the execution of export document in silente mode is failed..
        /// </summary>
        public static string BeginRunXmlExportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("BeginRunXmlExportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The beginning of the execution of import document in silente mode is failed..
        /// </summary>
        public static string BeginRunXmlImportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("BeginRunXmlImportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error in CAL management. Impossible to assign a CAL..
        /// </summary>
        public static string CalManagementError {
            get {
                return ResourceManager.GetString("CalManagementError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot obtain diagnostic from TBServices.
        /// </summary>
        public static string CannotObtainDiagnostic {
            get {
                return ResourceManager.GetString("CannotObtainDiagnostic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You have to change your password.
        /// </summary>
        public static string ChangePasswordNeeded {
            get {
                return ResourceManager.GetString("ChangePasswordNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Activation check failed (syntax error in expression &quot;{0}&quot;)..
        /// </summary>
        public static string CheckActivationExpressionErrFmtMsg {
            get {
                return ResourceManager.GetString("CheckActivationExpressionErrFmtMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Document close failed.
        /// </summary>
        public static string CloseDocumentFailed {
            get {
                return ResourceManager.GetString("CloseDocumentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to close active login.
        /// </summary>
        public static string CloseLoginFailed {
            get {
                return ResourceManager.GetString("CloseLoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TaskBuilder close failed..
        /// </summary>
        public static string CloseTBFailed {
            get {
                return ResourceManager.GetString("CloseTBFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A communication error occurred..
        /// </summary>
        public static string CommunicationErrorExceptionMessage {
            get {
                return ResourceManager.GetString("CommunicationErrorExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The company database does not exists or it is not possible connecting to it. It must be created with the Administration Console..
        /// </summary>
        public static string CompanyDatabaseNotPresent {
            get {
                return ResourceManager.GetString("CompanyDatabaseNotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The company database table does not exists. They must be created with the Administration Console..
        /// </summary>
        public static string CompanyDatabaseTablesNotPresent {
            get {
                return ResourceManager.GetString("CompanyDatabaseTablesNotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TaskBuilder connection failed.
        /// </summary>
        public static string ConnectionToTbFailed {
            get {
                return ResourceManager.GetString("ConnectionToTbFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} day(s).
        /// </summary>
        public static string DayToExpire {
            get {
                return ResourceManager.GetString("DayToExpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The size of the database you are using exceed the maximum allowed size (2GB). To continue you have to upgrade your server to the newest version SQLServer..
        /// </summary>
        public static string DBSizeError {
            get {
                return ResourceManager.GetString("DBSizeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Login failed for EasyLookSystem user..
        /// </summary>
        public static string EasyLookSysLoginFailed {
            get {
                return ResourceManager.GetString("EasyLookSysLoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ending of the execution of the command in silente mode is failed..
        /// </summary>
        public static string EndRunBatchInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("EndRunBatchInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The end of the function call has failed..
        /// </summary>
        public static string EndRunFunctionFailed {
            get {
                return ResourceManager.GetString("EndRunFunctionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ending of the execution of the report in silente mode is failed..
        /// </summary>
        public static string EndRunReportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("EndRunReportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ending of the execution of export document in silente mode is failed..
        /// </summary>
        public static string EndRunXmlExportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("EndRunXmlExportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ending of the execution of import document in silente mode is failed..
        /// </summary>
        public static string EndRunXmlImportInUnattendedModeFailed {
            get {
                return ResourceManager.GetString("EndRunXmlImportInUnattendedModeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Login Manager has not ben able to initialize Activation Manager..
        /// </summary>
        public static string ErrActivationManager {
            get {
                return ResourceManager.GetString("ErrActivationManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Password change failed..
        /// </summary>
        public static string ErrChangePassword {
            get {
                return ResourceManager.GetString("ErrChangePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Please select both user and company..
        /// </summary>
        public static string ErrChooseUserAndCompany {
            get {
                return ResourceManager.GetString("ErrChooseUserAndCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: impossible to read from system database the connection parameters for the company.
        /// </summary>
        public static string ErrConnectionParams {
            get {
                return ResourceManager.GetString("ErrConnectionParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File {0} does not exist..
        /// </summary>
        public static string ErrFileNotExists {
            get {
                return ResourceManager.GetString("ErrFileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: selected company not exist in system database.
        /// </summary>
        public static string ErrInvalidCompany {
            get {
                return ResourceManager.GetString("ErrInvalidCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: the process not allows a simultaneous login.
        /// </summary>
        public static string ErrInvalidProcess {
            get {
                return ResourceManager.GetString("ErrInvalidProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: user not exist in system database, please make sure you entered the password correctly..
        /// </summary>
        public static string ErrInvalidUser {
            get {
                return ResourceManager.GetString("ErrInvalidUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: company database is in use by another user..
        /// </summary>
        public static string ErrLockedDatabase {
            get {
                return ResourceManager.GetString("ErrLockedDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Login failed. Please make sure you entered the password correctly..
        /// </summary>
        public static string ErrLoginFailed {
            get {
                return ResourceManager.GetString("ErrLoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: no article exists with the specified feature.
        /// </summary>
        public static string ErrNoArticleFunctionality {
            get {
                return ResourceManager.GetString("ErrNoArticleFunctionality", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error invoking remote function &apos;{0}&apos;: &apos;{1}&apos;.
        /// </summary>
        public static string ErrorInvokingRemoteFunction {
            get {
                return ResourceManager.GetString("ErrorInvokingRemoteFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: authentication token is empty.
        /// </summary>
        public static string ErrProcessNotAuthenticated {
            get {
                return ResourceManager.GetString("ErrProcessNotAuthenticated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: system database not contains information about the provider specified for the company.
        /// </summary>
        public static string ErrProviderInfo {
            get {
                return ResourceManager.GetString("ErrProviderInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The new password does not match the confirmed password..
        /// </summary>
        public static string ErrPwdDifferent {
            get {
                return ResourceManager.GetString("ErrPwdDifferent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The password must be at least of {0} characters. Check if you are using the strong password management..
        /// </summary>
        public static string ErrPwdLength {
            get {
                return ResourceManager.GetString("ErrPwdLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The connection string for system database specified in ServerConnection.config is empty, so you must use Administration Console..
        /// </summary>
        public static string ErrSysDBConnectionString {
            get {
                return ResourceManager.GetString("ErrSysDBConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user is already connected to the system. Do you want to close previous working session and open new one?.
        /// </summary>
        public static string ErrUserAlreadyLogged {
            get {
                return ResourceManager.GetString("ErrUserAlreadyLogged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user is already connected to the system..
        /// </summary>
        public static string ErrUserAlreadyLoggedNoForce {
            get {
                return ResourceManager.GetString("ErrUserAlreadyLoggedNoForce", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: impossible to associate the user to the licence.
        /// </summary>
        public static string ErrUserAssignmentToArticle {
            get {
                return ResourceManager.GetString("ErrUserAssignmentToArticle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user has to change the password, but his configuration does not allow it. Please contact the security manager..
        /// </summary>
        public static string ErrUserCannotChangePwdButMust {
            get {
                return ResourceManager.GetString("ErrUserCannotChangePwdButMust", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user is already connected to the system with another application..
        /// </summary>
        public static string ErrWebUserAlreadyLogged {
            get {
                return ResourceManager.GetString("ErrWebUserAlreadyLogged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Function.
        /// </summary>
        public static string Function {
            get {
                return ResourceManager.GetString("Function", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User can not access to this application.
        /// </summary>
        public static string GDIApplicationAccessDenied {
            get {
                return ResourceManager.GetString("GDIApplicationAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A generic error occurred..
        /// </summary>
        public static string GenericErrorExceptionMessage {
            get {
                return ResourceManager.GetString("GenericErrorExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An unexpected error occurred. Error code is {0}..
        /// </summary>
        public static string GenericExceptionError {
            get {
                return ResourceManager.GetString("GenericExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The application date cannot be obtained..
        /// </summary>
        public static string GetApplicationDateFailed {
            get {
                return ResourceManager.GetString("GetApplicationDateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TaskBuilder can&apos;t supply his connection data..
        /// </summary>
        public static string GetCurrentUserFailed {
            get {
                return ResourceManager.GetString("GetCurrentUserFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameters assignment of the command {0} has failed.
        /// </summary>
        public static string GetDocumentParametersFailedFmt {
            get {
                return ResourceManager.GetString("GetDocumentParametersFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error getting extra filters for row security layer.
        /// </summary>
        public static string GetGetExtraFilteringFailed {
            get {
                return ResourceManager.GetString("GetGetExtraFilteringFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The HotLink interrogation cannot be deduced..
        /// </summary>
        public static string GetHotlinkQueryFailed {
            get {
                return ResourceManager.GetString("GetHotlinkQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The application global messages cannot be found..
        /// </summary>
        public static string GetMessagesFailed {
            get {
                return ResourceManager.GetString("GetMessagesFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request of number of open documents in application failed..
        /// </summary>
        public static string GetNrOpenDocumentsFailed {
            get {
                return ResourceManager.GetString("GetNrOpenDocumentsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error, it is impossible to obtain the TbLoader process id.
        /// </summary>
        public static string GetProcessIDFailed {
            get {
                return ResourceManager.GetString("GetProcessIDFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Demand for valorization of the parameters of report {0} failed..
        /// </summary>
        public static string GetReportParametersFailedFmt {
            get {
                return ResourceManager.GetString("GetReportParametersFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to GetWindowInfosFromPoint failed.
        /// </summary>
        public static string GetWindowInfosFromPointFailed {
            get {
                return ResourceManager.GetString("GetWindowInfosFromPointFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Demand for valorization of the execution parameters of document {0} failed..
        /// </summary>
        public static string GetXMLExportParametersFailedFmt {
            get {
                return ResourceManager.GetString("GetXMLExportParametersFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Company not corresponding to the company previously specified in configuration wizard..
        /// </summary>
        public static string ImagoCompanyNotCorresponding {
            get {
                return ResourceManager.GetString("ImagoCompanyNotCorresponding", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This user is already associated to another Infinity user..
        /// </summary>
        public static string ImagoUserAlreadyAssociated {
            get {
                return ResourceManager.GetString("ImagoUserAlreadyAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TbLoader initialization failed..
        /// </summary>
        public static string InitTbLoginFailed {
            get {
                return ResourceManager.GetString("InitTbLoginFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The version of company database is not compatible with program in use. Please check its correctness with Administration Console (Check and upgrade Company database)..
        /// </summary>
        public static string InvalidDatabaseError {
            get {
                return ResourceManager.GetString("InvalidDatabaseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The company database is not supported by application configuration..
        /// </summary>
        public static string InvalidDatabaseForActivation {
            get {
                return ResourceManager.GetString("InvalidDatabaseForActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The database you are connecting to is not valid for current product release; please upgrade it using the Administration Console.
        /// </summary>
        public static string InvalidModuleRelease {
            get {
                return ResourceManager.GetString("InvalidModuleRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid service URL: &apos;{0}&apos;.
        /// </summary>
        public static string InvalidServiceUrl {
            get {
                return ResourceManager.GetString("InvalidServiceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Infinity token contains invalid data..
        /// </summary>
        public static string InvalidSSOToken {
            get {
                return ResourceManager.GetString("InvalidSSOToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An error occurred invoking &apos;{0}&apos; web method..
        /// </summary>
        public static string InvokeWebMethodFailed {
            get {
                return ResourceManager.GetString("InvokeWebMethodFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Library.
        /// </summary>
        public static string Library {
            get {
                return ResourceManager.GetString("Library", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The user is locked, you need to unlock it with Administration Console..
        /// </summary>
        public static string LoginLocked {
            get {
                return ResourceManager.GetString("LoginLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must manually start TBLoader.exe, or modify the &apos;singletonTBLoader&apos; attribute in the TBServices web configuration file setting it to &apos;false&apos;.
        /// </summary>
        public static string ManualStartTBLoader {
            get {
                return ResourceManager.GetString("ManualStartTBLoader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Impossible to retrieve connection string to connect to the system database..
        /// </summary>
        public static string MissingConnectionString {
            get {
                return ResourceManager.GetString("MissingConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The same SSOID  Infinity is associated to more than one user..
        /// </summary>
        public static string MoreThanOneSSOToken {
            get {
                return ResourceManager.GetString("MoreThanOneSSOToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The selected company is not available because it violate the Standard Edition boundaries..
        /// </summary>
        public static string NoAdmittedCompany {
            get {
                return ResourceManager.GetString("NoAdmittedCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Available user licences are sold out.
        /// </summary>
        public static string NoCalAvailableError {
            get {
                return ResourceManager.GetString("NoCalAvailableError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to MagicDocuments module is not usable, it lacks CAL..
        /// </summary>
        public static string NoOfficeLicenseError {
            get {
                return ResourceManager.GetString("NoOfficeLicenseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No TCP port available in range [{0}-{1}].
        /// </summary>
        public static string NoPortAvailable {
            get {
                return ResourceManager.GetString("NoPortAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A user is not logged in..
        /// </summary>
        public static string NotLoggedExceptionMessage {
            get {
                return ResourceManager.GetString("NotLoggedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No valid TBLoader process listening at port {0}!.
        /// </summary>
        public static string NoValidTbLoaderListening {
            get {
                return ResourceManager.GetString("NoValidTbLoaderListening", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to EasyLook article is not activated, is not usabled.
        /// </summary>
        public static string NoWebLicenseError {
            get {
                return ResourceManager.GetString("NoWebLicenseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TaskBuilder authentication token change failed..
        /// </summary>
        public static string OverwriteAuthenticationFailed {
            get {
                return ResourceManager.GetString("OverwriteAuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to change password many times during the same day..
        /// </summary>
        public static string PasswordAlreadyChangedToday {
            get {
                return ResourceManager.GetString("PasswordAlreadyChangedToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to PathFinder initialize failed..
        /// </summary>
        public static string PathFinderInitializationFailed {
            get {
                return ResourceManager.GetString("PathFinderInitializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This product is properly registered..
        /// </summary>
        public static string ProductIsRegistered {
            get {
                return ResourceManager.GetString("ProductIsRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The execution of the command {0} in silente mode is failed..
        /// </summary>
        public static string RunBatchInUnattendedModeFailedFmt {
            get {
                return ResourceManager.GetString("RunBatchInUnattendedModeFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Before using the application you first have to execute Administration Console and create a company..
        /// </summary>
        public static string RunConsoleFirst {
            get {
                return ResourceManager.GetString("RunConsoleFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed running document {0}..
        /// </summary>
        public static string RunDocumentFailedFmt {
            get {
                return ResourceManager.GetString("RunDocumentFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to invoke function &apos;{0}&apos;.
        /// </summary>
        public static string RunFailed {
            get {
                return ResourceManager.GetString("RunFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The run function {0} failed..
        /// </summary>
        public static string RunFunctionFailedFmt {
            get {
                return ResourceManager.GetString("RunFunctionFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to RunIconizedDocument failed.
        /// </summary>
        public static string RunIconizedDocumentFailed {
            get {
                return ResourceManager.GetString("RunIconizedDocumentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The run report {0} failed..
        /// </summary>
        public static string RunReportFailedFmt {
            get {
                return ResourceManager.GetString("RunReportFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The run report {0} in silent mode is failed..
        /// </summary>
        public static string RunReportInUnattendedModeFailedFmt {
            get {
                return ResourceManager.GetString("RunReportInUnattendedModeFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The execution of the export of the document {0} in silente mode is failed..
        /// </summary>
        public static string RunXmlExportInUnattendedModeFailedFmt {
            get {
                return ResourceManager.GetString("RunXmlExportInUnattendedModeFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The execution of the import of the document {0} in silente mode is failed..
        /// </summary>
        public static string RunXmlImportInUnattendedModeFailedFmt {
            get {
                return ResourceManager.GetString("RunXmlImportInUnattendedModeFailedFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error: the communication channel with Login Manager is down, please verify the Asp.Net process (aspnet_wp or w3wp) and IIS are running properly. {0}.
        /// </summary>
        public static string ServerDown {
            get {
                return ResourceManager.GetString("ServerDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Login Manager has failed the connection to system database..
        /// </summary>
        public static string ServerNotConnectedToSystemDB {
            get {
                return ResourceManager.GetString("ServerNotConnectedToSystemDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request of change of application date failed.
        /// </summary>
        public static string SetApplicationDateFailed {
            get {
                return ResourceManager.GetString("SetApplicationDateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error, it is impossible to communicate the menu identifier to TaskBuilder application.
        /// </summary>
        public static string SetMenuHandleFailed {
            get {
                return ResourceManager.GetString("SetMenuHandleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An unexpected error occurred. Error code is {0}. This might be caused by a failed product update. Please try reinstalling the product..
        /// </summary>
        public static string SoapExceptionError {
            get {
                return ResourceManager.GetString("SoapExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to connect to selected company, because your serial numbers do not allow you to connect to a company database running on SQL Server 2012 or later versions.
        ///  .
        /// </summary>
        public static string Sql2012NotAllowedForCompany {
            get {
                return ResourceManager.GetString("Sql2012NotAllowedForCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to connect to selected company, because your serial numbers do not allow you to connect to a DMS database running on SQL Server 2012 or later versions.
        ///	.
        /// </summary>
        public static string Sql2012NotAllowedForDMS {
            get {
                return ResourceManager.GetString("Sql2012NotAllowedForDMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An Infinity functionality was requested but the currently logged user is not the same connected with Infinity and this SSOID is not associated to any user. Please close this instance and retry..
        /// </summary>
        public static string SSOIDNotAssociated {
            get {
                return ResourceManager.GetString("SSOIDNotAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Infinity token is empty..
        /// </summary>
        public static string SsoTokenEmpty {
            get {
                return ResourceManager.GetString("SsoTokenEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception during login from Infinity..
        /// </summary>
        public static string SsoTokenError {
            get {
                return ResourceManager.GetString("SsoTokenError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error while starting a new tbLoader.
        /// </summary>
        public static string StartTbLoaderFailed {
            get {
                return ResourceManager.GetString("StartTbLoaderFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Task Builder Framework libraries.
        /// </summary>
        public static string TBComponents {
            get {
                return ResourceManager.GetString("TBComponents", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file {0} is missing..
        /// </summary>
        public static string TBLoaderExeNotFoundFmt {
            get {
                return ResourceManager.GetString("TBLoaderExeNotFoundFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The communication channel is unusable.
        /// </summary>
        public static string TbLoaderSoapPortInvalid {
            get {
                return ResourceManager.GetString("TbLoaderSoapPortInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TaskBuilder connection hasn&apos;t been executed.
        /// </summary>
        public static string TbNotConnected {
            get {
                return ResourceManager.GetString("TbNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Waiting for TBLoader process initialization has timed-out after {0} seconds.
        /// </summary>
        public static string TimeoutStartingTbloader {
            get {
                return ResourceManager.GetString("TimeoutStartingTbloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to today.
        /// </summary>
        public static string ToDayExpire {
            get {
                return ResourceManager.GetString("ToDayExpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The total of CAL associated to the users (in the system database) is greater than the CAL number..
        /// </summary>
        public static string TooManyAssignedCAL {
            get {
                return ResourceManager.GetString("TooManyAssignedCAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to retrieve a valid SOS ticket. Please check your SOS credentials..
        /// </summary>
        public static string UnableToRetrieveSOSTkt {
            get {
                return ResourceManager.GetString("UnableToRetrieveSOSTkt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The LoginManager has not been initialized..
        /// </summary>
        public static string UnInitializedExceptionMessage {
            get {
                return ResourceManager.GetString("UnInitializedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User is not allowed to use the requested functionality..
        /// </summary>
        public static string UserNotAllowed {
            get {
                return ResourceManager.GetString("UserNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User connected to Easylook is not authenticated.
        /// </summary>
        public static string UserNotAuthenticated {
            get {
                return ResourceManager.GetString("UserNotAuthenticated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User can not access to Web applications.
        /// </summary>
        public static string WebApplicationAccessDenied {
            get {
                return ResourceManager.GetString("WebApplicationAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error code: {0}. LoginManager does not respond. Please verify that LoginManager is up and running..
        /// </summary>
        public static string WebExceptionError {
            get {
                return ResourceManager.GetString("WebExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error in program object management which contains information about run report..
        /// </summary>
        public static string WoormInfoError {
            get {
                return ResourceManager.GetString("WoormInfoError", resourceCulture);
            }
        }
    }
}
