//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.TaskBuilderNet.UI.InfinityServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:8080/iMago/services/InfinitySyncro", ConfigurationName="InfinityServices.InfinitySyncro")]
    public interface InfinitySyncro {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message connectRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse connect(Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse> connectAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message connectWithInstanceRevInfinityRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse connectWithInstanceRevInfinity(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse> connectWithInstanceRevInfinityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkRevInfinityUserAlreadyMappedRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse checkRevInfinityUserAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse> checkRevInfinityUserAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getActionRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse getAction(Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse> getActionAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message disconnectRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse disconnect(Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse> disconnectAsync(Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXmlRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse getXml(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse> getXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXmlLengthRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse getXmlLength(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse> getXmlLengthAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getAllAppRegRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse getAllAppReg(Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse> getAllAppRegAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXsdRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse getXsd(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse> getXsdAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXsdByNameRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse getXsdByName(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse> getXsdByNameAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message sendMailRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse sendMail(Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse> sendMailAsync(Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message commitEntityRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse commitEntity(Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse> commitEntityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getAllCompanyRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse getAllCompany(Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse> getAllCompanyAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getAllUsersRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse getAllUsers(Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse> getAllUsersAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message magoWizardRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse magoWizard(Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse> magoWizardAsync(Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getUrlAhrRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse getUrlAhr(Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse> getUrlAhrAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message doProcessRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse doProcess(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse> doProcessAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message connectRevInfinityWithTokenRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse connectRevInfinityWithToken(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse> connectRevInfinityWithTokenAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXmlLengthWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse getXmlLengthWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse> getXmlLengthWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message doProcessSyncroWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse doProcessSyncroWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse> doProcessSyncroWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkDoProcessWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse checkDoProcessWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse> checkDoProcessWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkUserPwdWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse checkUserPwdWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse> checkUserPwdWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkAppRegWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse checkAppRegWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse> checkAppRegWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXsdByNameWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse getXsdByNameWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse> getXsdByNameWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message revCompanyAlreadyMappedRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse revCompanyAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse> revCompanyAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkRevInfinityAlreadyMappedRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse checkRevInfinityAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse> checkRevInfinityAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message revInfinityImportPackageRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse revInfinityImportPackage(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse> revInfinityImportPackageAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message SetConvergencyCriteriaRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse SetConvergencyCriteria(Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse> SetConvergencyCriteriaAsync(Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message GetConvergencyCriteriaRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse GetConvergencyCriteria(Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse> GetConvergencyCriteriaAsync(Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message connectWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse connectWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse> connectWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message connectRevInfinityRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse connectRevInfinity(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse> connectRevInfinityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message doProcessSyncroRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse doProcessSyncro(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse> doProcessSyncroAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message putXmlWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse putXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse> putXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message initXmlWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse initXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse> initXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message setsGuidImportRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse setsGuidImport(Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse> setsGuidImportAsync(Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getsGuidImportRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse getsGuidImport(Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse> getsGuidImportAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message closeXmlWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse closeXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse> closeXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXmlWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse getXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse> getXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message doProcessWithRandomRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse doProcessWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse> doProcessWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkDoProcessRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse checkDoProcess(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse> checkDoProcessAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getProcessInfoRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse getProcessInfo(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse> getProcessInfoAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getProcessModeRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse getProcessMode(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse> getProcessModeAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getActionWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse getActionWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse> getActionWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message getXsdWithInstanceRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse getXsdWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse> getXsdWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message uploadMailAttachmentsRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse uploadMailAttachments(Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse> uploadMailAttachmentsAsync(Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message rollbackEntityRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse rollbackEntity(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse> rollbackEntityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message rollbackActionRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse rollbackAction(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse> rollbackActionAsync(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkRevInfinityAssRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse checkRevInfinityAss(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse> checkRevInfinityAssAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message revInfinityAssRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse revInfinityAss(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse> revInfinityAssAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message revInfSetGlobalRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse revInfSetGlobal(Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse> revInfSetGlobalAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message magoInfSetGlobalRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse magoInfSetGlobal(Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse> magoInfSetGlobalAsync(Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message revInfinityServerEstRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse revInfinityServerEst(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse> revInfinityServerEstAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkConnectionDbAhrRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse checkConnectionDbAhr(Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse> checkConnectionDbAhrAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message pingRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse ping(Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse> pingAsync(Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message executeSyncroRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse executeSyncro(Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse> executeSyncroAsync(Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkAppRegRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse checkAppReg(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse> checkAppRegAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message checkUserPwdRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse checkUserPwd(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse> checkUserPwdAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message initXmlRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse initXml(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse> initXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message closeXmlRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse closeXml(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse> closeXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message putXmlRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse putXml(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse> putXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://services.syncro.infinity.zucchetti.it) of message setVrtRequest does not match the default value (http://localhost:8080/iMago/services/InfinitySyncro)
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse setVrt(Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse> setVrtAsync(Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connect", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class connectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sCompanyId;
        
        public connectRequest() {
        }
        
        public connectRequest(string sUser, string sPwd, string sCompanyId) {
            this.sUser = sUser;
            this.sPwd = sPwd;
            this.sCompanyId = sCompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class connectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string connectReturn;
        
        public connectResponse() {
        }
        
        public connectResponse(string connectReturn) {
            this.connectReturn = connectReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectWithInstanceRevInfinity", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class connectWithInstanceRevInfinityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAppreg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sCompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sInstanceId;
        
        public connectWithInstanceRevInfinityRequest() {
        }
        
        public connectWithInstanceRevInfinityRequest(string sUser, string sPwd, string sAppreg, string sCompanyId, string sInstanceId) {
            this.sUser = sUser;
            this.sPwd = sPwd;
            this.sAppreg = sAppreg;
            this.sCompanyId = sCompanyId;
            this.sInstanceId = sInstanceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectWithInstanceRevInfinityResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class connectWithInstanceRevInfinityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string connectWithInstanceRevInfinityReturn;
        
        public connectWithInstanceRevInfinityResponse() {
        }
        
        public connectWithInstanceRevInfinityResponse(string connectWithInstanceRevInfinityReturn) {
            this.connectWithInstanceRevInfinityReturn = connectWithInstanceRevInfinityReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityUserAlreadyMapped", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkRevInfinityUserAlreadyMappedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sMode;
        
        public checkRevInfinityUserAlreadyMappedRequest() {
        }
        
        public checkRevInfinityUserAlreadyMappedRequest(string sUser, string sMode) {
            this.sUser = sUser;
            this.sMode = sMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityUserAlreadyMappedResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkRevInfinityUserAlreadyMappedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkRevInfinityUserAlreadyMappedReturn;
        
        public checkRevInfinityUserAlreadyMappedResponse() {
        }
        
        public checkRevInfinityUserAlreadyMappedResponse(string checkRevInfinityUserAlreadyMappedReturn) {
            this.checkRevInfinityUserAlreadyMappedReturn = checkRevInfinityUserAlreadyMappedReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAction", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        public getActionRequest() {
        }
        
        public getActionRequest(string sAppReg) {
            this.sAppReg = sAppReg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getActionResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getActionReturn;
        
        public getActionResponse() {
        }
        
        public getActionResponse(string getActionReturn) {
            this.getActionReturn = getActionReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="disconnect", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class disconnectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        public disconnectRequest() {
        }
        
        public disconnectRequest(string sContextId) {
            this.sContextId = sContextId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="disconnectResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class disconnectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string disconnectReturn;
        
        public disconnectResponse() {
        }
        
        public disconnectResponse(string disconnectReturn) {
            this.disconnectReturn = disconnectReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXml", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public int lFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int lTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string sFlags;
        
        public getXmlRequest() {
        }
        
        public getXmlRequest(string sContextId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
            this.lFrom = lFrom;
            this.lTo = lTo;
            this.sFlags = sFlags;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXmlReturn;
        
        public getXmlResponse() {
        }
        
        public getXmlResponse(byte[] getXmlReturn) {
            this.getXmlReturn = getXmlReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlLength", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXmlLengthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        public getXmlLengthRequest() {
        }
        
        public getXmlLengthRequest(string sContextId, string sProcessId, string sAction) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlLengthResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXmlLengthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getXmlLengthReturn;
        
        public getXmlLengthResponse() {
        }
        
        public getXmlLengthResponse(string getXmlLengthReturn) {
            this.getXmlLengthReturn = getXmlLengthReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAppReg", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getAllAppRegRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sDummy;
        
        public getAllAppRegRequest() {
        }
        
        public getAllAppRegRequest(string sDummy) {
            this.sDummy = sDummy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAppRegResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getAllAppRegResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getAllAppRegReturn;
        
        public getAllAppRegResponse() {
        }
        
        public getAllAppRegResponse(string getAllAppRegReturn) {
            this.getAllAppRegReturn = getAllAppRegReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsd", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXsdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAction;
        
        public getXsdRequest() {
        }
        
        public getXsdRequest(string sAppReg, string sAction) {
            this.sAppReg = sAppReg;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXsdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXsdReturn;
        
        public getXsdResponse() {
        }
        
        public getXsdResponse(byte[] getXsdReturn) {
            this.getXsdReturn = getXsdReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdByName", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXsdByNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sName;
        
        public getXsdByNameRequest() {
        }
        
        public getXsdByNameRequest(string sAppReg, string sName) {
            this.sAppReg = sAppReg;
            this.sName = sName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdByNameResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXsdByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXsdByNameReturn;
        
        public getXsdByNameResponse() {
        }
        
        public getXsdByNameResponse(byte[] getXsdByNameReturn) {
            this.getXsdByNameReturn = getXsdByNameReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMail", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class sendMailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int iTypeSearch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sMailSender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sSubject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public string sMailTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string sMailCC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=7)]
        public string sMailCCN;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=8)]
        public int iIsHtml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=9)]
        public int iSaveMail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=10)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bAttachments;
        
        public sendMailRequest() {
        }
        
        public sendMailRequest(string sContextId, int iTypeSearch, string sMailSender, string sText, string sSubject, string sMailTo, string sMailCC, string sMailCCN, int iIsHtml, int iSaveMail, byte[] bAttachments) {
            this.sContextId = sContextId;
            this.iTypeSearch = iTypeSearch;
            this.sMailSender = sMailSender;
            this.sText = sText;
            this.sSubject = sSubject;
            this.sMailTo = sMailTo;
            this.sMailCC = sMailCC;
            this.sMailCCN = sMailCCN;
            this.iIsHtml = iIsHtml;
            this.iSaveMail = iSaveMail;
            this.bAttachments = bAttachments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="sendMailResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class sendMailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sendMailReturn;
        
        public sendMailResponse() {
        }
        
        public sendMailResponse(string sendMailReturn) {
            this.sendMailReturn = sendMailReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="commitEntity", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class commitEntityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sXmlCommit;
        
        public commitEntityRequest() {
        }
        
        public commitEntityRequest(string sContextId, string sProcessId, string sAction, string sOwner, string sXmlCommit) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
            this.sOwner = sOwner;
            this.sXmlCommit = sXmlCommit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="commitEntityResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class commitEntityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string commitEntityReturn;
        
        public commitEntityResponse() {
        }
        
        public commitEntityResponse(string commitEntityReturn) {
            this.commitEntityReturn = commitEntityReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllCompany", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getAllCompanyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sDummy;
        
        public getAllCompanyRequest() {
        }
        
        public getAllCompanyRequest(string sDummy) {
            this.sDummy = sDummy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllCompanyResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getAllCompanyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getAllCompanyReturn;
        
        public getAllCompanyResponse() {
        }
        
        public getAllCompanyResponse(string getAllCompanyReturn) {
            this.getAllCompanyReturn = getAllCompanyReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllUsers", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sDummy;
        
        public getAllUsersRequest() {
        }
        
        public getAllUsersRequest(string sDummy) {
            this.sDummy = sDummy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllUsersResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getAllUsersReturn;
        
        public getAllUsersResponse() {
        }
        
        public getAllUsersResponse(string getAllUsersReturn) {
            this.getAllUsersReturn = getAllUsersReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="magoWizard", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class magoWizardRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int iMagoAzi;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAziInf;
        
        public magoWizardRequest() {
        }
        
        public magoWizardRequest(string sAppReg, int iMagoAzi, string sAziInf) {
            this.sAppReg = sAppReg;
            this.iMagoAzi = iMagoAzi;
            this.sAziInf = sAziInf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="magoWizardResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class magoWizardResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string magoWizardReturn;
        
        public magoWizardResponse() {
        }
        
        public magoWizardResponse(string magoWizardReturn) {
            this.magoWizardReturn = magoWizardReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getUrlAhr", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getUrlAhrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sKeyAccess;
        
        public getUrlAhrRequest() {
        }
        
        public getUrlAhrRequest(string sKeyAccess) {
            this.sKeyAccess = sKeyAccess;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getUrlAhrResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getUrlAhrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getUrlAhrReturn;
        
        public getUrlAhrResponse() {
        }
        
        public getUrlAhrResponse(string getUrlAhrReturn) {
            this.getUrlAhrReturn = getUrlAhrReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcess", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class doProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sActionList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAtomicLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sOwner;
        
        public doProcessRequest() {
        }
        
        public doProcessRequest(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            this.sContextId = sContextId;
            this.sActionList = sActionList;
            this.sAtomicLevel = sAtomicLevel;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class doProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string doProcessReturn;
        
        public doProcessResponse() {
        }
        
        public doProcessResponse(string doProcessReturn) {
            this.doProcessReturn = doProcessReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectRevInfinityWithToken", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class connectRevInfinityWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sToken;
        
        public connectRevInfinityWithTokenRequest() {
        }
        
        public connectRevInfinityWithTokenRequest(string sToken) {
            this.sToken = sToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectRevInfinityWithTokenResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class connectRevInfinityWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string connectRevInfinityWithTokenReturn;
        
        public connectRevInfinityWithTokenResponse() {
        }
        
        public connectRevInfinityWithTokenResponse(string connectRevInfinityWithTokenReturn) {
            this.connectRevInfinityWithTokenReturn = connectRevInfinityWithTokenReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlLengthWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXmlLengthWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sAction;
        
        public getXmlLengthWithRandomRequest() {
        }
        
        public getXmlLengthWithRandomRequest(string sContextId, string sRandomId, string sProcessId, string sAction) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlLengthWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXmlLengthWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getXmlLengthWithRandomReturn;
        
        public getXmlLengthWithRandomResponse() {
        }
        
        public getXmlLengthWithRandomResponse(string getXmlLengthWithRandomReturn) {
            this.getXmlLengthWithRandomReturn = getXmlLengthWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessSyncroWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class doProcessSyncroWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sActionList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sAtomicLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sOwner;
        
        public doProcessSyncroWithRandomRequest() {
        }
        
        public doProcessSyncroWithRandomRequest(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sActionList = sActionList;
            this.sAtomicLevel = sAtomicLevel;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessSyncroWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class doProcessSyncroWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string doProcessSyncroWithRandomReturn;
        
        public doProcessSyncroWithRandomResponse() {
        }
        
        public doProcessSyncroWithRandomResponse(string doProcessSyncroWithRandomReturn) {
            this.doProcessSyncroWithRandomReturn = doProcessSyncroWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkDoProcessWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkDoProcessWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sProcessId;
        
        public checkDoProcessWithRandomRequest() {
        }
        
        public checkDoProcessWithRandomRequest(string sContextId, string sRandomId, string sProcessId) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sProcessId = sProcessId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkDoProcessWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkDoProcessWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkDoProcessWithRandomReturn;
        
        public checkDoProcessWithRandomResponse() {
        }
        
        public checkDoProcessWithRandomResponse(string checkDoProcessWithRandomReturn) {
            this.checkDoProcessWithRandomReturn = checkDoProcessWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserPwdWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkUserPwdWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sInstance;
        
        public checkUserPwdWithInstanceRequest() {
        }
        
        public checkUserPwdWithInstanceRequest(string sUser, string sPwd, string sInstance) {
            this.sUser = sUser;
            this.sPwd = sPwd;
            this.sInstance = sInstance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserPwdWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkUserPwdWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkUserPwdWithInstanceReturn;
        
        public checkUserPwdWithInstanceResponse() {
        }
        
        public checkUserPwdWithInstanceResponse(string checkUserPwdWithInstanceReturn) {
            this.checkUserPwdWithInstanceReturn = checkUserPwdWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkAppRegWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkAppRegWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sInstance;
        
        public checkAppRegWithInstanceRequest() {
        }
        
        public checkAppRegWithInstanceRequest(string sAppReg, string sInstance) {
            this.sAppReg = sAppReg;
            this.sInstance = sInstance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkAppRegWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkAppRegWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkAppRegWithInstanceReturn;
        
        public checkAppRegWithInstanceResponse() {
        }
        
        public checkAppRegWithInstanceResponse(string checkAppRegWithInstanceReturn) {
            this.checkAppRegWithInstanceReturn = checkAppRegWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdByNameWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXsdByNameWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sInstance;
        
        public getXsdByNameWithInstanceRequest() {
        }
        
        public getXsdByNameWithInstanceRequest(string sAppReg, string sName, string sInstance) {
            this.sAppReg = sAppReg;
            this.sName = sName;
            this.sInstance = sInstance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdByNameWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXsdByNameWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXsdByNameWithInstanceReturn;
        
        public getXsdByNameWithInstanceResponse() {
        }
        
        public getXsdByNameWithInstanceResponse(byte[] getXsdByNameWithInstanceReturn) {
            this.getXsdByNameWithInstanceReturn = getXsdByNameWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revCompanyAlreadyMapped", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class revCompanyAlreadyMappedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sDummy;
        
        public revCompanyAlreadyMappedRequest() {
        }
        
        public revCompanyAlreadyMappedRequest(string sDummy) {
            this.sDummy = sDummy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revCompanyAlreadyMappedResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class revCompanyAlreadyMappedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string revCompanyAlreadyMappedReturn;
        
        public revCompanyAlreadyMappedResponse() {
        }
        
        public revCompanyAlreadyMappedResponse(string revCompanyAlreadyMappedReturn) {
            this.revCompanyAlreadyMappedReturn = revCompanyAlreadyMappedReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityAlreadyMapped", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkRevInfinityAlreadyMappedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAziInf;
        
        public checkRevInfinityAlreadyMappedRequest() {
        }
        
        public checkRevInfinityAlreadyMappedRequest(string sAziInf) {
            this.sAziInf = sAziInf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityAlreadyMappedResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkRevInfinityAlreadyMappedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkRevInfinityAlreadyMappedReturn;
        
        public checkRevInfinityAlreadyMappedResponse() {
        }
        
        public checkRevInfinityAlreadyMappedResponse(string checkRevInfinityAlreadyMappedReturn) {
            this.checkRevInfinityAlreadyMappedReturn = checkRevInfinityAlreadyMappedReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityImportPackage", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class revInfinityImportPackageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bPackage;
        
        public revInfinityImportPackageRequest() {
        }
        
        public revInfinityImportPackageRequest(byte[] bPackage) {
            this.bPackage = bPackage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityImportPackageResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class revInfinityImportPackageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string revInfinityImportPackageReturn;
        
        public revInfinityImportPackageResponse() {
        }
        
        public revInfinityImportPackageResponse(string revInfinityImportPackageReturn) {
            this.revInfinityImportPackageReturn = revInfinityImportPackageReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetConvergencyCriteria", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class SetConvergencyCriteriaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sXmlCriteria;
        
        public SetConvergencyCriteriaRequest() {
        }
        
        public SetConvergencyCriteriaRequest(string sXmlCriteria) {
            this.sXmlCriteria = sXmlCriteria;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetConvergencyCriteriaResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class SetConvergencyCriteriaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string SetConvergencyCriteriaReturn;
        
        public SetConvergencyCriteriaResponse() {
        }
        
        public SetConvergencyCriteriaResponse(string SetConvergencyCriteriaReturn) {
            this.SetConvergencyCriteriaReturn = SetConvergencyCriteriaReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConvergencyCriteria", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class GetConvergencyCriteriaRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sActionName;
        
        public GetConvergencyCriteriaRequest() {
        }
        
        public GetConvergencyCriteriaRequest(string sActionName) {
            this.sActionName = sActionName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConvergencyCriteriaResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class GetConvergencyCriteriaResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string GetConvergencyCriteriaReturn;
        
        public GetConvergencyCriteriaResponse() {
        }
        
        public GetConvergencyCriteriaResponse(string GetConvergencyCriteriaReturn) {
            this.GetConvergencyCriteriaReturn = GetConvergencyCriteriaReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class connectWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sCompanyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sInstanceId;
        
        public connectWithInstanceRequest() {
        }
        
        public connectWithInstanceRequest(string sUser, string sPwd, string sCompanyId, string sInstanceId) {
            this.sUser = sUser;
            this.sPwd = sPwd;
            this.sCompanyId = sCompanyId;
            this.sInstanceId = sInstanceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class connectWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string connectWithInstanceReturn;
        
        public connectWithInstanceResponse() {
        }
        
        public connectWithInstanceResponse(string connectWithInstanceReturn) {
            this.connectWithInstanceReturn = connectWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectRevInfinity", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class connectRevInfinityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAppreg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sCompanyId;
        
        public connectRevInfinityRequest() {
        }
        
        public connectRevInfinityRequest(string sUser, string sPwd, string sAppreg, string sCompanyId) {
            this.sUser = sUser;
            this.sPwd = sPwd;
            this.sAppreg = sAppreg;
            this.sCompanyId = sCompanyId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="connectRevInfinityResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class connectRevInfinityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string connectRevInfinityReturn;
        
        public connectRevInfinityResponse() {
        }
        
        public connectRevInfinityResponse(string connectRevInfinityReturn) {
            this.connectRevInfinityReturn = connectRevInfinityReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessSyncro", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class doProcessSyncroRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sActionList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAtomicLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sOwner;
        
        public doProcessSyncroRequest() {
        }
        
        public doProcessSyncroRequest(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            this.sContextId = sContextId;
            this.sActionList = sActionList;
            this.sAtomicLevel = sAtomicLevel;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessSyncroResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class doProcessSyncroResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string doProcessSyncroReturn;
        
        public doProcessSyncroResponse() {
        }
        
        public doProcessSyncroResponse(string doProcessSyncroReturn) {
            this.doProcessSyncroReturn = doProcessSyncroReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="putXmlWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class putXmlWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bXml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sFlags;
        
        public putXmlWithRandomRequest() {
        }
        
        public putXmlWithRandomRequest(string sContextId, string sRandomId, string sAction, byte[] bXml, string sFlags) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sAction = sAction;
            this.bXml = bXml;
            this.sFlags = sFlags;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="putXmlWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class putXmlWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string putXmlWithRandomReturn;
        
        public putXmlWithRandomResponse() {
        }
        
        public putXmlWithRandomResponse(string putXmlWithRandomReturn) {
            this.putXmlWithRandomReturn = putXmlWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initXmlWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class initXmlWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        public initXmlWithRandomRequest() {
        }
        
        public initXmlWithRandomRequest(string sContextId, string sRandomId, string sAction) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initXmlWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class initXmlWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string initXmlWithRandomReturn;
        
        public initXmlWithRandomResponse() {
        }
        
        public initXmlWithRandomResponse(string initXmlWithRandomReturn) {
            this.initXmlWithRandomReturn = initXmlWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setsGuidImport", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class setsGuidImportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sGuidImport;
        
        public setsGuidImportRequest() {
        }
        
        public setsGuidImportRequest(string sGuidImport) {
            this.sGuidImport = sGuidImport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setsGuidImportResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class setsGuidImportResponse {
        
        public setsGuidImportResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getsGuidImport", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getsGuidImportRequest {
        
        public getsGuidImportRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getsGuidImportResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getsGuidImportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getsGuidImportReturn;
        
        public getsGuidImportResponse() {
        }
        
        public getsGuidImportResponse(string getsGuidImportReturn) {
            this.getsGuidImportReturn = getsGuidImportReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeXmlWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class closeXmlWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        public closeXmlWithRandomRequest() {
        }
        
        public closeXmlWithRandomRequest(string sContextId, string sRandomId, string sAction) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeXmlWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class closeXmlWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string closeXmlWithRandomReturn;
        
        public closeXmlWithRandomResponse() {
        }
        
        public closeXmlWithRandomResponse(string closeXmlWithRandomReturn) {
            this.closeXmlWithRandomReturn = closeXmlWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXmlWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public int lFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public int lTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=6)]
        public string sFlags;
        
        public getXmlWithRandomRequest() {
        }
        
        public getXmlWithRandomRequest(string sContextId, string sRandomId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
            this.lFrom = lFrom;
            this.lTo = lTo;
            this.sFlags = sFlags;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXmlWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXmlWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXmlWithRandomReturn;
        
        public getXmlWithRandomResponse() {
        }
        
        public getXmlWithRandomResponse(byte[] getXmlWithRandomReturn) {
            this.getXmlWithRandomReturn = getXmlWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessWithRandom", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class doProcessWithRandomRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sRandomId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sActionList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sAtomicLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sOwner;
        
        public doProcessWithRandomRequest() {
        }
        
        public doProcessWithRandomRequest(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            this.sContextId = sContextId;
            this.sRandomId = sRandomId;
            this.sActionList = sActionList;
            this.sAtomicLevel = sAtomicLevel;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="doProcessWithRandomResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class doProcessWithRandomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string doProcessWithRandomReturn;
        
        public doProcessWithRandomResponse() {
        }
        
        public doProcessWithRandomResponse(string doProcessWithRandomReturn) {
            this.doProcessWithRandomReturn = doProcessWithRandomReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkDoProcess", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkDoProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        public checkDoProcessRequest() {
        }
        
        public checkDoProcessRequest(string sContextId, string sProcessId) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkDoProcessResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkDoProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkDoProcessReturn;
        
        public checkDoProcessResponse() {
        }
        
        public checkDoProcessResponse(string checkDoProcessReturn) {
            this.checkDoProcessReturn = checkDoProcessReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProcessInfo", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getProcessInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        public getProcessInfoRequest() {
        }
        
        public getProcessInfoRequest(string sContextId, string sProcessId) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProcessInfoResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getProcessInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getProcessInfoReturn;
        
        public getProcessInfoResponse() {
        }
        
        public getProcessInfoResponse(string getProcessInfoReturn) {
            this.getProcessInfoReturn = getProcessInfoReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProcessMode", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getProcessModeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        public getProcessModeRequest() {
        }
        
        public getProcessModeRequest(string sContextId) {
            this.sContextId = sContextId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProcessModeResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getProcessModeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getProcessModeReturn;
        
        public getProcessModeResponse() {
        }
        
        public getProcessModeResponse(string getProcessModeReturn) {
            this.getProcessModeReturn = getProcessModeReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getActionWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getActionWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sInstance;
        
        public getActionWithInstanceRequest() {
        }
        
        public getActionWithInstanceRequest(string sAppReg, string sInstance) {
            this.sAppReg = sAppReg;
            this.sInstance = sInstance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getActionWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getActionWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string getActionWithInstanceReturn;
        
        public getActionWithInstanceResponse() {
        }
        
        public getActionWithInstanceResponse(string getActionWithInstanceReturn) {
            this.getActionWithInstanceReturn = getActionWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdWithInstance", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class getXsdWithInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sInstance;
        
        public getXsdWithInstanceRequest() {
        }
        
        public getXsdWithInstanceRequest(string sAppReg, string sAction, string sInstance) {
            this.sAppReg = sAppReg;
            this.sAction = sAction;
            this.sInstance = sInstance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getXsdWithInstanceResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class getXsdWithInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] getXsdWithInstanceReturn;
        
        public getXsdWithInstanceResponse() {
        }
        
        public getXsdWithInstanceResponse(byte[] getXsdWithInstanceReturn) {
            this.getXsdWithInstanceReturn = getXsdWithInstanceReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadMailAttachments", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class uploadMailAttachmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bAttachments;
        
        public uploadMailAttachmentsRequest() {
        }
        
        public uploadMailAttachmentsRequest(string sContextId, byte[] bAttachments) {
            this.sContextId = sContextId;
            this.bAttachments = bAttachments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="uploadMailAttachmentsResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class uploadMailAttachmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string uploadMailAttachmentsReturn;
        
        public uploadMailAttachmentsResponse() {
        }
        
        public uploadMailAttachmentsResponse(string uploadMailAttachmentsReturn) {
            this.uploadMailAttachmentsReturn = uploadMailAttachmentsReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="rollbackEntity", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class rollbackEntityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sEntityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sOwner;
        
        public rollbackEntityRequest() {
        }
        
        public rollbackEntityRequest(string sContextId, string sProcessId, string sAction, string sEntityId, string sOwner) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
            this.sEntityId = sEntityId;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="rollbackEntityResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class rollbackEntityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string rollbackEntityReturn;
        
        public rollbackEntityResponse() {
        }
        
        public rollbackEntityResponse(string rollbackEntityReturn) {
            this.rollbackEntityReturn = rollbackEntityReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="rollbackAction", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class rollbackActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sOwner;
        
        public rollbackActionRequest() {
        }
        
        public rollbackActionRequest(string sContextId, string sProcessId, string sAction, string sOwner) {
            this.sContextId = sContextId;
            this.sProcessId = sProcessId;
            this.sAction = sAction;
            this.sOwner = sOwner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="rollbackActionResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class rollbackActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string rollbackActionReturn;
        
        public rollbackActionResponse() {
        }
        
        public rollbackActionResponse(string rollbackActionReturn) {
            this.rollbackActionReturn = rollbackActionReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityAss", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkRevInfinityAssRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAziRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAziInf;
        
        public checkRevInfinityAssRequest() {
        }
        
        public checkRevInfinityAssRequest(string sAziRev, string sAziInf) {
            this.sAziRev = sAziRev;
            this.sAziInf = sAziInf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkRevInfinityAssResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkRevInfinityAssResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkRevInfinityAssReturn;
        
        public checkRevInfinityAssResponse() {
        }
        
        public checkRevInfinityAssResponse(string checkRevInfinityAssReturn) {
            this.checkRevInfinityAssReturn = checkRevInfinityAssReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityAss", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class revInfinityAssRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAziRev;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAziInf;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sCodeAhr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sConnDb;
        
        public revInfinityAssRequest() {
        }
        
        public revInfinityAssRequest(string sAziRev, string sAziInf, string sCodeAhr, string sConnDb) {
            this.sAziRev = sAziRev;
            this.sAziInf = sAziInf;
            this.sCodeAhr = sCodeAhr;
            this.sConnDb = sConnDb;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityAssResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class revInfinityAssResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string revInfinityAssReturn;
        
        public revInfinityAssResponse() {
        }
        
        public revInfinityAssResponse(string revInfinityAssReturn) {
            this.revInfinityAssReturn = revInfinityAssReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfSetGlobal", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class revInfSetGlobalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        public revInfSetGlobalRequest() {
        }
        
        public revInfSetGlobalRequest(string sContextId) {
            this.sContextId = sContextId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfSetGlobalResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class revInfSetGlobalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string revInfSetGlobalReturn;
        
        public revInfSetGlobalResponse() {
        }
        
        public revInfSetGlobalResponse(string revInfSetGlobalReturn) {
            this.revInfSetGlobalReturn = revInfSetGlobalReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="magoInfSetGlobal", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class magoInfSetGlobalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        public magoInfSetGlobalRequest() {
        }
        
        public magoInfSetGlobalRequest(string sContextId) {
            this.sContextId = sContextId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="magoInfSetGlobalResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class magoInfSetGlobalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string magoInfSetGlobalReturn;
        
        public magoInfSetGlobalResponse() {
        }
        
        public magoInfSetGlobalResponse(string magoInfSetGlobalReturn) {
            this.magoInfSetGlobalReturn = magoInfSetGlobalReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityServerEst", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class revInfinityServerEstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sCodeAhr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sConnDb;
        
        public revInfinityServerEstRequest() {
        }
        
        public revInfinityServerEstRequest(string sCodeAhr, string sConnDb) {
            this.sCodeAhr = sCodeAhr;
            this.sConnDb = sConnDb;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="revInfinityServerEstResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class revInfinityServerEstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string revInfinityServerEstReturn;
        
        public revInfinityServerEstResponse() {
        }
        
        public revInfinityServerEstResponse(string revInfinityServerEstReturn) {
            this.revInfinityServerEstReturn = revInfinityServerEstReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkConnectionDbAhr", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkConnectionDbAhrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUrlConnection;
        
        public checkConnectionDbAhrRequest() {
        }
        
        public checkConnectionDbAhrRequest(string sUrlConnection) {
            this.sUrlConnection = sUrlConnection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkConnectionDbAhrResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkConnectionDbAhrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkConnectionDbAhrReturn;
        
        public checkConnectionDbAhrResponse() {
        }
        
        public checkConnectionDbAhrResponse(string checkConnectionDbAhrReturn) {
            this.checkConnectionDbAhrReturn = checkConnectionDbAhrReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ping", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class pingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        public pingRequest() {
        }
        
        public pingRequest(string sContextId) {
            this.sContextId = sContextId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pingResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class pingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string pingReturn;
        
        public pingResponse() {
        }
        
        public pingResponse(string pingReturn) {
            this.pingReturn = pingReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeSyncro", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class executeSyncroRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sOwner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bXml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string sAtomicLevel;
        
        public executeSyncroRequest() {
        }
        
        public executeSyncroRequest(string sContextId, string sOwner, string sAction, byte[] bXml, string sAtomicLevel) {
            this.sContextId = sContextId;
            this.sOwner = sOwner;
            this.sAction = sAction;
            this.bXml = bXml;
            this.sAtomicLevel = sAtomicLevel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeSyncroResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class executeSyncroResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string executeSyncroReturn;
        
        public executeSyncroResponse() {
        }
        
        public executeSyncroResponse(string executeSyncroReturn) {
            this.executeSyncroReturn = executeSyncroReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkAppReg", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkAppRegRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sAppReg;
        
        public checkAppRegRequest() {
        }
        
        public checkAppRegRequest(string sAppReg) {
            this.sAppReg = sAppReg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkAppRegResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkAppRegResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkAppRegReturn;
        
        public checkAppRegResponse() {
        }
        
        public checkAppRegResponse(string checkAppRegReturn) {
            this.checkAppRegReturn = checkAppRegReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserPwd", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class checkUserPwdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sPwd;
        
        public checkUserPwdRequest() {
        }
        
        public checkUserPwdRequest(string sUser, string sPwd) {
            this.sUser = sUser;
            this.sPwd = sPwd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserPwdResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class checkUserPwdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string checkUserPwdReturn;
        
        public checkUserPwdResponse() {
        }
        
        public checkUserPwdResponse(string checkUserPwdReturn) {
            this.checkUserPwdReturn = checkUserPwdReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initXml", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class initXmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAction;
        
        public initXmlRequest() {
        }
        
        public initXmlRequest(string sContextId, string sAction) {
            this.sContextId = sContextId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="initXmlResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class initXmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string initXmlReturn;
        
        public initXmlResponse() {
        }
        
        public initXmlResponse(string initXmlReturn) {
            this.initXmlReturn = initXmlReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeXml", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class closeXmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAction;
        
        public closeXmlRequest() {
        }
        
        public closeXmlRequest(string sContextId, string sAction) {
            this.sContextId = sContextId;
            this.sAction = sAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="closeXmlResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class closeXmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string closeXmlReturn;
        
        public closeXmlResponse() {
        }
        
        public closeXmlResponse(string closeXmlReturn) {
            this.closeXmlReturn = closeXmlReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="putXml", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class putXmlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        [System.Xml.Serialization.SoapElementAttribute(DataType="base64Binary")]
        public byte[] bXml;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        public string sFlags;
        
        public putXmlRequest() {
        }
        
        public putXmlRequest(string sContextId, string sAction, byte[] bXml, string sFlags) {
            this.sContextId = sContextId;
            this.sAction = sAction;
            this.bXml = bXml;
            this.sFlags = sFlags;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="putXmlResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class putXmlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string putXmlReturn;
        
        public putXmlResponse() {
        }
        
        public putXmlResponse(string putXmlReturn) {
            this.putXmlReturn = putXmlReturn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setVrt", WrapperNamespace="http://services.syncro.infinity.zucchetti.it", IsWrapped=true)]
    public partial class setVrtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string sContextId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string sBo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public string sFields;
        
        public setVrtRequest() {
        }
        
        public setVrtRequest(string sContextId, string sBo, string sFields) {
            this.sContextId = sContextId;
            this.sBo = sBo;
            this.sFields = sFields;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setVrtResponse", WrapperNamespace="http://localhost:8080/iMago/services/InfinitySyncro", IsWrapped=true)]
    public partial class setVrtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string setVrtReturn;
        
        public setVrtResponse() {
        }
        
        public setVrtResponse(string setVrtReturn) {
            this.setVrtReturn = setVrtReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InfinitySyncroChannel : Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InfinitySyncroClient : System.ServiceModel.ClientBase<Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro>, Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro {
        
        public InfinitySyncroClient() {
        }
        
        public InfinitySyncroClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InfinitySyncroClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfinitySyncroClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfinitySyncroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connect(Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest request) {
            return base.Channel.connect(request);
        }
        
        public string connect(string sUser, string sPwd, string sCompanyId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sCompanyId = sCompanyId;
            Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connect(inValue);
            return retVal.connectReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest request) {
            return base.Channel.connectAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectResponse> connectAsync(string sUser, string sPwd, string sCompanyId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sCompanyId = sCompanyId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectWithInstanceRevInfinity(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest request) {
            return base.Channel.connectWithInstanceRevInfinity(request);
        }
        
        public string connectWithInstanceRevInfinity(string sUser, string sPwd, string sAppreg, string sCompanyId, string sInstanceId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sAppreg = sAppreg;
            inValue.sCompanyId = sCompanyId;
            inValue.sInstanceId = sInstanceId;
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectWithInstanceRevInfinity(inValue);
            return retVal.connectWithInstanceRevInfinityReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectWithInstanceRevInfinityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest request) {
            return base.Channel.connectWithInstanceRevInfinityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityResponse> connectWithInstanceRevInfinityAsync(string sUser, string sPwd, string sAppreg, string sCompanyId, string sInstanceId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRevInfinityRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sAppreg = sAppreg;
            inValue.sCompanyId = sCompanyId;
            inValue.sInstanceId = sInstanceId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectWithInstanceRevInfinityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityUserAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest request) {
            return base.Channel.checkRevInfinityUserAlreadyMapped(request);
        }
        
        public string checkRevInfinityUserAlreadyMapped(string sUser, string sMode) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest();
            inValue.sUser = sUser;
            inValue.sMode = sMode;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityUserAlreadyMapped(inValue);
            return retVal.checkRevInfinityUserAlreadyMappedReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityUserAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest request) {
            return base.Channel.checkRevInfinityUserAlreadyMappedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedResponse> checkRevInfinityUserAlreadyMappedAsync(string sUser, string sMode) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityUserAlreadyMappedRequest();
            inValue.sUser = sUser;
            inValue.sMode = sMode;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityUserAlreadyMappedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAction(Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest request) {
            return base.Channel.getAction(request);
        }
        
        public string getAction(string sAppReg) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest();
            inValue.sAppReg = sAppReg;
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAction(inValue);
            return retVal.getActionReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getActionAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest request) {
            return base.Channel.getActionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionResponse> getActionAsync(string sAppReg) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getActionRequest();
            inValue.sAppReg = sAppReg;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getActionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.disconnect(Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest request) {
            return base.Channel.disconnect(request);
        }
        
        public string disconnect(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest();
            inValue.sContextId = sContextId;
            Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).disconnect(inValue);
            return retVal.disconnectReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.disconnectAsync(Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest request) {
            return base.Channel.disconnectAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.disconnectResponse> disconnectAsync(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.disconnectRequest();
            inValue.sContextId = sContextId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).disconnectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXml(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest request) {
            return base.Channel.getXml(request);
        }
        
        public byte[] getXml(string sContextId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.lFrom = lFrom;
            inValue.lTo = lTo;
            inValue.sFlags = sFlags;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXml(inValue);
            return retVal.getXmlReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest request) {
            return base.Channel.getXmlAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlResponse> getXmlAsync(string sContextId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.lFrom = lFrom;
            inValue.lTo = lTo;
            inValue.sFlags = sFlags;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlLength(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest request) {
            return base.Channel.getXmlLength(request);
        }
        
        public string getXmlLength(string sContextId, string sProcessId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlLength(inValue);
            return retVal.getXmlLengthReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlLengthAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest request) {
            return base.Channel.getXmlLengthAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthResponse> getXmlLengthAsync(string sContextId, string sProcessId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlLengthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllAppReg(Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest request) {
            return base.Channel.getAllAppReg(request);
        }
        
        public string getAllAppReg(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest();
            inValue.sDummy = sDummy;
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllAppReg(inValue);
            return retVal.getAllAppRegReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllAppRegAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest request) {
            return base.Channel.getAllAppRegAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegResponse> getAllAppRegAsync(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllAppRegRequest();
            inValue.sDummy = sDummy;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllAppRegAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsd(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest request) {
            return base.Channel.getXsd(request);
        }
        
        public byte[] getXsd(string sAppReg, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest();
            inValue.sAppReg = sAppReg;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsd(inValue);
            return retVal.getXsdReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest request) {
            return base.Channel.getXsdAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdResponse> getXsdAsync(string sAppReg, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdRequest();
            inValue.sAppReg = sAppReg;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdByName(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest request) {
            return base.Channel.getXsdByName(request);
        }
        
        public byte[] getXsdByName(string sAppReg, string sName) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest();
            inValue.sAppReg = sAppReg;
            inValue.sName = sName;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdByName(inValue);
            return retVal.getXsdByNameReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdByNameAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest request) {
            return base.Channel.getXsdByNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameResponse> getXsdByNameAsync(string sAppReg, string sName) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameRequest();
            inValue.sAppReg = sAppReg;
            inValue.sName = sName;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdByNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.sendMail(Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest request) {
            return base.Channel.sendMail(request);
        }
        
        public string sendMail(string sContextId, int iTypeSearch, string sMailSender, string sText, string sSubject, string sMailTo, string sMailCC, string sMailCCN, int iIsHtml, int iSaveMail, byte[] bAttachments) {
            Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest();
            inValue.sContextId = sContextId;
            inValue.iTypeSearch = iTypeSearch;
            inValue.sMailSender = sMailSender;
            inValue.sText = sText;
            inValue.sSubject = sSubject;
            inValue.sMailTo = sMailTo;
            inValue.sMailCC = sMailCC;
            inValue.sMailCCN = sMailCCN;
            inValue.iIsHtml = iIsHtml;
            inValue.iSaveMail = iSaveMail;
            inValue.bAttachments = bAttachments;
            Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).sendMail(inValue);
            return retVal.sendMailReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.sendMailAsync(Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest request) {
            return base.Channel.sendMailAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.sendMailResponse> sendMailAsync(string sContextId, int iTypeSearch, string sMailSender, string sText, string sSubject, string sMailTo, string sMailCC, string sMailCCN, int iIsHtml, int iSaveMail, byte[] bAttachments) {
            Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.sendMailRequest();
            inValue.sContextId = sContextId;
            inValue.iTypeSearch = iTypeSearch;
            inValue.sMailSender = sMailSender;
            inValue.sText = sText;
            inValue.sSubject = sSubject;
            inValue.sMailTo = sMailTo;
            inValue.sMailCC = sMailCC;
            inValue.sMailCCN = sMailCCN;
            inValue.iIsHtml = iIsHtml;
            inValue.iSaveMail = iSaveMail;
            inValue.bAttachments = bAttachments;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).sendMailAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.commitEntity(Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest request) {
            return base.Channel.commitEntity(request);
        }
        
        public string commitEntity(string sContextId, string sProcessId, string sAction, string sOwner, string sXmlCommit) {
            Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sOwner = sOwner;
            inValue.sXmlCommit = sXmlCommit;
            Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).commitEntity(inValue);
            return retVal.commitEntityReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.commitEntityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest request) {
            return base.Channel.commitEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityResponse> commitEntityAsync(string sContextId, string sProcessId, string sAction, string sOwner, string sXmlCommit) {
            Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.commitEntityRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sOwner = sOwner;
            inValue.sXmlCommit = sXmlCommit;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).commitEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllCompany(Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest request) {
            return base.Channel.getAllCompany(request);
        }
        
        public string getAllCompany(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest();
            inValue.sDummy = sDummy;
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllCompany(inValue);
            return retVal.getAllCompanyReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllCompanyAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest request) {
            return base.Channel.getAllCompanyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyResponse> getAllCompanyAsync(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllCompanyRequest();
            inValue.sDummy = sDummy;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllCompanyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllUsers(Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest request) {
            return base.Channel.getAllUsers(request);
        }
        
        public string getAllUsers(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest();
            inValue.sDummy = sDummy;
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllUsers(inValue);
            return retVal.getAllUsersReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getAllUsersAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest request) {
            return base.Channel.getAllUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersResponse> getAllUsersAsync(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getAllUsersRequest();
            inValue.sDummy = sDummy;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getAllUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.magoWizard(Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest request) {
            return base.Channel.magoWizard(request);
        }
        
        public string magoWizard(string sAppReg, int iMagoAzi, string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest();
            inValue.sAppReg = sAppReg;
            inValue.iMagoAzi = iMagoAzi;
            inValue.sAziInf = sAziInf;
            Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).magoWizard(inValue);
            return retVal.magoWizardReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.magoWizardAsync(Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest request) {
            return base.Channel.magoWizardAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardResponse> magoWizardAsync(string sAppReg, int iMagoAzi, string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.magoWizardRequest();
            inValue.sAppReg = sAppReg;
            inValue.iMagoAzi = iMagoAzi;
            inValue.sAziInf = sAziInf;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).magoWizardAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getUrlAhr(Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest request) {
            return base.Channel.getUrlAhr(request);
        }
        
        public string getUrlAhr(string sKeyAccess) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest();
            inValue.sKeyAccess = sKeyAccess;
            Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getUrlAhr(inValue);
            return retVal.getUrlAhrReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getUrlAhrAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest request) {
            return base.Channel.getUrlAhrAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrResponse> getUrlAhrAsync(string sKeyAccess) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getUrlAhrRequest();
            inValue.sKeyAccess = sKeyAccess;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getUrlAhrAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcess(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest request) {
            return base.Channel.doProcess(request);
        }
        
        public string doProcess(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest();
            inValue.sContextId = sContextId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcess(inValue);
            return retVal.doProcessReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest request) {
            return base.Channel.doProcessAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessResponse> doProcessAsync(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessRequest();
            inValue.sContextId = sContextId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectRevInfinityWithToken(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest request) {
            return base.Channel.connectRevInfinityWithToken(request);
        }
        
        public string connectRevInfinityWithToken(string sToken) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest();
            inValue.sToken = sToken;
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectRevInfinityWithToken(inValue);
            return retVal.connectRevInfinityWithTokenReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectRevInfinityWithTokenAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest request) {
            return base.Channel.connectRevInfinityWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenResponse> connectRevInfinityWithTokenAsync(string sToken) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityWithTokenRequest();
            inValue.sToken = sToken;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectRevInfinityWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlLengthWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest request) {
            return base.Channel.getXmlLengthWithRandom(request);
        }
        
        public string getXmlLengthWithRandom(string sContextId, string sRandomId, string sProcessId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlLengthWithRandom(inValue);
            return retVal.getXmlLengthWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlLengthWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest request) {
            return base.Channel.getXmlLengthWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomResponse> getXmlLengthWithRandomAsync(string sContextId, string sRandomId, string sProcessId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlLengthWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlLengthWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessSyncroWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest request) {
            return base.Channel.doProcessSyncroWithRandom(request);
        }
        
        public string doProcessSyncroWithRandom(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessSyncroWithRandom(inValue);
            return retVal.doProcessSyncroWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessSyncroWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest request) {
            return base.Channel.doProcessSyncroWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomResponse> doProcessSyncroWithRandomAsync(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessSyncroWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkDoProcessWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest request) {
            return base.Channel.checkDoProcessWithRandom(request);
        }
        
        public string checkDoProcessWithRandom(string sContextId, string sRandomId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkDoProcessWithRandom(inValue);
            return retVal.checkDoProcessWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkDoProcessWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest request) {
            return base.Channel.checkDoProcessWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomResponse> checkDoProcessWithRandomAsync(string sContextId, string sRandomId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkDoProcessWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkUserPwdWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest request) {
            return base.Channel.checkUserPwdWithInstance(request);
        }
        
        public string checkUserPwdWithInstance(string sUser, string sPwd, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sInstance = sInstance;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkUserPwdWithInstance(inValue);
            return retVal.checkUserPwdWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkUserPwdWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest request) {
            return base.Channel.checkUserPwdWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceResponse> checkUserPwdWithInstanceAsync(string sUser, string sPwd, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdWithInstanceRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sInstance = sInstance;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkUserPwdWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkAppRegWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest request) {
            return base.Channel.checkAppRegWithInstance(request);
        }
        
        public string checkAppRegWithInstance(string sAppReg, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sInstance = sInstance;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkAppRegWithInstance(inValue);
            return retVal.checkAppRegWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkAppRegWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest request) {
            return base.Channel.checkAppRegWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceResponse> checkAppRegWithInstanceAsync(string sAppReg, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sInstance = sInstance;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkAppRegWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdByNameWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest request) {
            return base.Channel.getXsdByNameWithInstance(request);
        }
        
        public byte[] getXsdByNameWithInstance(string sAppReg, string sName, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sName = sName;
            inValue.sInstance = sInstance;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdByNameWithInstance(inValue);
            return retVal.getXsdByNameWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdByNameWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest request) {
            return base.Channel.getXsdByNameWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceResponse> getXsdByNameWithInstanceAsync(string sAppReg, string sName, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdByNameWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sName = sName;
            inValue.sInstance = sInstance;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdByNameWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revCompanyAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest request) {
            return base.Channel.revCompanyAlreadyMapped(request);
        }
        
        public string revCompanyAlreadyMapped(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest();
            inValue.sDummy = sDummy;
            Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revCompanyAlreadyMapped(inValue);
            return retVal.revCompanyAlreadyMappedReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revCompanyAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest request) {
            return base.Channel.revCompanyAlreadyMappedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedResponse> revCompanyAlreadyMappedAsync(string sDummy) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revCompanyAlreadyMappedRequest();
            inValue.sDummy = sDummy;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revCompanyAlreadyMappedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityAlreadyMapped(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest request) {
            return base.Channel.checkRevInfinityAlreadyMapped(request);
        }
        
        public string checkRevInfinityAlreadyMapped(string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest();
            inValue.sAziInf = sAziInf;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityAlreadyMapped(inValue);
            return retVal.checkRevInfinityAlreadyMappedReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityAlreadyMappedAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest request) {
            return base.Channel.checkRevInfinityAlreadyMappedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedResponse> checkRevInfinityAlreadyMappedAsync(string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAlreadyMappedRequest();
            inValue.sAziInf = sAziInf;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityAlreadyMappedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityImportPackage(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest request) {
            return base.Channel.revInfinityImportPackage(request);
        }
        
        public string revInfinityImportPackage(byte[] bPackage) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest();
            inValue.bPackage = bPackage;
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityImportPackage(inValue);
            return retVal.revInfinityImportPackageReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityImportPackageAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest request) {
            return base.Channel.revInfinityImportPackageAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageResponse> revInfinityImportPackageAsync(byte[] bPackage) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityImportPackageRequest();
            inValue.bPackage = bPackage;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityImportPackageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.SetConvergencyCriteria(Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest request) {
            return base.Channel.SetConvergencyCriteria(request);
        }
        
        public string SetConvergencyCriteria(string sXmlCriteria) {
            Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest();
            inValue.sXmlCriteria = sXmlCriteria;
            Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).SetConvergencyCriteria(inValue);
            return retVal.SetConvergencyCriteriaReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.SetConvergencyCriteriaAsync(Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest request) {
            return base.Channel.SetConvergencyCriteriaAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaResponse> SetConvergencyCriteriaAsync(string sXmlCriteria) {
            Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.SetConvergencyCriteriaRequest();
            inValue.sXmlCriteria = sXmlCriteria;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).SetConvergencyCriteriaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.GetConvergencyCriteria(Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest request) {
            return base.Channel.GetConvergencyCriteria(request);
        }
        
        public string GetConvergencyCriteria(string sActionName) {
            Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest();
            inValue.sActionName = sActionName;
            Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).GetConvergencyCriteria(inValue);
            return retVal.GetConvergencyCriteriaReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.GetConvergencyCriteriaAsync(Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest request) {
            return base.Channel.GetConvergencyCriteriaAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaResponse> GetConvergencyCriteriaAsync(string sActionName) {
            Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.GetConvergencyCriteriaRequest();
            inValue.sActionName = sActionName;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).GetConvergencyCriteriaAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest request) {
            return base.Channel.connectWithInstance(request);
        }
        
        public string connectWithInstance(string sUser, string sPwd, string sCompanyId, string sInstanceId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sCompanyId = sCompanyId;
            inValue.sInstanceId = sInstanceId;
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectWithInstance(inValue);
            return retVal.connectWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest request) {
            return base.Channel.connectWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceResponse> connectWithInstanceAsync(string sUser, string sPwd, string sCompanyId, string sInstanceId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectWithInstanceRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sCompanyId = sCompanyId;
            inValue.sInstanceId = sInstanceId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectRevInfinity(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest request) {
            return base.Channel.connectRevInfinity(request);
        }
        
        public string connectRevInfinity(string sUser, string sPwd, string sAppreg, string sCompanyId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sAppreg = sAppreg;
            inValue.sCompanyId = sCompanyId;
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectRevInfinity(inValue);
            return retVal.connectRevInfinityReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.connectRevInfinityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest request) {
            return base.Channel.connectRevInfinityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityResponse> connectRevInfinityAsync(string sUser, string sPwd, string sAppreg, string sCompanyId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.connectRevInfinityRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            inValue.sAppreg = sAppreg;
            inValue.sCompanyId = sCompanyId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).connectRevInfinityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessSyncro(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest request) {
            return base.Channel.doProcessSyncro(request);
        }
        
        public string doProcessSyncro(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest();
            inValue.sContextId = sContextId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessSyncro(inValue);
            return retVal.doProcessSyncroReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessSyncroAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest request) {
            return base.Channel.doProcessSyncroAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroResponse> doProcessSyncroAsync(string sContextId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessSyncroRequest();
            inValue.sContextId = sContextId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessSyncroAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.putXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest request) {
            return base.Channel.putXmlWithRandom(request);
        }
        
        public string putXmlWithRandom(string sContextId, string sRandomId, string sAction, byte[] bXml, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sFlags = sFlags;
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).putXmlWithRandom(inValue);
            return retVal.putXmlWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.putXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest request) {
            return base.Channel.putXmlWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomResponse> putXmlWithRandomAsync(string sContextId, string sRandomId, string sAction, byte[] bXml, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.putXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sFlags = sFlags;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).putXmlWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.initXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest request) {
            return base.Channel.initXmlWithRandom(request);
        }
        
        public string initXmlWithRandom(string sContextId, string sRandomId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).initXmlWithRandom(inValue);
            return retVal.initXmlWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.initXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest request) {
            return base.Channel.initXmlWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomResponse> initXmlWithRandomAsync(string sContextId, string sRandomId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.initXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).initXmlWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.setsGuidImport(Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest request) {
            return base.Channel.setsGuidImport(request);
        }
        
        public void setsGuidImport(string sGuidImport) {
            Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest();
            inValue.sGuidImport = sGuidImport;
            Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).setsGuidImport(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.setsGuidImportAsync(Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest request) {
            return base.Channel.setsGuidImportAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportResponse> setsGuidImportAsync(string sGuidImport) {
            Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.setsGuidImportRequest();
            inValue.sGuidImport = sGuidImport;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).setsGuidImportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getsGuidImport(Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest request) {
            return base.Channel.getsGuidImport(request);
        }
        
        public string getsGuidImport() {
            Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest();
            Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getsGuidImport(inValue);
            return retVal.getsGuidImportReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getsGuidImportAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest request) {
            return base.Channel.getsGuidImportAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportResponse> getsGuidImportAsync() {
            Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getsGuidImportRequest();
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getsGuidImportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.closeXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest request) {
            return base.Channel.closeXmlWithRandom(request);
        }
        
        public string closeXmlWithRandom(string sContextId, string sRandomId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).closeXmlWithRandom(inValue);
            return retVal.closeXmlWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.closeXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest request) {
            return base.Channel.closeXmlWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomResponse> closeXmlWithRandomAsync(string sContextId, string sRandomId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).closeXmlWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest request) {
            return base.Channel.getXmlWithRandom(request);
        }
        
        public byte[] getXmlWithRandom(string sContextId, string sRandomId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.lFrom = lFrom;
            inValue.lTo = lTo;
            inValue.sFlags = sFlags;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlWithRandom(inValue);
            return retVal.getXmlWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXmlWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest request) {
            return base.Channel.getXmlWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomResponse> getXmlWithRandomAsync(string sContextId, string sRandomId, string sProcessId, string sAction, int lFrom, int lTo, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXmlWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.lFrom = lFrom;
            inValue.lTo = lTo;
            inValue.sFlags = sFlags;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXmlWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessWithRandom(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest request) {
            return base.Channel.doProcessWithRandom(request);
        }
        
        public string doProcessWithRandom(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessWithRandom(inValue);
            return retVal.doProcessWithRandomReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.doProcessWithRandomAsync(Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest request) {
            return base.Channel.doProcessWithRandomAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomResponse> doProcessWithRandomAsync(string sContextId, string sRandomId, string sActionList, string sAtomicLevel, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.doProcessWithRandomRequest();
            inValue.sContextId = sContextId;
            inValue.sRandomId = sRandomId;
            inValue.sActionList = sActionList;
            inValue.sAtomicLevel = sAtomicLevel;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).doProcessWithRandomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkDoProcess(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest request) {
            return base.Channel.checkDoProcess(request);
        }
        
        public string checkDoProcess(string sContextId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkDoProcess(inValue);
            return retVal.checkDoProcessReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkDoProcessAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest request) {
            return base.Channel.checkDoProcessAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessResponse> checkDoProcessAsync(string sContextId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkDoProcessRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkDoProcessAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getProcessInfo(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest request) {
            return base.Channel.getProcessInfo(request);
        }
        
        public string getProcessInfo(string sContextId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getProcessInfo(inValue);
            return retVal.getProcessInfoReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getProcessInfoAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest request) {
            return base.Channel.getProcessInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoResponse> getProcessInfoAsync(string sContextId, string sProcessId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getProcessInfoRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getProcessInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getProcessMode(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest request) {
            return base.Channel.getProcessMode(request);
        }
        
        public string getProcessMode(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest();
            inValue.sContextId = sContextId;
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getProcessMode(inValue);
            return retVal.getProcessModeReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getProcessModeAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest request) {
            return base.Channel.getProcessModeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeResponse> getProcessModeAsync(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getProcessModeRequest();
            inValue.sContextId = sContextId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getProcessModeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getActionWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest request) {
            return base.Channel.getActionWithInstance(request);
        }
        
        public string getActionWithInstance(string sAppReg, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sInstance = sInstance;
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getActionWithInstance(inValue);
            return retVal.getActionWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getActionWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest request) {
            return base.Channel.getActionWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceResponse> getActionWithInstanceAsync(string sAppReg, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getActionWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sInstance = sInstance;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getActionWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdWithInstance(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest request) {
            return base.Channel.getXsdWithInstance(request);
        }
        
        public byte[] getXsdWithInstance(string sAppReg, string sAction, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sAction = sAction;
            inValue.sInstance = sInstance;
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdWithInstance(inValue);
            return retVal.getXsdWithInstanceReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.getXsdWithInstanceAsync(Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest request) {
            return base.Channel.getXsdWithInstanceAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceResponse> getXsdWithInstanceAsync(string sAppReg, string sAction, string sInstance) {
            Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.getXsdWithInstanceRequest();
            inValue.sAppReg = sAppReg;
            inValue.sAction = sAction;
            inValue.sInstance = sInstance;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).getXsdWithInstanceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.uploadMailAttachments(Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest request) {
            return base.Channel.uploadMailAttachments(request);
        }
        
        public string uploadMailAttachments(string sContextId, byte[] bAttachments) {
            Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest();
            inValue.sContextId = sContextId;
            inValue.bAttachments = bAttachments;
            Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).uploadMailAttachments(inValue);
            return retVal.uploadMailAttachmentsReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.uploadMailAttachmentsAsync(Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest request) {
            return base.Channel.uploadMailAttachmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsResponse> uploadMailAttachmentsAsync(string sContextId, byte[] bAttachments) {
            Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.uploadMailAttachmentsRequest();
            inValue.sContextId = sContextId;
            inValue.bAttachments = bAttachments;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).uploadMailAttachmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.rollbackEntity(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest request) {
            return base.Channel.rollbackEntity(request);
        }
        
        public string rollbackEntity(string sContextId, string sProcessId, string sAction, string sEntityId, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sEntityId = sEntityId;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).rollbackEntity(inValue);
            return retVal.rollbackEntityReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.rollbackEntityAsync(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest request) {
            return base.Channel.rollbackEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityResponse> rollbackEntityAsync(string sContextId, string sProcessId, string sAction, string sEntityId, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.rollbackEntityRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sEntityId = sEntityId;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).rollbackEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.rollbackAction(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest request) {
            return base.Channel.rollbackAction(request);
        }
        
        public string rollbackAction(string sContextId, string sProcessId, string sAction, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sOwner = sOwner;
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).rollbackAction(inValue);
            return retVal.rollbackActionReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.rollbackActionAsync(Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest request) {
            return base.Channel.rollbackActionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionResponse> rollbackActionAsync(string sContextId, string sProcessId, string sAction, string sOwner) {
            Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.rollbackActionRequest();
            inValue.sContextId = sContextId;
            inValue.sProcessId = sProcessId;
            inValue.sAction = sAction;
            inValue.sOwner = sOwner;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).rollbackActionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityAss(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest request) {
            return base.Channel.checkRevInfinityAss(request);
        }
        
        public string checkRevInfinityAss(string sAziRev, string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest();
            inValue.sAziRev = sAziRev;
            inValue.sAziInf = sAziInf;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityAss(inValue);
            return retVal.checkRevInfinityAssReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkRevInfinityAssAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest request) {
            return base.Channel.checkRevInfinityAssAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssResponse> checkRevInfinityAssAsync(string sAziRev, string sAziInf) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkRevInfinityAssRequest();
            inValue.sAziRev = sAziRev;
            inValue.sAziInf = sAziInf;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkRevInfinityAssAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityAss(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest request) {
            return base.Channel.revInfinityAss(request);
        }
        
        public string revInfinityAss(string sAziRev, string sAziInf, string sCodeAhr, string sConnDb) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest();
            inValue.sAziRev = sAziRev;
            inValue.sAziInf = sAziInf;
            inValue.sCodeAhr = sCodeAhr;
            inValue.sConnDb = sConnDb;
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityAss(inValue);
            return retVal.revInfinityAssReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityAssAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest request) {
            return base.Channel.revInfinityAssAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssResponse> revInfinityAssAsync(string sAziRev, string sAziInf, string sCodeAhr, string sConnDb) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityAssRequest();
            inValue.sAziRev = sAziRev;
            inValue.sAziInf = sAziInf;
            inValue.sCodeAhr = sCodeAhr;
            inValue.sConnDb = sConnDb;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityAssAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfSetGlobal(Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest request) {
            return base.Channel.revInfSetGlobal(request);
        }
        
        public string revInfSetGlobal(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest();
            inValue.sContextId = sContextId;
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfSetGlobal(inValue);
            return retVal.revInfSetGlobalReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfSetGlobalAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest request) {
            return base.Channel.revInfSetGlobalAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalResponse> revInfSetGlobalAsync(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfSetGlobalRequest();
            inValue.sContextId = sContextId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfSetGlobalAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.magoInfSetGlobal(Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest request) {
            return base.Channel.magoInfSetGlobal(request);
        }
        
        public string magoInfSetGlobal(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest();
            inValue.sContextId = sContextId;
            Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).magoInfSetGlobal(inValue);
            return retVal.magoInfSetGlobalReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.magoInfSetGlobalAsync(Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest request) {
            return base.Channel.magoInfSetGlobalAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalResponse> magoInfSetGlobalAsync(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.magoInfSetGlobalRequest();
            inValue.sContextId = sContextId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).magoInfSetGlobalAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityServerEst(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest request) {
            return base.Channel.revInfinityServerEst(request);
        }
        
        public string revInfinityServerEst(string sCodeAhr, string sConnDb) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest();
            inValue.sCodeAhr = sCodeAhr;
            inValue.sConnDb = sConnDb;
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityServerEst(inValue);
            return retVal.revInfinityServerEstReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.revInfinityServerEstAsync(Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest request) {
            return base.Channel.revInfinityServerEstAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstResponse> revInfinityServerEstAsync(string sCodeAhr, string sConnDb) {
            Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.revInfinityServerEstRequest();
            inValue.sCodeAhr = sCodeAhr;
            inValue.sConnDb = sConnDb;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).revInfinityServerEstAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkConnectionDbAhr(Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest request) {
            return base.Channel.checkConnectionDbAhr(request);
        }
        
        public string checkConnectionDbAhr(string sUrlConnection) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest();
            inValue.sUrlConnection = sUrlConnection;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkConnectionDbAhr(inValue);
            return retVal.checkConnectionDbAhrReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkConnectionDbAhrAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest request) {
            return base.Channel.checkConnectionDbAhrAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrResponse> checkConnectionDbAhrAsync(string sUrlConnection) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkConnectionDbAhrRequest();
            inValue.sUrlConnection = sUrlConnection;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkConnectionDbAhrAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.ping(Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest request) {
            return base.Channel.ping(request);
        }
        
        public string ping(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest();
            inValue.sContextId = sContextId;
            Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).ping(inValue);
            return retVal.pingReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.pingAsync(Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest request) {
            return base.Channel.pingAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.pingResponse> pingAsync(string sContextId) {
            Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.pingRequest();
            inValue.sContextId = sContextId;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).pingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.executeSyncro(Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest request) {
            return base.Channel.executeSyncro(request);
        }
        
        public string executeSyncro(string sContextId, string sOwner, string sAction, byte[] bXml, string sAtomicLevel) {
            Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest();
            inValue.sContextId = sContextId;
            inValue.sOwner = sOwner;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sAtomicLevel = sAtomicLevel;
            Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).executeSyncro(inValue);
            return retVal.executeSyncroReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.executeSyncroAsync(Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest request) {
            return base.Channel.executeSyncroAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroResponse> executeSyncroAsync(string sContextId, string sOwner, string sAction, byte[] bXml, string sAtomicLevel) {
            Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.executeSyncroRequest();
            inValue.sContextId = sContextId;
            inValue.sOwner = sOwner;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sAtomicLevel = sAtomicLevel;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).executeSyncroAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkAppReg(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest request) {
            return base.Channel.checkAppReg(request);
        }
        
        public string checkAppReg(string sAppReg) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest();
            inValue.sAppReg = sAppReg;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkAppReg(inValue);
            return retVal.checkAppRegReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkAppRegAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest request) {
            return base.Channel.checkAppRegAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegResponse> checkAppRegAsync(string sAppReg) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkAppRegRequest();
            inValue.sAppReg = sAppReg;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkAppRegAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkUserPwd(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest request) {
            return base.Channel.checkUserPwd(request);
        }
        
        public string checkUserPwd(string sUser, string sPwd) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkUserPwd(inValue);
            return retVal.checkUserPwdReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.checkUserPwdAsync(Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest request) {
            return base.Channel.checkUserPwdAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdResponse> checkUserPwdAsync(string sUser, string sPwd) {
            Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.checkUserPwdRequest();
            inValue.sUser = sUser;
            inValue.sPwd = sPwd;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).checkUserPwdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.initXml(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest request) {
            return base.Channel.initXml(request);
        }
        
        public string initXml(string sContextId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).initXml(inValue);
            return retVal.initXmlReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.initXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest request) {
            return base.Channel.initXmlAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.initXmlResponse> initXmlAsync(string sContextId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.initXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).initXmlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.closeXml(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest request) {
            return base.Channel.closeXml(request);
        }
        
        public string closeXml(string sContextId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).closeXml(inValue);
            return retVal.closeXmlReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.closeXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest request) {
            return base.Channel.closeXmlAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlResponse> closeXmlAsync(string sContextId, string sAction) {
            Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.closeXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).closeXmlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.putXml(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest request) {
            return base.Channel.putXml(request);
        }
        
        public string putXml(string sContextId, string sAction, byte[] bXml, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sFlags = sFlags;
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).putXml(inValue);
            return retVal.putXmlReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.putXmlAsync(Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest request) {
            return base.Channel.putXmlAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.putXmlResponse> putXmlAsync(string sContextId, string sAction, byte[] bXml, string sFlags) {
            Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.putXmlRequest();
            inValue.sContextId = sContextId;
            inValue.sAction = sAction;
            inValue.bXml = bXml;
            inValue.sFlags = sFlags;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).putXmlAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.setVrt(Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest request) {
            return base.Channel.setVrt(request);
        }
        
        public string setVrt(string sContextId, string sBo, string sFields) {
            Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest();
            inValue.sContextId = sContextId;
            inValue.sBo = sBo;
            inValue.sFields = sFields;
            Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse retVal = ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).setVrt(inValue);
            return retVal.setVrtReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse> Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro.setVrtAsync(Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest request) {
            return base.Channel.setVrtAsync(request);
        }
        
        public System.Threading.Tasks.Task<Microarea.TaskBuilderNet.UI.InfinityServices.setVrtResponse> setVrtAsync(string sContextId, string sBo, string sFields) {
            Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest inValue = new Microarea.TaskBuilderNet.UI.InfinityServices.setVrtRequest();
            inValue.sContextId = sContextId;
            inValue.sBo = sBo;
            inValue.sFields = sFields;
            return ((Microarea.TaskBuilderNet.UI.InfinityServices.InfinitySyncro)(this)).setVrtAsync(inValue);
        }
    }
}
