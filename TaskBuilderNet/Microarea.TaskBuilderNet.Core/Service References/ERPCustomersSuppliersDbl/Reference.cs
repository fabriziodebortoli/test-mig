//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBHeaderInfo", Namespace="urn:Microarea.Web.Services")]
    [System.SerializableAttribute()]
    public partial class TBHeaderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthToken {
            get {
                return this.AuthTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthTokenField, value) != true)) {
                    this.AuthTokenField = value;
                    this.RaisePropertyChanged("AuthToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
    [System.SerializableAttribute()]
    public partial class TBSoapFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Microarea.Web.Services", ConfigurationName="ERPCustomersSuppliersDbl.CustomersSuppliersDbl")]
    public interface CustomersSuppliersDbl {
        
        // CODEGEN: Generating message contract since the operation TaxIdNoCheck is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#TaxIdNoCheck", ReplyAction="urn:Microarea.Web.Services/CustomersSuppliersDbl/TaxIdNoCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBSoapFault), Action="urn:Microarea.Web.Services/CustomersSuppliersDbl/TaxIdNoCheckTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckOut TaxIdNoCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckIn request);
        
        // CODEGEN: Generating message contract since the operation CheckForTaxIdNoWithCountryCode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CheckForTaxIdNoWithCountryCode", ReplyAction="urn:Microarea.Web.Services/CustomersSuppliersDbl/CheckForTaxIdNoWithCountryCodeRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBSoapFault), Action="urn:Microarea.Web.Services/CustomersSuppliersDbl/CheckForTaxIdNoWithCountryCodeTB" +
            "SoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeOut CheckForTaxIdNoWithCountryCode(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeIn request);
        
        // CODEGEN: Generating message contract since the operation TaxIdNoSecondCheck is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#TaxIdNoSecondCheck", ReplyAction="urn:Microarea.Web.Services/CustomersSuppliersDbl/TaxIdNoSecondCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBSoapFault), Action="urn:Microarea.Web.Services/CustomersSuppliersDbl/TaxIdNoSecondCheckTBSoapFaultFau" +
            "lt", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckOut TaxIdNoSecondCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckIn request);
        
        // CODEGEN: Generating message contract since the operation FiscalCodeCheck is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#FiscalCodeCheck", ReplyAction="urn:Microarea.Web.Services/CustomersSuppliersDbl/FiscalCodeCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBSoapFault), Action="urn:Microarea.Web.Services/CustomersSuppliersDbl/FiscalCodeCheckTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckOut FiscalCodeCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckIn request);
        
        // CODEGEN: Generating message contract since the operation ExistCustForTaxIdOrFiscalCode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExistCustForTaxIdOrFiscalCode", ReplyAction="urn:Microarea.Web.Services/CustomersSuppliersDbl/ExistCustForTaxIdOrFiscalCodeRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBSoapFault), Action="urn:Microarea.Web.Services/CustomersSuppliersDbl/ExistCustForTaxIdOrFiscalCodeTBS" +
            "oapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeOut ExistCustForTaxIdOrFiscalCode(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeIn request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TaxIdNoCheckIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.TaxIdNoCheck", Order=0)]
        public string taxIdNumber;
        
        public TaxIdNoCheckIn() {
        }
        
        public TaxIdNoCheckIn(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            this.HeaderInfo = HeaderInfo;
            this.taxIdNumber = taxIdNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TaxIdNoCheckOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.TaxIdNoCheck", Order=0)]
        public bool @return;
        
        public TaxIdNoCheckOut() {
        }
        
        public TaxIdNoCheckOut(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckForTaxIdNoWithCountryCodeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CheckForTaxIdNoWithCountryCode", Order=0)]
        public string countryCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CheckForTaxIdNoWithCountryCode", Order=1)]
        public string taxIdNumber;
        
        public CheckForTaxIdNoWithCountryCodeIn() {
        }
        
        public CheckForTaxIdNoWithCountryCodeIn(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string countryCode, string taxIdNumber) {
            this.HeaderInfo = HeaderInfo;
            this.countryCode = countryCode;
            this.taxIdNumber = taxIdNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CheckForTaxIdNoWithCountryCodeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CheckForTaxIdNoWithCountryCode", Order=0)]
        public bool @return;
        
        public CheckForTaxIdNoWithCountryCodeOut() {
        }
        
        public CheckForTaxIdNoWithCountryCodeOut(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TaxIdNoSecondCheckIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.TaxIdNoSecondCheck", Order=0)]
        public string taxIdNumber;
        
        public TaxIdNoSecondCheckIn() {
        }
        
        public TaxIdNoSecondCheckIn(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            this.HeaderInfo = HeaderInfo;
            this.taxIdNumber = taxIdNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TaxIdNoSecondCheckOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.TaxIdNoSecondCheck", Order=0)]
        public bool @return;
        
        public TaxIdNoSecondCheckOut() {
        }
        
        public TaxIdNoSecondCheckOut(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FiscalCodeCheckIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.FiscalCodeCheck", Order=0)]
        public string taxIdNumber;
        
        public FiscalCodeCheckIn() {
        }
        
        public FiscalCodeCheckIn(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            this.HeaderInfo = HeaderInfo;
            this.taxIdNumber = taxIdNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FiscalCodeCheckOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.FiscalCodeCheck", Order=0)]
        public bool @return;
        
        public FiscalCodeCheckOut() {
        }
        
        public FiscalCodeCheckOut(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistCustForTaxIdOrFiscalCodeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExistCustForTaxIdOrFiscalCode", Order=0)]
        public string taxIdNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExistCustForTaxIdOrFiscalCode", Order=1)]
        public string FiscalCode;
        
        public ExistCustForTaxIdOrFiscalCodeIn() {
        }
        
        public ExistCustForTaxIdOrFiscalCodeIn(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber, string FiscalCode) {
            this.HeaderInfo = HeaderInfo;
            this.taxIdNumber = taxIdNumber;
            this.FiscalCode = FiscalCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistCustForTaxIdOrFiscalCodeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExistCustForTaxIdOrFiscalCode", Order=0)]
        public bool @return;
        
        public ExistCustForTaxIdOrFiscalCodeOut() {
        }
        
        public ExistCustForTaxIdOrFiscalCodeOut(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CustomersSuppliersDblChannel : Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomersSuppliersDblClient : System.ServiceModel.ClientBase<Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl>, Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl {
        
        public CustomersSuppliersDblClient() {
        }
        
        public CustomersSuppliersDblClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomersSuppliersDblClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersSuppliersDblClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersSuppliersDblClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckOut Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl.TaxIdNoCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckIn request) {
            return base.Channel.TaxIdNoCheck(request);
        }
        
        public bool TaxIdNoCheck(ref Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckIn inValue = new Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.taxIdNumber = taxIdNumber;
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoCheckOut retVal = ((Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl)(this)).TaxIdNoCheck(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeOut Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl.CheckForTaxIdNoWithCountryCode(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeIn request) {
            return base.Channel.CheckForTaxIdNoWithCountryCode(request);
        }
        
        public bool CheckForTaxIdNoWithCountryCode(ref Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string countryCode, string taxIdNumber) {
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeIn inValue = new Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.countryCode = countryCode;
            inValue.taxIdNumber = taxIdNumber;
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CheckForTaxIdNoWithCountryCodeOut retVal = ((Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl)(this)).CheckForTaxIdNoWithCountryCode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckOut Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl.TaxIdNoSecondCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckIn request) {
            return base.Channel.TaxIdNoSecondCheck(request);
        }
        
        public bool TaxIdNoSecondCheck(ref Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckIn inValue = new Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.taxIdNumber = taxIdNumber;
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TaxIdNoSecondCheckOut retVal = ((Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl)(this)).TaxIdNoSecondCheck(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckOut Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl.FiscalCodeCheck(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckIn request) {
            return base.Channel.FiscalCodeCheck(request);
        }
        
        public bool FiscalCodeCheck(ref Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber) {
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckIn inValue = new Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.taxIdNumber = taxIdNumber;
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.FiscalCodeCheckOut retVal = ((Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl)(this)).FiscalCodeCheck(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeOut Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCode(Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeIn request) {
            return base.Channel.ExistCustForTaxIdOrFiscalCode(request);
        }
        
        public bool ExistCustForTaxIdOrFiscalCode(ref Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.TBHeaderInfo HeaderInfo, string taxIdNumber, string FiscalCode) {
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeIn inValue = new Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.taxIdNumber = taxIdNumber;
            inValue.FiscalCode = FiscalCode;
            Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.ExistCustForTaxIdOrFiscalCodeOut retVal = ((Microarea.TaskBuilderNet.Core.ERPCustomersSuppliersDbl.CustomersSuppliersDbl)(this)).ExistCustForTaxIdOrFiscalCode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
    }
}
