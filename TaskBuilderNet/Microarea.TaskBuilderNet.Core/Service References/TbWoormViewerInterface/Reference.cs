//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.TaskBuilderNet.Core.TbWoormViewerInterface {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBHeaderInfo", Namespace="urn:Microarea.Web.Services")]
    [System.SerializableAttribute()]
    public partial class TBHeaderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthToken {
            get {
                return this.AuthTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthTokenField, value) != true)) {
                    this.AuthTokenField = value;
                    this.RaisePropertyChanged("AuthToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
    [System.SerializableAttribute()]
    public partial class TBSoapFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Microarea.Web.Services", ConfigurationName="TbWoormViewerInterface.TbWoormViewer")]
    public interface TbWoormViewer {
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetParamValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetParamValue", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetParamValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetParamValueTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut CWoormInfo_SetParamValue(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetParamValue", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetParamValueResponse")]
        System.IAsyncResult BeginCWoormInfo_SetParamValue(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut EndCWoormInfo_SetParamValue(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetUICulture is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetUICulture", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUICultureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUICultureTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut CWoormInfo_SetUICulture(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetUICulture", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUICultureResponse")]
        System.IAsyncResult BeginCWoormInfo_SetUICulture(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut EndCWoormInfo_SetUICulture(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetPrinterName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetPrinterName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPrinterNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPrinterNameTBSoapFaultFaul" +
            "t", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut CWoormInfo_SetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetPrinterName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPrinterNameResponse")]
        System.IAsyncResult BeginCWoormInfo_SetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut EndCWoormInfo_SetPrinterName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetExportOutputType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetExportOutputType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExportOutputTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExportOutputTypeTBSoapFaul" +
            "tFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut CWoormInfo_SetExportOutputType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetExportOutputType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExportOutputTypeResponse")]
        System.IAsyncResult BeginCWoormInfo_SetExportOutputType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut EndCWoormInfo_SetExportOutputType(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormDoc_Close is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormDoc_Close", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_CloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_CloseTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut CWoormDoc_Close(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormDoc_Close", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_CloseResponse")]
        System.IAsyncResult BeginCWoormDoc_Close(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut EndCWoormDoc_Close(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormDoc_Print is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormDoc_Print", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_PrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_PrintTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut CWoormDoc_Print(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormDoc_Print", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormDoc_PrintResponse")]
        System.IAsyncResult BeginCWoormDoc_Print(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut EndCWoormDoc_Print(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetConcatPDF is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetConcatPDF", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetConcatPDFResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetConcatPDFTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut CWoormInfo_SetConcatPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetConcatPDF", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetConcatPDFResponse")]
        System.IAsyncResult BeginCWoormInfo_SetConcatPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut EndCWoormInfo_SetConcatPDF(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetPDFOutput is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetPDFOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut CWoormInfo_SetPDFOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetPDFOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputResponse")]
        System.IAsyncResult BeginCWoormInfo_SetPDFOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut EndCWoormInfo_SetPDFOutput(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetPDFOutputPreview is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetPDFOutputPreview", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputPreviewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputPreviewTBSoapFaul" +
            "tFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut CWoormInfo_SetPDFOutputPreview(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetPDFOutputPreview", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetPDFOutputPreviewResponse")]
        System.IAsyncResult BeginCWoormInfo_SetPDFOutputPreview(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut EndCWoormInfo_SetPDFOutputPreview(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_AddOutputFileName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_AddOutputFileName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddOutputFileNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddOutputFileNameTBSoapFaultF" +
            "ault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut CWoormInfo_AddOutputFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_AddOutputFileName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddOutputFileNameResponse")]
        System.IAsyncResult BeginCWoormInfo_AddOutputFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut EndCWoormInfo_AddOutputFileName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetRDEOutput is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetRDEOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetRDEOutputResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetRDEOutputTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut CWoormInfo_SetRDEOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetRDEOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetRDEOutputResponse")]
        System.IAsyncResult BeginCWoormInfo_SetRDEOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut EndCWoormInfo_SetRDEOutput(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetExcelOutput is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetExcelOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExcelOutputResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExcelOutputTBSoapFaultFaul" +
            "t", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut CWoormInfo_SetExcelOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetExcelOutput", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetExcelOutputResponse")]
        System.IAsyncResult BeginCWoormInfo_SetExcelOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut EndCWoormInfo_SetExcelOutput(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailTo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailTo", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailToTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut CWoormInfo_MailTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailTo", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailToResponse")]
        System.IAsyncResult BeginCWoormInfo_MailTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut EndCWoormInfo_MailTo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailCc is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailCc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailCcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailCcTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut CWoormInfo_MailCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailCc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailCcResponse")]
        System.IAsyncResult BeginCWoormInfo_MailCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut EndCWoormInfo_MailCc(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailBcc is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailBcc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBccResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBccTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut CWoormInfo_MailBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailBcc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBccResponse")]
        System.IAsyncResult BeginCWoormInfo_MailBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut EndCWoormInfo_MailBcc(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailAttach is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailAttach", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailAttachTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut CWoormInfo_MailAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailAttach", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailAttachResponse")]
        System.IAsyncResult BeginCWoormInfo_MailAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut EndCWoormInfo_MailAttach(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailSubject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailSubject", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailSubjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailSubjectTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut CWoormInfo_MailSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailSubject", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailSubjectResponse")]
        System.IAsyncResult BeginCWoormInfo_MailSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut EndCWoormInfo_MailSubject(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_MailBody is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_MailBody", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBodyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBodyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut CWoormInfo_MailBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_MailBody", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_MailBodyResponse")]
        System.IAsyncResult BeginCWoormInfo_MailBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut EndCWoormInfo_MailBody(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_AddParameter is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_AddParameter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddParameterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddParameterTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut CWoormInfo_AddParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_AddParameter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddParameterResponse")]
        System.IAsyncResult BeginCWoormInfo_AddParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut EndCWoormInfo_AddParameter(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetCloseOnEndPrint is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetCloseOnEndPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCloseOnEndPrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCloseOnEndPrintTBSoapFault" +
            "Fault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut CWoormInfo_SetCloseOnEndPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetCloseOnEndPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCloseOnEndPrintResponse")]
        System.IAsyncResult BeginCWoormInfo_SetCloseOnEndPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut EndCWoormInfo_SetCloseOnEndPrint(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetIconized is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetIconized", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetIconizedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetIconizedTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut CWoormInfo_SetIconized(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetIconized", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetIconizedResponse")]
        System.IAsyncResult BeginCWoormInfo_SetIconized(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut EndCWoormInfo_SetIconized(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetHideFrame is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetHideFrame", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetHideFrameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetHideFrameTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut CWoormInfo_SetHideFrame(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetHideFrame", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetHideFrameResponse")]
        System.IAsyncResult BeginCWoormInfo_SetHideFrame(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut EndCWoormInfo_SetHideFrame(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetSilentMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetSilentMode", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSilentModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSilentModeTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut CWoormInfo_SetSilentMode(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetSilentMode", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSilentModeResponse")]
        System.IAsyncResult BeginCWoormInfo_SetSilentMode(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut EndCWoormInfo_SetSilentMode(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetSendEmail is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetSendEmail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSendEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSendEmailTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut CWoormInfo_SetSendEmail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetSendEmail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetSendEmailResponse")]
        System.IAsyncResult BeginCWoormInfo_SetSendEmail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut EndCWoormInfo_SetSendEmail(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetAttachRDE is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetAttachRDE", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachRDEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachRDETBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut CWoormInfo_SetAttachRDE(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetAttachRDE", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachRDEResponse")]
        System.IAsyncResult BeginCWoormInfo_SetAttachRDE(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut EndCWoormInfo_SetAttachRDE(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetAttachPDF is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetAttachPDF", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachPDFResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachPDFTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut CWoormInfo_SetAttachPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetAttachPDF", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachPDFResponse")]
        System.IAsyncResult BeginCWoormInfo_SetAttachPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut EndCWoormInfo_SetAttachPDF(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetAttachOther is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetAttachOther", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachOtherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachOtherTBSoapFaultFaul" +
            "t", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut CWoormInfo_SetAttachOther(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetAttachOther", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAttachOtherResponse")]
        System.IAsyncResult BeginCWoormInfo_SetAttachOther(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut EndCWoormInfo_SetAttachOther(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetArchivePdfFormat is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetArchivePdfFormat", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetArchivePdfFormatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetArchivePdfFormatTBSoapFaul" +
            "tFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut CWoormInfo_SetArchivePdfFormat(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetArchivePdfFormat", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetArchivePdfFormatResponse")]
        System.IAsyncResult BeginCWoormInfo_SetArchivePdfFormat(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut EndCWoormInfo_SetArchivePdfFormat(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetCompressAttach is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetCompressAttach", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCompressAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCompressAttachTBSoapFaultF" +
            "ault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut CWoormInfo_SetCompressAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetCompressAttach", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetCompressAttachResponse")]
        System.IAsyncResult BeginCWoormInfo_SetCompressAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut EndCWoormInfo_SetCompressAttach(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetOnePrintDialog is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetOnePrintDialog", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetOnePrintDialogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetOnePrintDialogTBSoapFaultF" +
            "ault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut CWoormInfo_SetOnePrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetOnePrintDialog", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetOnePrintDialogResponse")]
        System.IAsyncResult BeginCWoormInfo_SetOnePrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut EndCWoormInfo_SetOnePrintDialog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetUniqueMail is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetUniqueMail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUniqueMailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUniqueMailTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut CWoormInfo_SetUniqueMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetUniqueMail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetUniqueMailResponse")]
        System.IAsyncResult BeginCWoormInfo_SetUniqueMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut EndCWoormInfo_SetUniqueMail(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetDocumentMethods is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetDocumentMethods", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetDocumentMethodsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetDocumentMethodsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut GetDocumentMethods(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetDocumentMethods", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetDocumentMethodsResponse")]
        System.IAsyncResult BeginGetDocumentMethods(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut EndGetDocumentMethods(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation IsPostaLiteEnabled is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#IsPostaLiteEnabled", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsPostaLiteEnabledResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/IsPostaLiteEnabledTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut IsPostaLiteEnabled(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#IsPostaLiteEnabled", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsPostaLiteEnabledResponse")]
        System.IAsyncResult BeginIsPostaLiteEnabled(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut EndIsPostaLiteEnabled(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodeDeliveryType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodeDeliveryType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeDeliveryTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeDeliveryTypeTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut PostaLiteDecodeDeliveryType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodeDeliveryType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeDeliveryTypeResponse")]
        System.IAsyncResult BeginPostaLiteDecodeDeliveryType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut EndPostaLiteDecodeDeliveryType(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodePrintType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodePrintType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodePrintTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodePrintTypeTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut PostaLiteDecodePrintType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodePrintType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodePrintTypeResponse")]
        System.IAsyncResult BeginPostaLiteDecodePrintType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut EndPostaLiteDecodePrintType(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodeStatus is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodeStatus", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut PostaLiteDecodeStatus(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodeStatus", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusResponse")]
        System.IAsyncResult BeginPostaLiteDecodeStatus(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut EndPostaLiteDecodeStatus(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodeCodeState is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodeCodeState", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeCodeStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeCodeStateTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut PostaLiteDecodeCodeState(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodeCodeState", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeCodeStateResponse")]
        System.IAsyncResult BeginPostaLiteDecodeCodeState(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut EndPostaLiteDecodeCodeState(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodeStatusExt is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodeStatusExt", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusExtTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut PostaLiteDecodeStatusExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodeStatusExt", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeStatusExtResponse")]
        System.IAsyncResult BeginPostaLiteDecodeStatusExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut EndPostaLiteDecodeStatusExt(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteDecodeErrorExt is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteDecodeErrorExt", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeErrorExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeErrorExtTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut PostaLiteDecodeErrorExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteDecodeErrorExt", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteDecodeErrorExtResponse")]
        System.IAsyncResult BeginPostaLiteDecodeErrorExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut EndPostaLiteDecodeErrorExt(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_Create is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_Create", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_CreateTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut CWoormInfo_Create(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_Create", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_CreateResponse")]
        System.IAsyncResult BeginCWoormInfo_Create(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut EndCWoormInfo_Create(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_Dispose is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_Dispose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_DisposeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_DisposeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut CWoormInfo_Dispose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_Dispose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_DisposeResponse")]
        System.IAsyncResult BeginCWoormInfo_Dispose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut EndCWoormInfo_Dispose(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_AddReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_AddReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut CWoormInfo_AddReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_AddReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_AddReportResponse")]
        System.IAsyncResult BeginCWoormInfo_AddReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut EndCWoormInfo_AddReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetAutoPrint is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetAutoPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAutoPrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAutoPrintTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut CWoormInfo_SetAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetAutoPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetAutoPrintResponse")]
        System.IAsyncResult BeginCWoormInfo_SetAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut EndCWoormInfo_SetAutoPrint(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CWoormInfo_SetNoPrintDialog is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CWoormInfo_SetNoPrintDialog", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetNoPrintDialogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetNoPrintDialogTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut CWoormInfo_SetNoPrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CWoormInfo_SetNoPrintDialog", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CWoormInfo_SetNoPrintDialogResponse")]
        System.IAsyncResult BeginCWoormInfo_SetNoPrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut EndCWoormInfo_SetNoPrintDialog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionBeginTrans is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionBeginTrans", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionBeginTransResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionBeginTransTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut ConnectionBeginTrans(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionBeginTrans", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionBeginTransResponse")]
        System.IAsyncResult BeginConnectionBeginTrans(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut EndConnectionBeginTrans(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionCommit is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionCommit", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCommitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCommitTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut ConnectionCommit(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionCommit", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCommitResponse")]
        System.IAsyncResult BeginConnectionCommit(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut EndConnectionCommit(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionRollback is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionRollback", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionRollbackResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionRollbackTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut ConnectionRollback(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionRollback", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionRollbackResponse")]
        System.IAsyncResult BeginConnectionRollback(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut EndConnectionRollback(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionClose is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionClose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCloseTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut ConnectionClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionClose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionCloseResponse")]
        System.IAsyncResult BeginConnectionClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut EndConnectionClose(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteSetAddressee is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteSetAddressee", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetAddresseeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetAddresseeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut PostaLiteSetAddressee(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteSetAddressee", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetAddresseeResponse")]
        System.IAsyncResult BeginPostaLiteSetAddressee(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut EndPostaLiteSetAddressee(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteSetSendType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteSetSendType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetSendTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetSendTypeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut PostaLiteSetSendType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteSetSendType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSetSendTypeResponse")]
        System.IAsyncResult BeginPostaLiteSetSendType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut EndPostaLiteSetSendType(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PostaLiteSend is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#PostaLiteSend", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSendTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut PostaLiteSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#PostaLiteSend", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/PostaLiteSendResponse")]
        System.IAsyncResult BeginPostaLiteSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut EndPostaLiteSend(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SendMail is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SendMail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/SendMailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/SendMailTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut SendMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#SendMail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/SendMailResponse")]
        System.IAsyncResult BeginSendMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut EndSendMail(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ExecNewReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExecNewReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecNewReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ExecNewReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut ExecNewReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ExecNewReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecNewReportResponse")]
        System.IAsyncResult BeginExecNewReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut EndExecNewReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ExecOpenReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExecOpenReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecOpenReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ExecOpenReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut ExecOpenReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ExecOpenReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecOpenReportResponse")]
        System.IAsyncResult BeginExecOpenReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut EndExecOpenReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ExecUpgradeReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExecUpgradeReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecUpgradeReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ExecUpgradeReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut ExecUpgradeReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ExecUpgradeReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExecUpgradeReportResponse")]
        System.IAsyncResult BeginExecUpgradeReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut EndExecUpgradeReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation IsUserReportsDeveloper is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#IsUserReportsDeveloper", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsUserReportsDeveloperResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/IsUserReportsDeveloperTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut IsUserReportsDeveloper(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#IsUserReportsDeveloper", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsUserReportsDeveloperResponse")]
        System.IAsyncResult BeginIsUserReportsDeveloper(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut EndIsUserReportsDeveloper(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryRead is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryRead", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryReadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryReadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut QueryRead(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryRead", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryReadResponse")]
        System.IAsyncResult BeginQueryRead(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut EndQueryRead(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryExecute is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryExecute", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryExecuteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryExecuteTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut QueryExecute(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryExecute", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryExecuteResponse")]
        System.IAsyncResult BeginQueryExecute(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut EndQueryExecute(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryCall is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryCall", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryCallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryCallTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut QueryCall(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryCall", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryCallResponse")]
        System.IAsyncResult BeginQueryCall(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut EndQueryCall(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation UpdateOutputParametersEvenIfReportDoesNotFetchRecords is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#UpdateOutputParametersEvenIfReportDoesNotFetchRecords", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/UpdateOutputParametersEvenIfReportDoesNo" +
            "tFetchRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/UpdateOutputParametersEvenIfReportDoesNo" +
            "tFetchRecordsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut UpdateOutputParametersEvenIfReportDoesNotFetchRecords(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#UpdateOutputParametersEvenIfReportDoesNotFetchRecords", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/UpdateOutputParametersEvenIfReportDoesNo" +
            "tFetchRecordsResponse")]
        System.IAsyncResult BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SkipContext is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SkipContext", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/SkipContextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/SkipContextTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut SkipContext(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#SkipContext", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/SkipContextResponse")]
        System.IAsyncResult BeginSkipContext(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut EndSkipContext(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryReadOne is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryReadOne", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryReadOneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryReadOneTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut QueryReadOne(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryReadOne", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryReadOneResponse")]
        System.IAsyncResult BeginQueryReadOne(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut EndQueryReadOne(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QuerySetConnection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QuerySetConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QuerySetConnectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QuerySetConnectionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut QuerySetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QuerySetConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QuerySetConnectionResponse")]
        System.IAsyncResult BeginQuerySetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut EndQuerySetConnection(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QuerySetCursorType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QuerySetCursorType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QuerySetCursorTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QuerySetCursorTypeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut QuerySetCursorType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QuerySetCursorType", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QuerySetCursorTypeResponse")]
        System.IAsyncResult BeginQuerySetCursorType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut EndQuerySetCursorType(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetConnection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetConnectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetConnectionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut GetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetConnectionResponse")]
        System.IAsyncResult BeginGetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut EndGetConnection(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation OpenConnection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/OpenConnectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/OpenConnectionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut OpenConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#OpenConnection", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/OpenConnectionResponse")]
        System.IAsyncResult BeginOpenConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut EndOpenConnection(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionLockRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionLockRecord", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionLockRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionLockRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut ConnectionLockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionLockRecord", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionLockRecordResponse")]
        System.IAsyncResult BeginConnectionLockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut EndConnectionLockRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionUnlockRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionUnlockRecord", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut ConnectionUnlockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionUnlockRecord", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockRecordResponse")]
        System.IAsyncResult BeginConnectionUnlockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut EndConnectionUnlockRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ConnectionUnlockAll is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ConnectionUnlockAll", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockAllTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut ConnectionUnlockAll(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ConnectionUnlockAll", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ConnectionUnlockAllResponse")]
        System.IAsyncResult BeginConnectionUnlockAll(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut EndConnectionUnlockAll(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetRows is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetRows", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetRowsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut GetRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetRows", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetRowsResponse")]
        System.IAsyncResult BeginGetRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut EndGetRows(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetCurrentRow is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetCurrentRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetCurrentRowTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut GetCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetCurrentRowResponse")]
        System.IAsyncResult BeginGetCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut EndGetCurrentRow(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetReportPath is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetReportPath", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetReportPathTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut GetReportPath(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetReportPath", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportPathResponse")]
        System.IAsyncResult BeginGetReportPath(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut EndGetReportPath(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetReportNamespace is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetReportNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportNamespaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetReportNamespaceTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut GetReportNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetReportNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportNamespaceResponse")]
        System.IAsyncResult BeginGetReportNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut EndGetReportNamespace(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetReportName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetReportName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetReportNameTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut GetReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetReportName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportNameResponse")]
        System.IAsyncResult BeginGetReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut EndGetReportName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetReportModuleNamespace is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetReportModuleNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportModuleNamespaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetReportModuleNamespaceTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut GetReportModuleNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetReportModuleNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetReportModuleNamespaceResponse")]
        System.IAsyncResult BeginGetReportModuleNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut EndGetReportModuleNamespace(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetPrinterName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetPrinterName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetPrinterNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetPrinterNameTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut GetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetPrinterName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetPrinterNameResponse")]
        System.IAsyncResult BeginGetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut EndGetPrinterName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetOwnerNamespace is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetOwnerNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetOwnerNamespaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetOwnerNamespaceTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut GetOwnerNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetOwnerNamespace", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetOwnerNamespaceResponse")]
        System.IAsyncResult BeginGetOwnerNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut EndGetOwnerNamespace(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation IsAutoPrint is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#IsAutoPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsAutoPrintResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/IsAutoPrintTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut IsAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#IsAutoPrint", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/IsAutoPrintResponse")]
        System.IAsyncResult BeginIsAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut EndIsAutoPrint(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryOpen is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryOpen", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryOpenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryOpenTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut QueryOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryOpen", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryOpenResponse")]
        System.IAsyncResult BeginQueryOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut EndQueryOpen(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryIsOpen is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryIsOpen", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryIsOpenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryIsOpenTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut QueryIsOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryIsOpen", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryIsOpenResponse")]
        System.IAsyncResult BeginQueryIsOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut EndQueryIsOpen(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation QueryClose is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#QueryClose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryCloseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/QueryCloseTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut QueryClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#QueryClose", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/QueryCloseResponse")]
        System.IAsyncResult BeginQueryClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut EndQueryClose(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSend is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSend", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSendResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSendTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut MailSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSend", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSendResponse")]
        System.IAsyncResult BeginMailSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut EndMailSend(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSendEx is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSendEx", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSendExResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSendExTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut MailSendEx(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSendEx", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSendExResponse")]
        System.IAsyncResult BeginMailSendEx(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut EndMailSendEx(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetAttachmentReportName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetAttachmentReportName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentReportNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentReportNameTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut MailSetAttachmentReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetAttachmentReportName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentReportNameResponse")]
        System.IAsyncResult BeginMailSetAttachmentReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut EndMailSetAttachmentReportName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ReportSaveAs is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ReportSaveAs", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ReportSaveAsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ReportSaveAsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut ReportSaveAs(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ReportSaveAs", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ReportSaveAsResponse")]
        System.IAsyncResult BeginReportSaveAs(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut EndReportSaveAs(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/RunReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut RunReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunReport", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunReportResponse")]
        System.IAsyncResult BeginRunReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut EndRunReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunDocument", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/RunDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut RunDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunDocument", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunDocumentResponse")]
        System.IAsyncResult BeginRunDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut EndRunDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation BrowseDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#BrowseDocument", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/BrowseDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/BrowseDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut BrowseDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#BrowseDocument", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/BrowseDocumentResponse")]
        System.IAsyncResult BeginBrowseDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut EndBrowseDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunProgram is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunProgram", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunProgramResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/RunProgramTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut RunProgram(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunProgram", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/RunProgramResponse")]
        System.IAsyncResult BeginRunProgram(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut EndRunProgram(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ExpandTemplate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExpandTemplate", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExpandTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/ExpandTemplateTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut ExpandTemplate(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ExpandTemplate", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/ExpandTemplateResponse")]
        System.IAsyncResult BeginExpandTemplate(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut EndExpandTemplate(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetTableRows is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetTableRows", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetTableRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetTableRowsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut GetTableRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetTableRows", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetTableRowsResponse")]
        System.IAsyncResult BeginGetTableRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut EndGetTableRows(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetTableCurrentRow is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetTableCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetTableCurrentRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/GetTableCurrentRowTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut GetTableCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetTableCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/GetTableCurrentRowResponse")]
        System.IAsyncResult BeginGetTableCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut EndGetTableCurrentRow(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CurrentRowContainsCellTail is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CurrentRowContainsCellTail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellTailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellTailTBSoapFaultFau" +
            "lt", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut CurrentRowContainsCellTail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CurrentRowContainsCellTail", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellTailResponse")]
        System.IAsyncResult BeginCurrentRowContainsCellTail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut EndCurrentRowContainsCellTail(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CurrentRowContainsCellSubTotal is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CurrentRowContainsCellSubTotal", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellSubTotalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellSubTotalTBSoapFaul" +
            "tFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut CurrentRowContainsCellSubTotal(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CurrentRowContainsCellSubTotal", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/CurrentRowContainsCellSubTotalResponse")]
        System.IAsyncResult BeginCurrentRowContainsCellSubTotal(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut EndCurrentRowContainsCellSubTotal(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetFrom is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetFrom", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetFromResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetFromTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut MailSetFrom(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetFrom", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetFromResponse")]
        System.IAsyncResult BeginMailSetFrom(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut EndMailSetFrom(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetSubject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetSubject", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetSubjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetSubjectTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut MailSetSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetSubject", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetSubjectResponse")]
        System.IAsyncResult BeginMailSetSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut EndMailSetSubject(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetBody is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetBody", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut MailSetBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetBody", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyResponse")]
        System.IAsyncResult BeginMailSetBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut EndMailSetBody(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetMapiProfile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetMapiProfile", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetMapiProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetMapiProfileTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut MailSetMapiProfile(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetMapiProfile", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetMapiProfileResponse")]
        System.IAsyncResult BeginMailSetMapiProfile(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut EndMailSetMapiProfile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetBodyTemplateFileName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetBodyTemplateFileName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyTemplateFileNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyTemplateFileNameTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut MailSetBodyTemplateFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetBodyTemplateFileName", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyTemplateFileNameResponse")]
        System.IAsyncResult BeginMailSetBodyTemplateFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut EndMailSetBodyTemplateFileName(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetTo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetTo", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetToTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut MailSetTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetTo", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetToResponse")]
        System.IAsyncResult BeginMailSetTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut EndMailSetTo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetCc is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetCc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetCcResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetCcTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut MailSetCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetCc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetCcResponse")]
        System.IAsyncResult BeginMailSetCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut EndMailSetCc(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetBcc is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetBcc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBccResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetBccTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut MailSetBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetBcc", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBccResponse")]
        System.IAsyncResult BeginMailSetBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut EndMailSetBcc(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetToCertified is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetToCertified", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetToCertifiedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetToCertifiedTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut MailSetToCertified(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetToCertified", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetToCertifiedResponse")]
        System.IAsyncResult BeginMailSetToCertified(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut EndMailSetToCertified(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetCertifiedFilter is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetCertifiedFilter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetCertifiedFilterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetCertifiedFilterTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut MailSetCertifiedFilter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetCertifiedFilter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetCertifiedFilterResponse")]
        System.IAsyncResult BeginMailSetCertifiedFilter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut EndMailSetCertifiedFilter(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetAttachment is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetAttachment", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut MailSetAttachment(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetAttachment", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetAttachmentResponse")]
        System.IAsyncResult BeginMailSetAttachment(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut EndMailSetAttachment(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MailSetBodyParameter is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MailSetBodyParameter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyParameterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyParameterTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut MailSetBodyParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#MailSetBodyParameter", ReplyAction="urn:Microarea.Web.Services/TbWoormViewer/MailSetBodyParameterResponse")]
        System.IAsyncResult BeginMailSetBodyParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut EndMailSetBodyParameter(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetParamValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetParamValue", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetParamValue", Order=1)]
        public string paramName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetParamValue", Order=2)]
        public int value;
        
        public CWoormInfo_SetParamValueIn() {
        }
        
        public CWoormInfo_SetParamValueIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.paramName = paramName;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetParamValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetParamValueOut() {
        }
        
        public CWoormInfo_SetParamValueOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetUICultureIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetUICulture", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetUICulture", Order=1)]
        public string culture;
        
        public CWoormInfo_SetUICultureIn() {
        }
        
        public CWoormInfo_SetUICultureIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string culture) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.culture = culture;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetUICultureOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetUICultureOut() {
        }
        
        public CWoormInfo_SetUICultureOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPrinterNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPrinterName", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPrinterName", Order=1)]
        public string name;
        
        public CWoormInfo_SetPrinterNameIn() {
        }
        
        public CWoormInfo_SetPrinterNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string name) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPrinterNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetPrinterNameOut() {
        }
        
        public CWoormInfo_SetPrinterNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetExportOutputTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetExportOutputType", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetExportOutputType", Order=1)]
        public string expType;
        
        public CWoormInfo_SetExportOutputTypeIn() {
        }
        
        public CWoormInfo_SetExportOutputTypeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string expType) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.expType = expType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetExportOutputTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetExportOutputTypeOut() {
        }
        
        public CWoormInfo_SetExportOutputTypeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormDoc_CloseIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormDoc_Close", Order=0)]
        public int handle;
        
        public CWoormDoc_CloseIn() {
        }
        
        public CWoormDoc_CloseIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormDoc_CloseOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormDoc_Close", Order=0)]
        public bool @return;
        
        public CWoormDoc_CloseOut() {
        }
        
        public CWoormDoc_CloseOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormDoc_PrintIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormDoc_Print", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormDoc_Print", Order=1)]
        public bool bClose;
        
        public CWoormDoc_PrintIn() {
        }
        
        public CWoormDoc_PrintIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool bClose) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.bClose = bClose;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormDoc_PrintOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormDoc_Print", Order=0)]
        public bool @return;
        
        public CWoormDoc_PrintOut() {
        }
        
        public CWoormDoc_PrintOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetConcatPDFIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetConcatPDF", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetConcatPDF", Order=1)]
        public bool concatPDF;
        
        public CWoormInfo_SetConcatPDFIn() {
        }
        
        public CWoormInfo_SetConcatPDFIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool concatPDF) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.concatPDF = concatPDF;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetConcatPDFOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetConcatPDFOut() {
        }
        
        public CWoormInfo_SetConcatPDFOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPDFOutputIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPDFOutput", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPDFOutput", Order=1)]
        public bool PDFOutput;
        
        public CWoormInfo_SetPDFOutputIn() {
        }
        
        public CWoormInfo_SetPDFOutputIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutput) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.PDFOutput = PDFOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPDFOutputOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetPDFOutputOut() {
        }
        
        public CWoormInfo_SetPDFOutputOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPDFOutputPreviewIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPDFOutputPreview", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetPDFOutputPreview", Order=1)]
        public bool PDFOutputPreview;
        
        public CWoormInfo_SetPDFOutputPreviewIn() {
        }
        
        public CWoormInfo_SetPDFOutputPreviewIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutputPreview) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.PDFOutputPreview = PDFOutputPreview;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetPDFOutputPreviewOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetPDFOutputPreviewOut() {
        }
        
        public CWoormInfo_SetPDFOutputPreviewOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddOutputFileNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddOutputFileName", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddOutputFileName", Order=1)]
        public string fileName;
        
        public CWoormInfo_AddOutputFileNameIn() {
        }
        
        public CWoormInfo_AddOutputFileNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string fileName) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddOutputFileNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_AddOutputFileNameOut() {
        }
        
        public CWoormInfo_AddOutputFileNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetRDEOutputIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetRDEOutput", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetRDEOutput", Order=1)]
        public bool RDEOutput;
        
        public CWoormInfo_SetRDEOutputIn() {
        }
        
        public CWoormInfo_SetRDEOutputIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool RDEOutput) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.RDEOutput = RDEOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetRDEOutputOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetRDEOutputOut() {
        }
        
        public CWoormInfo_SetRDEOutputOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetExcelOutputIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetExcelOutput", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetExcelOutput", Order=1)]
        public bool ExcelOutput;
        
        public CWoormInfo_SetExcelOutputIn() {
        }
        
        public CWoormInfo_SetExcelOutputIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool ExcelOutput) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.ExcelOutput = ExcelOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetExcelOutputOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetExcelOutputOut() {
        }
        
        public CWoormInfo_SetExcelOutputOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailToIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailTo", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailTo", Order=1)]
        public string to;
        
        public CWoormInfo_MailToIn() {
        }
        
        public CWoormInfo_MailToIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string to) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.to = to;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailToOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailToOut() {
        }
        
        public CWoormInfo_MailToOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailCcIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailCc", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailCc", Order=1)]
        public string cc;
        
        public CWoormInfo_MailCcIn() {
        }
        
        public CWoormInfo_MailCcIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string cc) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.cc = cc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailCcOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailCcOut() {
        }
        
        public CWoormInfo_MailCcOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailBccIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailBcc", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailBcc", Order=1)]
        public string bcc;
        
        public CWoormInfo_MailBccIn() {
        }
        
        public CWoormInfo_MailBccIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string bcc) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.bcc = bcc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailBccOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailBccOut() {
        }
        
        public CWoormInfo_MailBccOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailAttachIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailAttach", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailAttach", Order=1)]
        public string file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailAttach", Order=2)]
        public string title;
        
        public CWoormInfo_MailAttachIn() {
        }
        
        public CWoormInfo_MailAttachIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string file, string title) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.file = file;
            this.title = title;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailAttachOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailAttachOut() {
        }
        
        public CWoormInfo_MailAttachOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailSubjectIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailSubject", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailSubject", Order=1)]
        public string subject;
        
        public CWoormInfo_MailSubjectIn() {
        }
        
        public CWoormInfo_MailSubjectIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string subject) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.subject = subject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailSubjectOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailSubjectOut() {
        }
        
        public CWoormInfo_MailSubjectOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailBodyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailBody", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailBody", Order=1)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_MailBody", Order=2)]
        public bool isHtml;
        
        public CWoormInfo_MailBodyIn() {
        }
        
        public CWoormInfo_MailBodyIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string body, bool isHtml) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.body = body;
            this.isHtml = isHtml;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_MailBodyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_MailBodyOut() {
        }
        
        public CWoormInfo_MailBodyOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddParameterIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddParameter", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddParameter", Order=1)]
        public string paramName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddParameter", Order=2)]
        public int value;
        
        public CWoormInfo_AddParameterIn() {
        }
        
        public CWoormInfo_AddParameterIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.paramName = paramName;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddParameterOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_AddParameterOut() {
        }
        
        public CWoormInfo_AddParameterOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetCloseOnEndPrintIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetCloseOnEndPrint", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetCloseOnEndPrint", Order=1)]
        public bool closeOnEndPrint;
        
        public CWoormInfo_SetCloseOnEndPrintIn() {
        }
        
        public CWoormInfo_SetCloseOnEndPrintIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool closeOnEndPrint) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.closeOnEndPrint = closeOnEndPrint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetCloseOnEndPrintOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetCloseOnEndPrintOut() {
        }
        
        public CWoormInfo_SetCloseOnEndPrintOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetIconizedIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetIconized", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetIconized", Order=1)]
        public bool iconized;
        
        public CWoormInfo_SetIconizedIn() {
        }
        
        public CWoormInfo_SetIconizedIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool iconized) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.iconized = iconized;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetIconizedOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetIconizedOut() {
        }
        
        public CWoormInfo_SetIconizedOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetHideFrameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetHideFrame", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetHideFrame", Order=1)]
        public bool hideFrame;
        
        public CWoormInfo_SetHideFrameIn() {
        }
        
        public CWoormInfo_SetHideFrameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool hideFrame) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.hideFrame = hideFrame;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetHideFrameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetHideFrameOut() {
        }
        
        public CWoormInfo_SetHideFrameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetSilentModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetSilentMode", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetSilentMode", Order=1)]
        public bool silent;
        
        public CWoormInfo_SetSilentModeIn() {
        }
        
        public CWoormInfo_SetSilentModeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool silent) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.silent = silent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetSilentModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetSilentModeOut() {
        }
        
        public CWoormInfo_SetSilentModeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetSendEmailIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetSendEmail", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetSendEmail", Order=1)]
        public bool sendEmail;
        
        public CWoormInfo_SetSendEmailIn() {
        }
        
        public CWoormInfo_SetSendEmailIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool sendEmail) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.sendEmail = sendEmail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetSendEmailOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetSendEmailOut() {
        }
        
        public CWoormInfo_SetSendEmailOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachRDEIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachRDE", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachRDE", Order=1)]
        public bool attachRDE;
        
        public CWoormInfo_SetAttachRDEIn() {
        }
        
        public CWoormInfo_SetAttachRDEIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachRDE) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.attachRDE = attachRDE;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachRDEOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetAttachRDEOut() {
        }
        
        public CWoormInfo_SetAttachRDEOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachPDFIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachPDF", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachPDF", Order=1)]
        public bool attachPDF;
        
        public CWoormInfo_SetAttachPDFIn() {
        }
        
        public CWoormInfo_SetAttachPDFIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachPDF) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.attachPDF = attachPDF;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachPDFOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetAttachPDFOut() {
        }
        
        public CWoormInfo_SetAttachPDFOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachOtherIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachOther", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachOther", Order=1)]
        public bool attachOther;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAttachOther", Order=2)]
        public string expType;
        
        public CWoormInfo_SetAttachOtherIn() {
        }
        
        public CWoormInfo_SetAttachOtherIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachOther, string expType) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.attachOther = attachOther;
            this.expType = expType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAttachOtherOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetAttachOtherOut() {
        }
        
        public CWoormInfo_SetAttachOtherOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetArchivePdfFormatIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetArchivePdfFormat", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetArchivePdfFormat", Order=1)]
        public bool archive;
        
        public CWoormInfo_SetArchivePdfFormatIn() {
        }
        
        public CWoormInfo_SetArchivePdfFormatIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool archive) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.archive = archive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetArchivePdfFormatOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetArchivePdfFormatOut() {
        }
        
        public CWoormInfo_SetArchivePdfFormatOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetCompressAttachIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetCompressAttach", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetCompressAttach", Order=1)]
        public bool compressAttach;
        
        public CWoormInfo_SetCompressAttachIn() {
        }
        
        public CWoormInfo_SetCompressAttachIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool compressAttach) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.compressAttach = compressAttach;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetCompressAttachOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetCompressAttachOut() {
        }
        
        public CWoormInfo_SetCompressAttachOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetOnePrintDialogIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetOnePrintDialog", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetOnePrintDialog", Order=1)]
        public bool onePrintDialog;
        
        public CWoormInfo_SetOnePrintDialogIn() {
        }
        
        public CWoormInfo_SetOnePrintDialogIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool onePrintDialog) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.onePrintDialog = onePrintDialog;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetOnePrintDialogOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetOnePrintDialogOut() {
        }
        
        public CWoormInfo_SetOnePrintDialogOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetUniqueMailIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetUniqueMail", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetUniqueMail", Order=1)]
        public bool uniqueMail;
        
        public CWoormInfo_SetUniqueMailIn() {
        }
        
        public CWoormInfo_SetUniqueMailIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool uniqueMail) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.uniqueMail = uniqueMail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetUniqueMailOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetUniqueMailOut() {
        }
        
        public CWoormInfo_SetUniqueMailOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentMethodsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentMethods", Order=0)]
        public int handleDoc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentMethods", Order=1)]
        public string[] arMethods;
        
        public GetDocumentMethodsIn() {
        }
        
        public GetDocumentMethodsIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handleDoc, string[] arMethods) {
            this.HeaderInfo = HeaderInfo;
            this.handleDoc = handleDoc;
            this.arMethods = arMethods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentMethodsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentMethods", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentMethods", Order=1)]
        public string[] arMethods;
        
        public GetDocumentMethodsOut() {
        }
        
        public GetDocumentMethodsOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return, string[] arMethods) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.arMethods = arMethods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsPostaLiteEnabledIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public IsPostaLiteEnabledIn() {
        }
        
        public IsPostaLiteEnabledIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsPostaLiteEnabledOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.IsPostaLiteEnabled", Order=0)]
        public bool @return;
        
        public IsPostaLiteEnabledOut() {
        }
        
        public IsPostaLiteEnabledOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeDeliveryTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeDeliveryType", Order=0)]
        public int deliveryType;
        
        public PostaLiteDecodeDeliveryTypeIn() {
        }
        
        public PostaLiteDecodeDeliveryTypeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int deliveryType) {
            this.HeaderInfo = HeaderInfo;
            this.deliveryType = deliveryType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeDeliveryTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeDeliveryType", Order=0)]
        public string @return;
        
        public PostaLiteDecodeDeliveryTypeOut() {
        }
        
        public PostaLiteDecodeDeliveryTypeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodePrintTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodePrintType", Order=0)]
        public int printType;
        
        public PostaLiteDecodePrintTypeIn() {
        }
        
        public PostaLiteDecodePrintTypeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int printType) {
            this.HeaderInfo = HeaderInfo;
            this.printType = printType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodePrintTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodePrintType", Order=0)]
        public string @return;
        
        public PostaLiteDecodePrintTypeOut() {
        }
        
        public PostaLiteDecodePrintTypeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeStatusIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeStatus", Order=0)]
        public int status;
        
        public PostaLiteDecodeStatusIn() {
        }
        
        public PostaLiteDecodeStatusIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            this.HeaderInfo = HeaderInfo;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeStatusOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeStatus", Order=0)]
        public string @return;
        
        public PostaLiteDecodeStatusOut() {
        }
        
        public PostaLiteDecodeStatusOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeCodeStateIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeCodeState", Order=0)]
        public int codeState;
        
        public PostaLiteDecodeCodeStateIn() {
        }
        
        public PostaLiteDecodeCodeStateIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int codeState) {
            this.HeaderInfo = HeaderInfo;
            this.codeState = codeState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeCodeStateOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeCodeState", Order=0)]
        public string @return;
        
        public PostaLiteDecodeCodeStateOut() {
        }
        
        public PostaLiteDecodeCodeStateOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeStatusExtIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeStatusExt", Order=0)]
        public int status;
        
        public PostaLiteDecodeStatusExtIn() {
        }
        
        public PostaLiteDecodeStatusExtIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            this.HeaderInfo = HeaderInfo;
            this.status = status;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeStatusExtOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeStatusExt", Order=0)]
        public string @return;
        
        public PostaLiteDecodeStatusExtOut() {
        }
        
        public PostaLiteDecodeStatusExtOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeErrorExtIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeErrorExt", Order=0)]
        public int error;
        
        public PostaLiteDecodeErrorExtIn() {
        }
        
        public PostaLiteDecodeErrorExtIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int error) {
            this.HeaderInfo = HeaderInfo;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteDecodeErrorExtOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteDecodeErrorExt", Order=0)]
        public string @return;
        
        public PostaLiteDecodeErrorExtOut() {
        }
        
        public PostaLiteDecodeErrorExtOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_CreateIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_Create", Order=0)]
        public string reportNamespace;
        
        public CWoormInfo_CreateIn() {
        }
        
        public CWoormInfo_CreateIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNamespace) {
            this.HeaderInfo = HeaderInfo;
            this.reportNamespace = reportNamespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_CreateOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_Create", Order=0)]
        public int @return;
        
        public CWoormInfo_CreateOut() {
        }
        
        public CWoormInfo_CreateOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_DisposeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_Dispose", Order=0)]
        public int handle;
        
        public CWoormInfo_DisposeIn() {
        }
        
        public CWoormInfo_DisposeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_DisposeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_Dispose", Order=0)]
        public bool @return;
        
        public CWoormInfo_DisposeOut() {
        }
        
        public CWoormInfo_DisposeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddReport", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_AddReport", Order=1)]
        public string reportNamespace;
        
        public CWoormInfo_AddReportIn() {
        }
        
        public CWoormInfo_AddReportIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.reportNamespace = reportNamespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_AddReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_AddReportOut() {
        }
        
        public CWoormInfo_AddReportOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAutoPrintIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAutoPrint", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetAutoPrint", Order=1)]
        public bool autoPrint;
        
        public CWoormInfo_SetAutoPrintIn() {
        }
        
        public CWoormInfo_SetAutoPrintIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool autoPrint) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.autoPrint = autoPrint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetAutoPrintOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetAutoPrintOut() {
        }
        
        public CWoormInfo_SetAutoPrintOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetNoPrintDialogIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetNoPrintDialog", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CWoormInfo_SetNoPrintDialog", Order=1)]
        public bool noPrintDialog;
        
        public CWoormInfo_SetNoPrintDialogIn() {
        }
        
        public CWoormInfo_SetNoPrintDialogIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool noPrintDialog) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.noPrintDialog = noPrintDialog;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CWoormInfo_SetNoPrintDialogOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public CWoormInfo_SetNoPrintDialogOut() {
        }
        
        public CWoormInfo_SetNoPrintDialogOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionBeginTransIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionBeginTrans", Order=0)]
        public int Connection;
        
        public ConnectionBeginTransIn() {
        }
        
        public ConnectionBeginTransIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionBeginTransOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionBeginTrans", Order=0)]
        public bool @return;
        
        public ConnectionBeginTransOut() {
        }
        
        public ConnectionBeginTransOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionCommitIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionCommit", Order=0)]
        public int Connection;
        
        public ConnectionCommitIn() {
        }
        
        public ConnectionCommitIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionCommitOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionCommit", Order=0)]
        public bool @return;
        
        public ConnectionCommitOut() {
        }
        
        public ConnectionCommitOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionRollbackIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionRollback", Order=0)]
        public int Connection;
        
        public ConnectionRollbackIn() {
        }
        
        public ConnectionRollbackIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionRollbackOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionRollback", Order=0)]
        public bool @return;
        
        public ConnectionRollbackOut() {
        }
        
        public ConnectionRollbackOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionCloseIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionClose", Order=0)]
        public int Connection;
        
        public ConnectionCloseIn() {
        }
        
        public ConnectionCloseIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionCloseOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionClose", Order=0)]
        public bool @return;
        
        public ConnectionCloseOut() {
        }
        
        public ConnectionCloseOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSetAddresseeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=0)]
        public string Addressee;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=1)]
        public string Address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=2)]
        public string City;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=3)]
        public string County;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=4)]
        public string Country;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=5)]
        public string ZipCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=6)]
        public string Fax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=7)]
        public string ISOCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=8)]
        public bool append;
        
        public PostaLiteSetAddresseeIn() {
        }
        
        public PostaLiteSetAddresseeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Addressee, string Address, string City, string County, string Country, string ZipCode, string Fax, string ISOCode, bool append) {
            this.HeaderInfo = HeaderInfo;
            this.Addressee = Addressee;
            this.Address = Address;
            this.City = City;
            this.County = County;
            this.Country = Country;
            this.ZipCode = ZipCode;
            this.Fax = Fax;
            this.ISOCode = ISOCode;
            this.append = append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSetAddresseeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetAddressee", Order=0)]
        public bool @return;
        
        public PostaLiteSetAddresseeOut() {
        }
        
        public PostaLiteSetAddresseeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSetSendTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetSendType", Order=0)]
        public int DeliveryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetSendType", Order=1)]
        public int PrintType;
        
        public PostaLiteSetSendTypeIn() {
        }
        
        public PostaLiteSetSendTypeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            this.HeaderInfo = HeaderInfo;
            this.DeliveryType = DeliveryType;
            this.PrintType = PrintType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSetSendTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSetSendType", Order=0)]
        public bool @return;
        
        public PostaLiteSetSendTypeOut() {
        }
        
        public PostaLiteSetSendTypeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSendIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSend", Order=0)]
        public int DeliveryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSend", Order=1)]
        public int PrintType;
        
        public PostaLiteSendIn() {
        }
        
        public PostaLiteSendIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            this.HeaderInfo = HeaderInfo;
            this.DeliveryType = DeliveryType;
            this.PrintType = PrintType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PostaLiteSendOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.PostaLiteSend", Order=0)]
        public bool @return;
        
        public PostaLiteSendOut() {
        }
        
        public PostaLiteSendOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendMailIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=1)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=2)]
        public string Cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=3)]
        public string Bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=4)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=5)]
        public string Body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=6)]
        public string Attachments;
        
        public SendMailIn() {
        }
        
        public SendMailIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, string To, string Cc, string Bcc, string Subject, string Body, string Attachments) {
            this.HeaderInfo = HeaderInfo;
            this.From = From;
            this.To = To;
            this.Cc = Cc;
            this.Bcc = Bcc;
            this.Subject = Subject;
            this.Body = Body;
            this.Attachments = Attachments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendMailOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SendMail", Order=0)]
        public bool @return;
        
        public SendMailOut() {
        }
        
        public SendMailOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecNewReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecNewReport", Order=0)]
        public int docHandle;
        
        public ExecNewReportIn() {
        }
        
        public ExecNewReportIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle) {
            this.HeaderInfo = HeaderInfo;
            this.docHandle = docHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecNewReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecNewReport", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecNewReport", Order=1)]
        public int docHandle;
        
        public ExecNewReportOut() {
        }
        
        public ExecNewReportOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return, int docHandle) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.docHandle = docHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecOpenReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecOpenReport", Order=0)]
        public string reportNameSpace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecOpenReport", Order=1)]
        public int docHandle;
        
        public ExecOpenReportIn() {
        }
        
        public ExecOpenReportIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNameSpace, int docHandle) {
            this.HeaderInfo = HeaderInfo;
            this.reportNameSpace = reportNameSpace;
            this.docHandle = docHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecOpenReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecOpenReport", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecOpenReport", Order=1)]
        public int docHandle;
        
        public ExecOpenReportOut() {
        }
        
        public ExecOpenReportOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return, int docHandle) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.docHandle = docHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecUpgradeReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public ExecUpgradeReportIn() {
        }
        
        public ExecUpgradeReportIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecUpgradeReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExecUpgradeReport", Order=0)]
        public bool @return;
        
        public ExecUpgradeReportOut() {
        }
        
        public ExecUpgradeReportOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsUserReportsDeveloperIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public IsUserReportsDeveloperIn() {
        }
        
        public IsUserReportsDeveloperIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsUserReportsDeveloperOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.IsUserReportsDeveloper", Order=0)]
        public bool @return;
        
        public IsUserReportsDeveloperOut() {
        }
        
        public IsUserReportsDeveloperOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryReadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryRead", Order=0)]
        public string queryName;
        
        public QueryReadIn() {
        }
        
        public QueryReadIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryReadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryRead", Order=0)]
        public bool @return;
        
        public QueryReadOut() {
        }
        
        public QueryReadOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryExecuteIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryExecute", Order=0)]
        public string queryName;
        
        public QueryExecuteIn() {
        }
        
        public QueryExecuteIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryExecuteOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryExecute", Order=0)]
        public bool @return;
        
        public QueryExecuteOut() {
        }
        
        public QueryExecuteOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryCallIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryCall", Order=0)]
        public string queryName;
        
        public QueryCallIn() {
        }
        
        public QueryCallIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryCallOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryCall", Order=0)]
        public bool @return;
        
        public QueryCallOut() {
        }
        
        public QueryCallOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn() {
        }
        
        public UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.UpdateOutputParametersEvenIfReportDoesNotFetchRecords", Order=0)]
        public bool @return;
        
        public UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut() {
        }
        
        public UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SkipContextIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public SkipContextIn() {
        }
        
        public SkipContextIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SkipContextOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SkipContext", Order=0)]
        public bool @return;
        
        public SkipContextOut() {
        }
        
        public SkipContextOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryReadOneIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryReadOne", Order=0)]
        public string queryName;
        
        public QueryReadOneIn() {
        }
        
        public QueryReadOneIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryReadOneOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryReadOne", Order=0)]
        public bool @return;
        
        public QueryReadOneOut() {
        }
        
        public QueryReadOneOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerySetConnectionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetConnection", Order=0)]
        public string queryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetConnection", Order=1)]
        public int connection;
        
        public QuerySetConnectionIn() {
        }
        
        public QuerySetConnectionIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int connection) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
            this.connection = connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerySetConnectionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetConnection", Order=0)]
        public bool @return;
        
        public QuerySetConnectionOut() {
        }
        
        public QuerySetConnectionOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerySetCursorTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetCursorType", Order=0)]
        public string queryName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetCursorType", Order=1)]
        public int cursor;
        
        public QuerySetCursorTypeIn() {
        }
        
        public QuerySetCursorTypeIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int cursor) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
            this.cursor = cursor;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QuerySetCursorTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QuerySetCursorType", Order=0)]
        public bool @return;
        
        public QuerySetCursorTypeOut() {
        }
        
        public QuerySetCursorTypeOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetConnectionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetConnection", Order=0)]
        public int ownerid;
        
        public GetConnectionIn() {
        }
        
        public GetConnectionIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int ownerid) {
            this.HeaderInfo = HeaderInfo;
            this.ownerid = ownerid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetConnectionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetConnection", Order=0)]
        public int @return;
        
        public GetConnectionOut() {
        }
        
        public GetConnectionOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenConnectionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenConnection", Order=0)]
        public string connectionString;
        
        public OpenConnectionIn() {
        }
        
        public OpenConnectionIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string connectionString) {
            this.HeaderInfo = HeaderInfo;
            this.connectionString = connectionString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenConnectionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenConnection", Order=0)]
        public int @return;
        
        public OpenConnectionOut() {
        }
        
        public OpenConnectionOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionLockRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionLockRecord", Order=0)]
        public int Connection;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionLockRecord", Order=1)]
        public string Table;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionLockRecord", Order=2)]
        public string LockKeyMsg;
        
        public ConnectionLockRecordIn() {
        }
        
        public ConnectionLockRecordIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, string LockKeyMsg) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
            this.Table = Table;
            this.LockKeyMsg = LockKeyMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionLockRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionLockRecord", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionLockRecord", Order=1)]
        public string LockKeyMsg;
        
        public ConnectionLockRecordOut() {
        }
        
        public ConnectionLockRecordOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return, string LockKeyMsg) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.LockKeyMsg = LockKeyMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionUnlockRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionUnlockRecord", Order=0)]
        public int Connection;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionUnlockRecord", Order=1)]
        public string Table;
        
        public ConnectionUnlockRecordIn() {
        }
        
        public ConnectionUnlockRecordIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
            this.Table = Table;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionUnlockRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionUnlockRecord", Order=0)]
        public bool @return;
        
        public ConnectionUnlockRecordOut() {
        }
        
        public ConnectionUnlockRecordOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionUnlockAllIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionUnlockAll", Order=0)]
        public int Connection;
        
        public ConnectionUnlockAllIn() {
        }
        
        public ConnectionUnlockAllIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.HeaderInfo = HeaderInfo;
            this.Connection = Connection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConnectionUnlockAllOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ConnectionUnlockAll", Order=0)]
        public bool @return;
        
        public ConnectionUnlockAllOut() {
        }
        
        public ConnectionUnlockAllOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRowsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetRows", Order=0)]
        public int id;
        
        public GetRowsIn() {
        }
        
        public GetRowsIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            this.HeaderInfo = HeaderInfo;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRowsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetRows", Order=0)]
        public int @return;
        
        public GetRowsOut() {
        }
        
        public GetRowsOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentRowIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentRow", Order=0)]
        public int id;
        
        public GetCurrentRowIn() {
        }
        
        public GetCurrentRowIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            this.HeaderInfo = HeaderInfo;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentRowOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentRow", Order=0)]
        public int @return;
        
        public GetCurrentRowOut() {
        }
        
        public GetCurrentRowOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportPathIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public GetReportPathIn() {
        }
        
        public GetReportPathIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportPathOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportPath", Order=0)]
        public string @return;
        
        public GetReportPathOut() {
        }
        
        public GetReportPathOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportNamespaceIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public GetReportNamespaceIn() {
        }
        
        public GetReportNamespaceIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportNamespaceOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportNamespace", Order=0)]
        public string @return;
        
        public GetReportNamespaceOut() {
        }
        
        public GetReportNamespaceOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportName", Order=0)]
        public bool StripExtension;
        
        public GetReportNameIn() {
        }
        
        public GetReportNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool StripExtension) {
            this.HeaderInfo = HeaderInfo;
            this.StripExtension = StripExtension;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportName", Order=0)]
        public string @return;
        
        public GetReportNameOut() {
        }
        
        public GetReportNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportModuleNamespaceIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public GetReportModuleNamespaceIn() {
        }
        
        public GetReportModuleNamespaceIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportModuleNamespaceOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportModuleNamespace", Order=0)]
        public string @return;
        
        public GetReportModuleNamespaceOut() {
        }
        
        public GetReportModuleNamespaceOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPrinterNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public GetPrinterNameIn() {
        }
        
        public GetPrinterNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPrinterNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetPrinterName", Order=0)]
        public string @return;
        
        public GetPrinterNameOut() {
        }
        
        public GetPrinterNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOwnerNamespaceIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetOwnerNamespace", Order=0)]
        public int docHandle;
        
        public GetOwnerNamespaceIn() {
        }
        
        public GetOwnerNamespaceIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle) {
            this.HeaderInfo = HeaderInfo;
            this.docHandle = docHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOwnerNamespaceOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetOwnerNamespace", Order=0)]
        public string @return;
        
        public GetOwnerNamespaceOut() {
        }
        
        public GetOwnerNamespaceOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsAutoPrintIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        public IsAutoPrintIn() {
        }
        
        public IsAutoPrintIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsAutoPrintOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.IsAutoPrint", Order=0)]
        public bool @return;
        
        public IsAutoPrintOut() {
        }
        
        public IsAutoPrintOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryOpenIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryOpen", Order=0)]
        public string queryName;
        
        public QueryOpenIn() {
        }
        
        public QueryOpenIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryOpenOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryOpen", Order=0)]
        public bool @return;
        
        public QueryOpenOut() {
        }
        
        public QueryOpenOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryIsOpenIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryIsOpen", Order=0)]
        public string queryName;
        
        public QueryIsOpenIn() {
        }
        
        public QueryIsOpenIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryIsOpenOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryIsOpen", Order=0)]
        public bool @return;
        
        public QueryIsOpenOut() {
        }
        
        public QueryIsOpenOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryCloseIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryClose", Order=0)]
        public string queryName;
        
        public QueryCloseIn() {
        }
        
        public QueryCloseIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.HeaderInfo = HeaderInfo;
            this.queryName = queryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class QueryCloseOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.QueryClose", Order=0)]
        public bool @return;
        
        public QueryCloseOut() {
        }
        
        public QueryCloseOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSendIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSend", Order=0)]
        public bool AttachRDE;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSend", Order=1)]
        public bool AttachPDF;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSend", Order=2)]
        public bool Compress;
        
        public MailSendIn() {
        }
        
        public MailSendIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool AttachRDE, bool AttachPDF, bool Compress) {
            this.HeaderInfo = HeaderInfo;
            this.AttachRDE = AttachRDE;
            this.AttachPDF = AttachPDF;
            this.Compress = Compress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSendOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSend", Order=0)]
        public bool @return;
        
        public MailSendOut() {
        }
        
        public MailSendOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSendExIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSendEx", Order=0)]
        public string exportType;
        
        public MailSendExIn() {
        }
        
        public MailSendExIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string exportType) {
            this.HeaderInfo = HeaderInfo;
            this.exportType = exportType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSendExOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSendEx", Order=0)]
        public bool @return;
        
        public MailSendExOut() {
        }
        
        public MailSendExOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetAttachmentReportNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachmentReportName", Order=0)]
        public string AttachmentReportName;
        
        public MailSetAttachmentReportNameIn() {
        }
        
        public MailSetAttachmentReportNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string AttachmentReportName) {
            this.HeaderInfo = HeaderInfo;
            this.AttachmentReportName = AttachmentReportName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetAttachmentReportNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachmentReportName", Order=0)]
        public bool @return;
        
        public MailSetAttachmentReportNameOut() {
        }
        
        public MailSetAttachmentReportNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportSaveAsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ReportSaveAs", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ReportSaveAs", Order=1)]
        public string exportType;
        
        public ReportSaveAsIn() {
        }
        
        public ReportSaveAsIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string fileName, string exportType) {
            this.HeaderInfo = HeaderInfo;
            this.fileName = fileName;
            this.exportType = exportType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportSaveAsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ReportSaveAs", Order=0)]
        public bool @return;
        
        public ReportSaveAsOut() {
        }
        
        public ReportSaveAsOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReport", Order=0)]
        public string Namespace;
        
        public RunReportIn() {
        }
        
        public RunReportIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            this.HeaderInfo = HeaderInfo;
            this.Namespace = Namespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReport", Order=0)]
        public bool @return;
        
        public RunReportOut() {
        }
        
        public RunReportOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocument", Order=0)]
        public string Namespace;
        
        public RunDocumentIn() {
        }
        
        public RunDocumentIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            this.HeaderInfo = HeaderInfo;
            this.Namespace = Namespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocument", Order=0)]
        public int @return;
        
        public RunDocumentOut() {
        }
        
        public RunDocumentOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BrowseDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.BrowseDocument", Order=0)]
        public int handle;
        
        public BrowseDocumentIn() {
        }
        
        public BrowseDocumentIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BrowseDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.BrowseDocument", Order=0)]
        public bool @return;
        
        public BrowseDocumentOut() {
        }
        
        public BrowseDocumentOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunProgramIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunProgram", Order=0)]
        public string cmd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunProgram", Order=1)]
        public string cmdLine;
        
        public RunProgramIn() {
        }
        
        public RunProgramIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string cmd, string cmdLine) {
            this.HeaderInfo = HeaderInfo;
            this.cmd = cmd;
            this.cmdLine = cmdLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunProgramOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunProgram", Order=0)]
        public bool @return;
        
        public RunProgramOut() {
        }
        
        public RunProgramOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpandTemplateIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExpandTemplate", Order=0)]
        public string sourceNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExpandTemplate", Order=1)]
        public string targetNamespace;
        
        public ExpandTemplateIn() {
        }
        
        public ExpandTemplateIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string sourceNamespace, string targetNamespace) {
            this.HeaderInfo = HeaderInfo;
            this.sourceNamespace = sourceNamespace;
            this.targetNamespace = targetNamespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExpandTemplateOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExpandTemplate", Order=0)]
        public bool @return;
        
        public ExpandTemplateOut() {
        }
        
        public ExpandTemplateOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableRowsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetTableRows", Order=0)]
        public string TableName;
        
        public GetTableRowsIn() {
        }
        
        public GetTableRowsIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.HeaderInfo = HeaderInfo;
            this.TableName = TableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableRowsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetTableRows", Order=0)]
        public int @return;
        
        public GetTableRowsOut() {
        }
        
        public GetTableRowsOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableCurrentRowIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetTableCurrentRow", Order=0)]
        public string TableName;
        
        public GetTableCurrentRowIn() {
        }
        
        public GetTableCurrentRowIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.HeaderInfo = HeaderInfo;
            this.TableName = TableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTableCurrentRowOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetTableCurrentRow", Order=0)]
        public int @return;
        
        public GetTableCurrentRowOut() {
        }
        
        public GetTableCurrentRowOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentRowContainsCellTailIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CurrentRowContainsCellTail", Order=0)]
        public string TableName;
        
        public CurrentRowContainsCellTailIn() {
        }
        
        public CurrentRowContainsCellTailIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.HeaderInfo = HeaderInfo;
            this.TableName = TableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentRowContainsCellTailOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CurrentRowContainsCellTail", Order=0)]
        public bool @return;
        
        public CurrentRowContainsCellTailOut() {
        }
        
        public CurrentRowContainsCellTailOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentRowContainsCellSubTotalIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CurrentRowContainsCellSubTotal", Order=0)]
        public string TableName;
        
        public CurrentRowContainsCellSubTotalIn() {
        }
        
        public CurrentRowContainsCellSubTotalIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.HeaderInfo = HeaderInfo;
            this.TableName = TableName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CurrentRowContainsCellSubTotalOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CurrentRowContainsCellSubTotal", Order=0)]
        public bool @return;
        
        public CurrentRowContainsCellSubTotalOut() {
        }
        
        public CurrentRowContainsCellSubTotalOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetFromIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetFrom", Order=0)]
        public string From;
        
        public MailSetFromIn() {
        }
        
        public MailSetFromIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From) {
            this.HeaderInfo = HeaderInfo;
            this.From = From;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetFromOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetFrom", Order=0)]
        public bool @return;
        
        public MailSetFromOut() {
        }
        
        public MailSetFromOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetSubjectIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetSubject", Order=0)]
        public string Subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetSubject", Order=1)]
        public bool Append;
        
        public MailSetSubjectIn() {
        }
        
        public MailSetSubjectIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Subject, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.Subject = Subject;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetSubjectOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetSubject", Order=0)]
        public bool @return;
        
        public MailSetSubjectOut() {
        }
        
        public MailSetSubjectOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBody", Order=0)]
        public string Body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBody", Order=1)]
        public bool Append;
        
        public MailSetBodyIn() {
        }
        
        public MailSetBodyIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Body, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.Body = Body;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBody", Order=0)]
        public bool @return;
        
        public MailSetBodyOut() {
        }
        
        public MailSetBodyOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetMapiProfileIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetMapiProfile", Order=0)]
        public string MapiProfile;
        
        public MailSetMapiProfileIn() {
        }
        
        public MailSetMapiProfileIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string MapiProfile) {
            this.HeaderInfo = HeaderInfo;
            this.MapiProfile = MapiProfile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetMapiProfileOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetMapiProfile", Order=0)]
        public bool @return;
        
        public MailSetMapiProfileOut() {
        }
        
        public MailSetMapiProfileOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyTemplateFileNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBodyTemplateFileName", Order=0)]
        public string BodyTemplateFileName;
        
        public MailSetBodyTemplateFileNameIn() {
        }
        
        public MailSetBodyTemplateFileNameIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string BodyTemplateFileName) {
            this.HeaderInfo = HeaderInfo;
            this.BodyTemplateFileName = BodyTemplateFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyTemplateFileNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBodyTemplateFileName", Order=0)]
        public bool @return;
        
        public MailSetBodyTemplateFileNameOut() {
        }
        
        public MailSetBodyTemplateFileNameOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetToIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetTo", Order=0)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetTo", Order=1)]
        public bool Append;
        
        public MailSetToIn() {
        }
        
        public MailSetToIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.To = To;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetToOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetTo", Order=0)]
        public bool @return;
        
        public MailSetToOut() {
        }
        
        public MailSetToOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetCcIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetCc", Order=0)]
        public string Cc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetCc", Order=1)]
        public bool Append;
        
        public MailSetCcIn() {
        }
        
        public MailSetCcIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Cc, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.Cc = Cc;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetCcOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetCc", Order=0)]
        public bool @return;
        
        public MailSetCcOut() {
        }
        
        public MailSetCcOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBccIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBcc", Order=0)]
        public string Bcc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBcc", Order=1)]
        public bool Append;
        
        public MailSetBccIn() {
        }
        
        public MailSetBccIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Bcc, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.Bcc = Bcc;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBccOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBcc", Order=0)]
        public bool @return;
        
        public MailSetBccOut() {
        }
        
        public MailSetBccOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetToCertifiedIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetToCertified", Order=0)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetToCertified", Order=1)]
        public bool Append;
        
        public MailSetToCertifiedIn() {
        }
        
        public MailSetToCertifiedIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.To = To;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetToCertifiedOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetToCertified", Order=0)]
        public bool @return;
        
        public MailSetToCertifiedOut() {
        }
        
        public MailSetToCertifiedOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetCertifiedFilterIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetCertifiedFilter", Order=0)]
        public int Filter;
        
        public MailSetCertifiedFilterIn() {
        }
        
        public MailSetCertifiedFilterIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Filter) {
            this.HeaderInfo = HeaderInfo;
            this.Filter = Filter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetCertifiedFilterOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetCertifiedFilter", Order=0)]
        public bool @return;
        
        public MailSetCertifiedFilterOut() {
        }
        
        public MailSetCertifiedFilterOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetAttachmentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachment", Order=0)]
        public string Attachment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachment", Order=1)]
        public string AttachmentTitle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachment", Order=2)]
        public bool Append;
        
        public MailSetAttachmentIn() {
        }
        
        public MailSetAttachmentIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Attachment, string AttachmentTitle, bool Append) {
            this.HeaderInfo = HeaderInfo;
            this.Attachment = Attachment;
            this.AttachmentTitle = AttachmentTitle;
            this.Append = Append;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetAttachmentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetAttachment", Order=0)]
        public bool @return;
        
        public MailSetAttachmentOut() {
        }
        
        public MailSetAttachmentOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyParameterIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBodyParameter", Order=0)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBodyParameter", Order=1)]
        public string Value;
        
        public MailSetBodyParameterIn() {
        }
        
        public MailSetBodyParameterIn(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Name, string Value) {
            this.HeaderInfo = HeaderInfo;
            this.Name = Name;
            this.Value = Value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MailSetBodyParameterOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MailSetBodyParameter", Order=0)]
        public bool @return;
        
        public MailSetBodyParameterOut() {
        }
        
        public MailSetBodyParameterOut(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TbWoormViewerChannel : Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetParamValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetParamValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetUICultureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetUICultureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetPrinterNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetPrinterNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetExportOutputTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetExportOutputTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormDoc_CloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormDoc_CloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormDoc_PrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormDoc_PrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetConcatPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetConcatPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetPDFOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetPDFOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetPDFOutputPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetPDFOutputPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_AddOutputFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_AddOutputFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetRDEOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetRDEOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetExcelOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetExcelOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailCcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailCcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailBccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailBccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_MailBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_MailBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_AddParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_AddParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetCloseOnEndPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetCloseOnEndPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetIconizedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetIconizedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetHideFrameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetHideFrameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetSilentModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetSilentModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetSendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetSendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetAttachRDECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetAttachRDECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetAttachPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetAttachPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetAttachOtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetAttachOtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetArchivePdfFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetArchivePdfFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetCompressAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetCompressAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetOnePrintDialogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetOnePrintDialogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetUniqueMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetUniqueMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentMethodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentMethodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public string[] arMethods {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsPostaLiteEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsPostaLiteEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodeDeliveryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodeDeliveryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodePrintTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodePrintTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodeCodeStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodeCodeStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodeStatusExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodeStatusExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteDecodeErrorExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteDecodeErrorExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_DisposeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_DisposeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_AddReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_AddReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetAutoPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetAutoPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CWoormInfo_SetNoPrintDialogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CWoormInfo_SetNoPrintDialogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionBeginTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionBeginTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionCommitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionCommitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionRollbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionRollbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteSetAddresseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteSetAddresseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteSetSendTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteSetSendTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostaLiteSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostaLiteSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecNewReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecNewReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public int docHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecOpenReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecOpenReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public int docHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecUpgradeReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecUpgradeReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUserReportsDeveloperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserReportsDeveloperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SkipContextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SkipContextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryReadOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryReadOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuerySetConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QuerySetConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuerySetCursorTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QuerySetCursorTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpenConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpenConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionLockRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionLockRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public string LockKeyMsg {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionUnlockRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionUnlockRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionUnlockAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectionUnlockAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportNamespaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportNamespaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportModuleNamespaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportModuleNamespaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrinterNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrinterNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOwnerNamespaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOwnerNamespaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAutoPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAutoPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryIsOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryIsOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryCloseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryCloseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSendExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSendExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetAttachmentReportNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetAttachmentReportNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportSaveAsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportSaveAsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrowseDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BrowseDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpandTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExpandTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTableRowsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTableRowsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTableCurrentRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTableCurrentRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrentRowContainsCellTailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrentRowContainsCellTailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrentRowContainsCellSubTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CurrentRowContainsCellSubTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetFromCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetFromCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetSubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetSubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetBodyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetBodyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetMapiProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetMapiProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetBodyTemplateFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetBodyTemplateFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetCcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetCcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetBccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetBccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetToCertifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetToCertifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetCertifiedFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetCertifiedFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailSetBodyParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MailSetBodyParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TbWoormViewerClient : System.ServiceModel.ClientBase<Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer>, Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer {
        
        private BeginOperationDelegate onBeginCWoormInfo_SetParamValueDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetParamValueDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetParamValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetUICultureDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetUICultureDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetUICultureCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetPrinterNameDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetPrinterNameDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetPrinterNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetExportOutputTypeDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetExportOutputTypeDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetExportOutputTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormDoc_CloseDelegate;
        
        private EndOperationDelegate onEndCWoormDoc_CloseDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormDoc_CloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormDoc_PrintDelegate;
        
        private EndOperationDelegate onEndCWoormDoc_PrintDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormDoc_PrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetConcatPDFDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetConcatPDFDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetConcatPDFCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetPDFOutputDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetPDFOutputDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetPDFOutputCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetPDFOutputPreviewDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetPDFOutputPreviewDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetPDFOutputPreviewCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_AddOutputFileNameDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_AddOutputFileNameDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_AddOutputFileNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetRDEOutputDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetRDEOutputDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetRDEOutputCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetExcelOutputDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetExcelOutputDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetExcelOutputCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailToDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailToDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailToCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailCcDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailCcDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailCcCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailBccDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailBccDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailBccCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailAttachDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailAttachDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailAttachCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailSubjectDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailSubjectDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailSubjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_MailBodyDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_MailBodyDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_MailBodyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_AddParameterDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_AddParameterDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_AddParameterCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetCloseOnEndPrintDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetCloseOnEndPrintDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetCloseOnEndPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetIconizedDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetIconizedDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetIconizedCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetHideFrameDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetHideFrameDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetHideFrameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetSilentModeDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetSilentModeDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetSilentModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetSendEmailDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetSendEmailDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetSendEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetAttachRDEDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetAttachRDEDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetAttachRDECompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetAttachPDFDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetAttachPDFDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetAttachPDFCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetAttachOtherDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetAttachOtherDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetAttachOtherCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetArchivePdfFormatDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetArchivePdfFormatDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetArchivePdfFormatCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetCompressAttachDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetCompressAttachDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetCompressAttachCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetOnePrintDialogDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetOnePrintDialogDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetOnePrintDialogCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetUniqueMailDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetUniqueMailDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetUniqueMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentMethodsDelegate;
        
        private EndOperationDelegate onEndGetDocumentMethodsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentMethodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsPostaLiteEnabledDelegate;
        
        private EndOperationDelegate onEndIsPostaLiteEnabledDelegate;
        
        private System.Threading.SendOrPostCallback onIsPostaLiteEnabledCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodeDeliveryTypeDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodeDeliveryTypeDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodeDeliveryTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodePrintTypeDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodePrintTypeDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodePrintTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodeStatusDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodeStatusDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodeStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodeCodeStateDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodeCodeStateDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodeCodeStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodeStatusExtDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodeStatusExtDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodeStatusExtCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteDecodeErrorExtDelegate;
        
        private EndOperationDelegate onEndPostaLiteDecodeErrorExtDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteDecodeErrorExtCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_CreateDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_CreateDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_CreateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_DisposeDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_DisposeDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_DisposeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_AddReportDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_AddReportDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_AddReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetAutoPrintDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetAutoPrintDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetAutoPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginCWoormInfo_SetNoPrintDialogDelegate;
        
        private EndOperationDelegate onEndCWoormInfo_SetNoPrintDialogDelegate;
        
        private System.Threading.SendOrPostCallback onCWoormInfo_SetNoPrintDialogCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionBeginTransDelegate;
        
        private EndOperationDelegate onEndConnectionBeginTransDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionBeginTransCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionCommitDelegate;
        
        private EndOperationDelegate onEndConnectionCommitDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionCommitCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionRollbackDelegate;
        
        private EndOperationDelegate onEndConnectionRollbackDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionRollbackCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionCloseDelegate;
        
        private EndOperationDelegate onEndConnectionCloseDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteSetAddresseeDelegate;
        
        private EndOperationDelegate onEndPostaLiteSetAddresseeDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteSetAddresseeCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteSetSendTypeDelegate;
        
        private EndOperationDelegate onEndPostaLiteSetSendTypeDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteSetSendTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostaLiteSendDelegate;
        
        private EndOperationDelegate onEndPostaLiteSendDelegate;
        
        private System.Threading.SendOrPostCallback onPostaLiteSendCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMailDelegate;
        
        private EndOperationDelegate onEndSendMailDelegate;
        
        private System.Threading.SendOrPostCallback onSendMailCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecNewReportDelegate;
        
        private EndOperationDelegate onEndExecNewReportDelegate;
        
        private System.Threading.SendOrPostCallback onExecNewReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecOpenReportDelegate;
        
        private EndOperationDelegate onEndExecOpenReportDelegate;
        
        private System.Threading.SendOrPostCallback onExecOpenReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecUpgradeReportDelegate;
        
        private EndOperationDelegate onEndExecUpgradeReportDelegate;
        
        private System.Threading.SendOrPostCallback onExecUpgradeReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsUserReportsDeveloperDelegate;
        
        private EndOperationDelegate onEndIsUserReportsDeveloperDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserReportsDeveloperCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryReadDelegate;
        
        private EndOperationDelegate onEndQueryReadDelegate;
        
        private System.Threading.SendOrPostCallback onQueryReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryExecuteDelegate;
        
        private EndOperationDelegate onEndQueryExecuteDelegate;
        
        private System.Threading.SendOrPostCallback onQueryExecuteCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryCallDelegate;
        
        private EndOperationDelegate onEndQueryCallDelegate;
        
        private System.Threading.SendOrPostCallback onQueryCallCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate;
        
        private EndOperationDelegate onEndUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSkipContextDelegate;
        
        private EndOperationDelegate onEndSkipContextDelegate;
        
        private System.Threading.SendOrPostCallback onSkipContextCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryReadOneDelegate;
        
        private EndOperationDelegate onEndQueryReadOneDelegate;
        
        private System.Threading.SendOrPostCallback onQueryReadOneCompletedDelegate;
        
        private BeginOperationDelegate onBeginQuerySetConnectionDelegate;
        
        private EndOperationDelegate onEndQuerySetConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onQuerySetConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginQuerySetCursorTypeDelegate;
        
        private EndOperationDelegate onEndQuerySetCursorTypeDelegate;
        
        private System.Threading.SendOrPostCallback onQuerySetCursorTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConnectionDelegate;
        
        private EndOperationDelegate onEndGetConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onGetConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenConnectionDelegate;
        
        private EndOperationDelegate onEndOpenConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onOpenConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionLockRecordDelegate;
        
        private EndOperationDelegate onEndConnectionLockRecordDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionLockRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionUnlockRecordDelegate;
        
        private EndOperationDelegate onEndConnectionUnlockRecordDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionUnlockRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginConnectionUnlockAllDelegate;
        
        private EndOperationDelegate onEndConnectionUnlockAllDelegate;
        
        private System.Threading.SendOrPostCallback onConnectionUnlockAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRowsDelegate;
        
        private EndOperationDelegate onEndGetRowsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentRowDelegate;
        
        private EndOperationDelegate onEndGetCurrentRowDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportPathDelegate;
        
        private EndOperationDelegate onEndGetReportPathDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportNamespaceDelegate;
        
        private EndOperationDelegate onEndGetReportNamespaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportNamespaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportNameDelegate;
        
        private EndOperationDelegate onEndGetReportNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportModuleNamespaceDelegate;
        
        private EndOperationDelegate onEndGetReportModuleNamespaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportModuleNamespaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrinterNameDelegate;
        
        private EndOperationDelegate onEndGetPrinterNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrinterNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOwnerNamespaceDelegate;
        
        private EndOperationDelegate onEndGetOwnerNamespaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetOwnerNamespaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsAutoPrintDelegate;
        
        private EndOperationDelegate onEndIsAutoPrintDelegate;
        
        private System.Threading.SendOrPostCallback onIsAutoPrintCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryOpenDelegate;
        
        private EndOperationDelegate onEndQueryOpenDelegate;
        
        private System.Threading.SendOrPostCallback onQueryOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryIsOpenDelegate;
        
        private EndOperationDelegate onEndQueryIsOpenDelegate;
        
        private System.Threading.SendOrPostCallback onQueryIsOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryCloseDelegate;
        
        private EndOperationDelegate onEndQueryCloseDelegate;
        
        private System.Threading.SendOrPostCallback onQueryCloseCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSendDelegate;
        
        private EndOperationDelegate onEndMailSendDelegate;
        
        private System.Threading.SendOrPostCallback onMailSendCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSendExDelegate;
        
        private EndOperationDelegate onEndMailSendExDelegate;
        
        private System.Threading.SendOrPostCallback onMailSendExCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetAttachmentReportNameDelegate;
        
        private EndOperationDelegate onEndMailSetAttachmentReportNameDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetAttachmentReportNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportSaveAsDelegate;
        
        private EndOperationDelegate onEndReportSaveAsDelegate;
        
        private System.Threading.SendOrPostCallback onReportSaveAsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunReportDelegate;
        
        private EndOperationDelegate onEndRunReportDelegate;
        
        private System.Threading.SendOrPostCallback onRunReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunDocumentDelegate;
        
        private EndOperationDelegate onEndRunDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onRunDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginBrowseDocumentDelegate;
        
        private EndOperationDelegate onEndBrowseDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onBrowseDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunProgramDelegate;
        
        private EndOperationDelegate onEndRunProgramDelegate;
        
        private System.Threading.SendOrPostCallback onRunProgramCompletedDelegate;
        
        private BeginOperationDelegate onBeginExpandTemplateDelegate;
        
        private EndOperationDelegate onEndExpandTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onExpandTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTableRowsDelegate;
        
        private EndOperationDelegate onEndGetTableRowsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTableRowsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTableCurrentRowDelegate;
        
        private EndOperationDelegate onEndGetTableCurrentRowDelegate;
        
        private System.Threading.SendOrPostCallback onGetTableCurrentRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrentRowContainsCellTailDelegate;
        
        private EndOperationDelegate onEndCurrentRowContainsCellTailDelegate;
        
        private System.Threading.SendOrPostCallback onCurrentRowContainsCellTailCompletedDelegate;
        
        private BeginOperationDelegate onBeginCurrentRowContainsCellSubTotalDelegate;
        
        private EndOperationDelegate onEndCurrentRowContainsCellSubTotalDelegate;
        
        private System.Threading.SendOrPostCallback onCurrentRowContainsCellSubTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetFromDelegate;
        
        private EndOperationDelegate onEndMailSetFromDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetFromCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetSubjectDelegate;
        
        private EndOperationDelegate onEndMailSetSubjectDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetSubjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetBodyDelegate;
        
        private EndOperationDelegate onEndMailSetBodyDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetBodyCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetMapiProfileDelegate;
        
        private EndOperationDelegate onEndMailSetMapiProfileDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetMapiProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetBodyTemplateFileNameDelegate;
        
        private EndOperationDelegate onEndMailSetBodyTemplateFileNameDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetBodyTemplateFileNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetToDelegate;
        
        private EndOperationDelegate onEndMailSetToDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetToCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetCcDelegate;
        
        private EndOperationDelegate onEndMailSetCcDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetCcCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetBccDelegate;
        
        private EndOperationDelegate onEndMailSetBccDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetBccCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetToCertifiedDelegate;
        
        private EndOperationDelegate onEndMailSetToCertifiedDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetToCertifiedCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetCertifiedFilterDelegate;
        
        private EndOperationDelegate onEndMailSetCertifiedFilterDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetCertifiedFilterCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetAttachmentDelegate;
        
        private EndOperationDelegate onEndMailSetAttachmentDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetAttachmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginMailSetBodyParameterDelegate;
        
        private EndOperationDelegate onEndMailSetBodyParameterDelegate;
        
        private System.Threading.SendOrPostCallback onMailSetBodyParameterCompletedDelegate;
        
        public TbWoormViewerClient() {
        }
        
        public TbWoormViewerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TbWoormViewerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbWoormViewerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbWoormViewerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<CWoormInfo_SetParamValueCompletedEventArgs> CWoormInfo_SetParamValueCompleted;
        
        public event System.EventHandler<CWoormInfo_SetUICultureCompletedEventArgs> CWoormInfo_SetUICultureCompleted;
        
        public event System.EventHandler<CWoormInfo_SetPrinterNameCompletedEventArgs> CWoormInfo_SetPrinterNameCompleted;
        
        public event System.EventHandler<CWoormInfo_SetExportOutputTypeCompletedEventArgs> CWoormInfo_SetExportOutputTypeCompleted;
        
        public event System.EventHandler<CWoormDoc_CloseCompletedEventArgs> CWoormDoc_CloseCompleted;
        
        public event System.EventHandler<CWoormDoc_PrintCompletedEventArgs> CWoormDoc_PrintCompleted;
        
        public event System.EventHandler<CWoormInfo_SetConcatPDFCompletedEventArgs> CWoormInfo_SetConcatPDFCompleted;
        
        public event System.EventHandler<CWoormInfo_SetPDFOutputCompletedEventArgs> CWoormInfo_SetPDFOutputCompleted;
        
        public event System.EventHandler<CWoormInfo_SetPDFOutputPreviewCompletedEventArgs> CWoormInfo_SetPDFOutputPreviewCompleted;
        
        public event System.EventHandler<CWoormInfo_AddOutputFileNameCompletedEventArgs> CWoormInfo_AddOutputFileNameCompleted;
        
        public event System.EventHandler<CWoormInfo_SetRDEOutputCompletedEventArgs> CWoormInfo_SetRDEOutputCompleted;
        
        public event System.EventHandler<CWoormInfo_SetExcelOutputCompletedEventArgs> CWoormInfo_SetExcelOutputCompleted;
        
        public event System.EventHandler<CWoormInfo_MailToCompletedEventArgs> CWoormInfo_MailToCompleted;
        
        public event System.EventHandler<CWoormInfo_MailCcCompletedEventArgs> CWoormInfo_MailCcCompleted;
        
        public event System.EventHandler<CWoormInfo_MailBccCompletedEventArgs> CWoormInfo_MailBccCompleted;
        
        public event System.EventHandler<CWoormInfo_MailAttachCompletedEventArgs> CWoormInfo_MailAttachCompleted;
        
        public event System.EventHandler<CWoormInfo_MailSubjectCompletedEventArgs> CWoormInfo_MailSubjectCompleted;
        
        public event System.EventHandler<CWoormInfo_MailBodyCompletedEventArgs> CWoormInfo_MailBodyCompleted;
        
        public event System.EventHandler<CWoormInfo_AddParameterCompletedEventArgs> CWoormInfo_AddParameterCompleted;
        
        public event System.EventHandler<CWoormInfo_SetCloseOnEndPrintCompletedEventArgs> CWoormInfo_SetCloseOnEndPrintCompleted;
        
        public event System.EventHandler<CWoormInfo_SetIconizedCompletedEventArgs> CWoormInfo_SetIconizedCompleted;
        
        public event System.EventHandler<CWoormInfo_SetHideFrameCompletedEventArgs> CWoormInfo_SetHideFrameCompleted;
        
        public event System.EventHandler<CWoormInfo_SetSilentModeCompletedEventArgs> CWoormInfo_SetSilentModeCompleted;
        
        public event System.EventHandler<CWoormInfo_SetSendEmailCompletedEventArgs> CWoormInfo_SetSendEmailCompleted;
        
        public event System.EventHandler<CWoormInfo_SetAttachRDECompletedEventArgs> CWoormInfo_SetAttachRDECompleted;
        
        public event System.EventHandler<CWoormInfo_SetAttachPDFCompletedEventArgs> CWoormInfo_SetAttachPDFCompleted;
        
        public event System.EventHandler<CWoormInfo_SetAttachOtherCompletedEventArgs> CWoormInfo_SetAttachOtherCompleted;
        
        public event System.EventHandler<CWoormInfo_SetArchivePdfFormatCompletedEventArgs> CWoormInfo_SetArchivePdfFormatCompleted;
        
        public event System.EventHandler<CWoormInfo_SetCompressAttachCompletedEventArgs> CWoormInfo_SetCompressAttachCompleted;
        
        public event System.EventHandler<CWoormInfo_SetOnePrintDialogCompletedEventArgs> CWoormInfo_SetOnePrintDialogCompleted;
        
        public event System.EventHandler<CWoormInfo_SetUniqueMailCompletedEventArgs> CWoormInfo_SetUniqueMailCompleted;
        
        public event System.EventHandler<GetDocumentMethodsCompletedEventArgs> GetDocumentMethodsCompleted;
        
        public event System.EventHandler<IsPostaLiteEnabledCompletedEventArgs> IsPostaLiteEnabledCompleted;
        
        public event System.EventHandler<PostaLiteDecodeDeliveryTypeCompletedEventArgs> PostaLiteDecodeDeliveryTypeCompleted;
        
        public event System.EventHandler<PostaLiteDecodePrintTypeCompletedEventArgs> PostaLiteDecodePrintTypeCompleted;
        
        public event System.EventHandler<PostaLiteDecodeStatusCompletedEventArgs> PostaLiteDecodeStatusCompleted;
        
        public event System.EventHandler<PostaLiteDecodeCodeStateCompletedEventArgs> PostaLiteDecodeCodeStateCompleted;
        
        public event System.EventHandler<PostaLiteDecodeStatusExtCompletedEventArgs> PostaLiteDecodeStatusExtCompleted;
        
        public event System.EventHandler<PostaLiteDecodeErrorExtCompletedEventArgs> PostaLiteDecodeErrorExtCompleted;
        
        public event System.EventHandler<CWoormInfo_CreateCompletedEventArgs> CWoormInfo_CreateCompleted;
        
        public event System.EventHandler<CWoormInfo_DisposeCompletedEventArgs> CWoormInfo_DisposeCompleted;
        
        public event System.EventHandler<CWoormInfo_AddReportCompletedEventArgs> CWoormInfo_AddReportCompleted;
        
        public event System.EventHandler<CWoormInfo_SetAutoPrintCompletedEventArgs> CWoormInfo_SetAutoPrintCompleted;
        
        public event System.EventHandler<CWoormInfo_SetNoPrintDialogCompletedEventArgs> CWoormInfo_SetNoPrintDialogCompleted;
        
        public event System.EventHandler<ConnectionBeginTransCompletedEventArgs> ConnectionBeginTransCompleted;
        
        public event System.EventHandler<ConnectionCommitCompletedEventArgs> ConnectionCommitCompleted;
        
        public event System.EventHandler<ConnectionRollbackCompletedEventArgs> ConnectionRollbackCompleted;
        
        public event System.EventHandler<ConnectionCloseCompletedEventArgs> ConnectionCloseCompleted;
        
        public event System.EventHandler<PostaLiteSetAddresseeCompletedEventArgs> PostaLiteSetAddresseeCompleted;
        
        public event System.EventHandler<PostaLiteSetSendTypeCompletedEventArgs> PostaLiteSetSendTypeCompleted;
        
        public event System.EventHandler<PostaLiteSendCompletedEventArgs> PostaLiteSendCompleted;
        
        public event System.EventHandler<SendMailCompletedEventArgs> SendMailCompleted;
        
        public event System.EventHandler<ExecNewReportCompletedEventArgs> ExecNewReportCompleted;
        
        public event System.EventHandler<ExecOpenReportCompletedEventArgs> ExecOpenReportCompleted;
        
        public event System.EventHandler<ExecUpgradeReportCompletedEventArgs> ExecUpgradeReportCompleted;
        
        public event System.EventHandler<IsUserReportsDeveloperCompletedEventArgs> IsUserReportsDeveloperCompleted;
        
        public event System.EventHandler<QueryReadCompletedEventArgs> QueryReadCompleted;
        
        public event System.EventHandler<QueryExecuteCompletedEventArgs> QueryExecuteCompleted;
        
        public event System.EventHandler<QueryCallCompletedEventArgs> QueryCallCompleted;
        
        public event System.EventHandler<UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedEventArgs> UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompleted;
        
        public event System.EventHandler<SkipContextCompletedEventArgs> SkipContextCompleted;
        
        public event System.EventHandler<QueryReadOneCompletedEventArgs> QueryReadOneCompleted;
        
        public event System.EventHandler<QuerySetConnectionCompletedEventArgs> QuerySetConnectionCompleted;
        
        public event System.EventHandler<QuerySetCursorTypeCompletedEventArgs> QuerySetCursorTypeCompleted;
        
        public event System.EventHandler<GetConnectionCompletedEventArgs> GetConnectionCompleted;
        
        public event System.EventHandler<OpenConnectionCompletedEventArgs> OpenConnectionCompleted;
        
        public event System.EventHandler<ConnectionLockRecordCompletedEventArgs> ConnectionLockRecordCompleted;
        
        public event System.EventHandler<ConnectionUnlockRecordCompletedEventArgs> ConnectionUnlockRecordCompleted;
        
        public event System.EventHandler<ConnectionUnlockAllCompletedEventArgs> ConnectionUnlockAllCompleted;
        
        public event System.EventHandler<GetRowsCompletedEventArgs> GetRowsCompleted;
        
        public event System.EventHandler<GetCurrentRowCompletedEventArgs> GetCurrentRowCompleted;
        
        public event System.EventHandler<GetReportPathCompletedEventArgs> GetReportPathCompleted;
        
        public event System.EventHandler<GetReportNamespaceCompletedEventArgs> GetReportNamespaceCompleted;
        
        public event System.EventHandler<GetReportNameCompletedEventArgs> GetReportNameCompleted;
        
        public event System.EventHandler<GetReportModuleNamespaceCompletedEventArgs> GetReportModuleNamespaceCompleted;
        
        public event System.EventHandler<GetPrinterNameCompletedEventArgs> GetPrinterNameCompleted;
        
        public event System.EventHandler<GetOwnerNamespaceCompletedEventArgs> GetOwnerNamespaceCompleted;
        
        public event System.EventHandler<IsAutoPrintCompletedEventArgs> IsAutoPrintCompleted;
        
        public event System.EventHandler<QueryOpenCompletedEventArgs> QueryOpenCompleted;
        
        public event System.EventHandler<QueryIsOpenCompletedEventArgs> QueryIsOpenCompleted;
        
        public event System.EventHandler<QueryCloseCompletedEventArgs> QueryCloseCompleted;
        
        public event System.EventHandler<MailSendCompletedEventArgs> MailSendCompleted;
        
        public event System.EventHandler<MailSendExCompletedEventArgs> MailSendExCompleted;
        
        public event System.EventHandler<MailSetAttachmentReportNameCompletedEventArgs> MailSetAttachmentReportNameCompleted;
        
        public event System.EventHandler<ReportSaveAsCompletedEventArgs> ReportSaveAsCompleted;
        
        public event System.EventHandler<RunReportCompletedEventArgs> RunReportCompleted;
        
        public event System.EventHandler<RunDocumentCompletedEventArgs> RunDocumentCompleted;
        
        public event System.EventHandler<BrowseDocumentCompletedEventArgs> BrowseDocumentCompleted;
        
        public event System.EventHandler<RunProgramCompletedEventArgs> RunProgramCompleted;
        
        public event System.EventHandler<ExpandTemplateCompletedEventArgs> ExpandTemplateCompleted;
        
        public event System.EventHandler<GetTableRowsCompletedEventArgs> GetTableRowsCompleted;
        
        public event System.EventHandler<GetTableCurrentRowCompletedEventArgs> GetTableCurrentRowCompleted;
        
        public event System.EventHandler<CurrentRowContainsCellTailCompletedEventArgs> CurrentRowContainsCellTailCompleted;
        
        public event System.EventHandler<CurrentRowContainsCellSubTotalCompletedEventArgs> CurrentRowContainsCellSubTotalCompleted;
        
        public event System.EventHandler<MailSetFromCompletedEventArgs> MailSetFromCompleted;
        
        public event System.EventHandler<MailSetSubjectCompletedEventArgs> MailSetSubjectCompleted;
        
        public event System.EventHandler<MailSetBodyCompletedEventArgs> MailSetBodyCompleted;
        
        public event System.EventHandler<MailSetMapiProfileCompletedEventArgs> MailSetMapiProfileCompleted;
        
        public event System.EventHandler<MailSetBodyTemplateFileNameCompletedEventArgs> MailSetBodyTemplateFileNameCompleted;
        
        public event System.EventHandler<MailSetToCompletedEventArgs> MailSetToCompleted;
        
        public event System.EventHandler<MailSetCcCompletedEventArgs> MailSetCcCompleted;
        
        public event System.EventHandler<MailSetBccCompletedEventArgs> MailSetBccCompleted;
        
        public event System.EventHandler<MailSetToCertifiedCompletedEventArgs> MailSetToCertifiedCompleted;
        
        public event System.EventHandler<MailSetCertifiedFilterCompletedEventArgs> MailSetCertifiedFilterCompleted;
        
        public event System.EventHandler<MailSetAttachmentCompletedEventArgs> MailSetAttachmentCompleted;
        
        public event System.EventHandler<MailSetBodyParameterCompletedEventArgs> MailSetBodyParameterCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetParamValue(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn request) {
            return base.Channel.CWoormInfo_SetParamValue(request);
        }
        
        public void CWoormInfo_SetParamValue(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.paramName = paramName;
            inValue.value = value;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetParamValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetParamValue(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetParamValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetParamValue(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.paramName = paramName;
            inValue.value = value;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetParamValue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetParamValue(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetParamValue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetParamValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetParamValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetParamValue(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetParamValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string paramName = ((string)(inValues[2]));
            int value = ((int)(inValues[3]));
            return this.BeginCWoormInfo_SetParamValue(HeaderInfo, handle, paramName, value, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetParamValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetParamValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetParamValueCompleted(object state) {
            if ((this.CWoormInfo_SetParamValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetParamValueCompleted(this, new CWoormInfo_SetParamValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetParamValueAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            this.CWoormInfo_SetParamValueAsync(HeaderInfo, handle, paramName, value, null);
        }
        
        public void CWoormInfo_SetParamValueAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value, object userState) {
            if ((this.onBeginCWoormInfo_SetParamValueDelegate == null)) {
                this.onBeginCWoormInfo_SetParamValueDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetParamValue);
            }
            if ((this.onEndCWoormInfo_SetParamValueDelegate == null)) {
                this.onEndCWoormInfo_SetParamValueDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetParamValue);
            }
            if ((this.onCWoormInfo_SetParamValueCompletedDelegate == null)) {
                this.onCWoormInfo_SetParamValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetParamValueCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetParamValueDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        paramName,
                        value}, this.onEndCWoormInfo_SetParamValueDelegate, this.onCWoormInfo_SetParamValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetUICulture(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn request) {
            return base.Channel.CWoormInfo_SetUICulture(request);
        }
        
        public void CWoormInfo_SetUICulture(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string culture) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.culture = culture;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetUICulture(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetUICulture(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetUICulture(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetUICulture(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string culture, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.culture = culture;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetUICulture(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetUICulture(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetUICulture(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetUICulture(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUICultureOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetUICulture(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetUICulture(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string culture = ((string)(inValues[2]));
            return this.BeginCWoormInfo_SetUICulture(HeaderInfo, handle, culture, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetUICulture(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetUICulture(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetUICultureCompleted(object state) {
            if ((this.CWoormInfo_SetUICultureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetUICultureCompleted(this, new CWoormInfo_SetUICultureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetUICultureAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string culture) {
            this.CWoormInfo_SetUICultureAsync(HeaderInfo, handle, culture, null);
        }
        
        public void CWoormInfo_SetUICultureAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string culture, object userState) {
            if ((this.onBeginCWoormInfo_SetUICultureDelegate == null)) {
                this.onBeginCWoormInfo_SetUICultureDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetUICulture);
            }
            if ((this.onEndCWoormInfo_SetUICultureDelegate == null)) {
                this.onEndCWoormInfo_SetUICultureDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetUICulture);
            }
            if ((this.onCWoormInfo_SetUICultureCompletedDelegate == null)) {
                this.onCWoormInfo_SetUICultureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetUICultureCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetUICultureDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        culture}, this.onEndCWoormInfo_SetUICultureDelegate, this.onCWoormInfo_SetUICultureCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn request) {
            return base.Channel.CWoormInfo_SetPrinterName(request);
        }
        
        public void CWoormInfo_SetPrinterName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string name) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.name = name;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetPrinterName(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetPrinterName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string name, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.name = name;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetPrinterName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetPrinterName(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetPrinterName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetPrinterName(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPrinterNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetPrinterName(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetPrinterName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string name = ((string)(inValues[2]));
            return this.BeginCWoormInfo_SetPrinterName(HeaderInfo, handle, name, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetPrinterName(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetPrinterName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetPrinterNameCompleted(object state) {
            if ((this.CWoormInfo_SetPrinterNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetPrinterNameCompleted(this, new CWoormInfo_SetPrinterNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetPrinterNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string name) {
            this.CWoormInfo_SetPrinterNameAsync(HeaderInfo, handle, name, null);
        }
        
        public void CWoormInfo_SetPrinterNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string name, object userState) {
            if ((this.onBeginCWoormInfo_SetPrinterNameDelegate == null)) {
                this.onBeginCWoormInfo_SetPrinterNameDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetPrinterName);
            }
            if ((this.onEndCWoormInfo_SetPrinterNameDelegate == null)) {
                this.onEndCWoormInfo_SetPrinterNameDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetPrinterName);
            }
            if ((this.onCWoormInfo_SetPrinterNameCompletedDelegate == null)) {
                this.onCWoormInfo_SetPrinterNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetPrinterNameCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetPrinterNameDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        name}, this.onEndCWoormInfo_SetPrinterNameDelegate, this.onCWoormInfo_SetPrinterNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetExportOutputType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn request) {
            return base.Channel.CWoormInfo_SetExportOutputType(request);
        }
        
        public void CWoormInfo_SetExportOutputType(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string expType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.expType = expType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetExportOutputType(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetExportOutputType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetExportOutputType(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetExportOutputType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string expType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.expType = expType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetExportOutputType(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetExportOutputType(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetExportOutputType(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetExportOutputType(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExportOutputTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetExportOutputType(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetExportOutputType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string expType = ((string)(inValues[2]));
            return this.BeginCWoormInfo_SetExportOutputType(HeaderInfo, handle, expType, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetExportOutputType(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetExportOutputType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetExportOutputTypeCompleted(object state) {
            if ((this.CWoormInfo_SetExportOutputTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetExportOutputTypeCompleted(this, new CWoormInfo_SetExportOutputTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetExportOutputTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string expType) {
            this.CWoormInfo_SetExportOutputTypeAsync(HeaderInfo, handle, expType, null);
        }
        
        public void CWoormInfo_SetExportOutputTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string expType, object userState) {
            if ((this.onBeginCWoormInfo_SetExportOutputTypeDelegate == null)) {
                this.onBeginCWoormInfo_SetExportOutputTypeDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetExportOutputType);
            }
            if ((this.onEndCWoormInfo_SetExportOutputTypeDelegate == null)) {
                this.onEndCWoormInfo_SetExportOutputTypeDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetExportOutputType);
            }
            if ((this.onCWoormInfo_SetExportOutputTypeCompletedDelegate == null)) {
                this.onCWoormInfo_SetExportOutputTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetExportOutputTypeCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetExportOutputTypeDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        expType}, this.onEndCWoormInfo_SetExportOutputTypeDelegate, this.onCWoormInfo_SetExportOutputTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormDoc_Close(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn request) {
            return base.Channel.CWoormDoc_Close(request);
        }
        
        public bool CWoormDoc_Close(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormDoc_Close(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormDoc_Close(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormDoc_Close(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormDoc_Close(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormDoc_Close(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormDoc_Close(System.IAsyncResult result) {
            return base.Channel.EndCWoormDoc_Close(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormDoc_Close(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_CloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormDoc_Close(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormDoc_Close(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginCWoormDoc_Close(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndCWoormDoc_Close(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormDoc_Close(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCWoormDoc_CloseCompleted(object state) {
            if ((this.CWoormDoc_CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormDoc_CloseCompleted(this, new CWoormDoc_CloseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormDoc_CloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.CWoormDoc_CloseAsync(HeaderInfo, handle, null);
        }
        
        public void CWoormDoc_CloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginCWoormDoc_CloseDelegate == null)) {
                this.onBeginCWoormDoc_CloseDelegate = new BeginOperationDelegate(this.OnBeginCWoormDoc_Close);
            }
            if ((this.onEndCWoormDoc_CloseDelegate == null)) {
                this.onEndCWoormDoc_CloseDelegate = new EndOperationDelegate(this.OnEndCWoormDoc_Close);
            }
            if ((this.onCWoormDoc_CloseCompletedDelegate == null)) {
                this.onCWoormDoc_CloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormDoc_CloseCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormDoc_CloseDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndCWoormDoc_CloseDelegate, this.onCWoormDoc_CloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormDoc_Print(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn request) {
            return base.Channel.CWoormDoc_Print(request);
        }
        
        public bool CWoormDoc_Print(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool bClose) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.bClose = bClose;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormDoc_Print(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormDoc_Print(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormDoc_Print(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormDoc_Print(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool bClose, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.bClose = bClose;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormDoc_Print(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormDoc_Print(System.IAsyncResult result) {
            return base.Channel.EndCWoormDoc_Print(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormDoc_Print(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormDoc_PrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormDoc_Print(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormDoc_Print(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool bClose = ((bool)(inValues[2]));
            return this.BeginCWoormDoc_Print(HeaderInfo, handle, bClose, callback, asyncState);
        }
        
        private object[] OnEndCWoormDoc_Print(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormDoc_Print(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCWoormDoc_PrintCompleted(object state) {
            if ((this.CWoormDoc_PrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormDoc_PrintCompleted(this, new CWoormDoc_PrintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormDoc_PrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool bClose) {
            this.CWoormDoc_PrintAsync(HeaderInfo, handle, bClose, null);
        }
        
        public void CWoormDoc_PrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool bClose, object userState) {
            if ((this.onBeginCWoormDoc_PrintDelegate == null)) {
                this.onBeginCWoormDoc_PrintDelegate = new BeginOperationDelegate(this.OnBeginCWoormDoc_Print);
            }
            if ((this.onEndCWoormDoc_PrintDelegate == null)) {
                this.onEndCWoormDoc_PrintDelegate = new EndOperationDelegate(this.OnEndCWoormDoc_Print);
            }
            if ((this.onCWoormDoc_PrintCompletedDelegate == null)) {
                this.onCWoormDoc_PrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormDoc_PrintCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormDoc_PrintDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        bClose}, this.onEndCWoormDoc_PrintDelegate, this.onCWoormDoc_PrintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetConcatPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn request) {
            return base.Channel.CWoormInfo_SetConcatPDF(request);
        }
        
        public void CWoormInfo_SetConcatPDF(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool concatPDF) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.concatPDF = concatPDF;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetConcatPDF(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetConcatPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetConcatPDF(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetConcatPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool concatPDF, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.concatPDF = concatPDF;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetConcatPDF(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetConcatPDF(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetConcatPDF(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetConcatPDF(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetConcatPDFOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetConcatPDF(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetConcatPDF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool concatPDF = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetConcatPDF(HeaderInfo, handle, concatPDF, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetConcatPDF(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetConcatPDF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetConcatPDFCompleted(object state) {
            if ((this.CWoormInfo_SetConcatPDFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetConcatPDFCompleted(this, new CWoormInfo_SetConcatPDFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetConcatPDFAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool concatPDF) {
            this.CWoormInfo_SetConcatPDFAsync(HeaderInfo, handle, concatPDF, null);
        }
        
        public void CWoormInfo_SetConcatPDFAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool concatPDF, object userState) {
            if ((this.onBeginCWoormInfo_SetConcatPDFDelegate == null)) {
                this.onBeginCWoormInfo_SetConcatPDFDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetConcatPDF);
            }
            if ((this.onEndCWoormInfo_SetConcatPDFDelegate == null)) {
                this.onEndCWoormInfo_SetConcatPDFDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetConcatPDF);
            }
            if ((this.onCWoormInfo_SetConcatPDFCompletedDelegate == null)) {
                this.onCWoormInfo_SetConcatPDFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetConcatPDFCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetConcatPDFDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        concatPDF}, this.onEndCWoormInfo_SetConcatPDFDelegate, this.onCWoormInfo_SetConcatPDFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetPDFOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn request) {
            return base.Channel.CWoormInfo_SetPDFOutput(request);
        }
        
        public void CWoormInfo_SetPDFOutput(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutput) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.PDFOutput = PDFOutput;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetPDFOutput(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetPDFOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetPDFOutput(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetPDFOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutput, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.PDFOutput = PDFOutput;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetPDFOutput(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetPDFOutput(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetPDFOutput(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetPDFOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetPDFOutput(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetPDFOutput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool PDFOutput = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetPDFOutput(HeaderInfo, handle, PDFOutput, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetPDFOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetPDFOutput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetPDFOutputCompleted(object state) {
            if ((this.CWoormInfo_SetPDFOutputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetPDFOutputCompleted(this, new CWoormInfo_SetPDFOutputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetPDFOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutput) {
            this.CWoormInfo_SetPDFOutputAsync(HeaderInfo, handle, PDFOutput, null);
        }
        
        public void CWoormInfo_SetPDFOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutput, object userState) {
            if ((this.onBeginCWoormInfo_SetPDFOutputDelegate == null)) {
                this.onBeginCWoormInfo_SetPDFOutputDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetPDFOutput);
            }
            if ((this.onEndCWoormInfo_SetPDFOutputDelegate == null)) {
                this.onEndCWoormInfo_SetPDFOutputDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetPDFOutput);
            }
            if ((this.onCWoormInfo_SetPDFOutputCompletedDelegate == null)) {
                this.onCWoormInfo_SetPDFOutputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetPDFOutputCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetPDFOutputDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        PDFOutput}, this.onEndCWoormInfo_SetPDFOutputDelegate, this.onCWoormInfo_SetPDFOutputCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetPDFOutputPreview(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn request) {
            return base.Channel.CWoormInfo_SetPDFOutputPreview(request);
        }
        
        public void CWoormInfo_SetPDFOutputPreview(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutputPreview) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.PDFOutputPreview = PDFOutputPreview;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetPDFOutputPreview(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetPDFOutputPreview(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetPDFOutputPreview(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetPDFOutputPreview(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutputPreview, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.PDFOutputPreview = PDFOutputPreview;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetPDFOutputPreview(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetPDFOutputPreview(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetPDFOutputPreview(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetPDFOutputPreview(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetPDFOutputPreviewOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetPDFOutputPreview(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetPDFOutputPreview(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool PDFOutputPreview = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetPDFOutputPreview(HeaderInfo, handle, PDFOutputPreview, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetPDFOutputPreview(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetPDFOutputPreview(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetPDFOutputPreviewCompleted(object state) {
            if ((this.CWoormInfo_SetPDFOutputPreviewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetPDFOutputPreviewCompleted(this, new CWoormInfo_SetPDFOutputPreviewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetPDFOutputPreviewAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutputPreview) {
            this.CWoormInfo_SetPDFOutputPreviewAsync(HeaderInfo, handle, PDFOutputPreview, null);
        }
        
        public void CWoormInfo_SetPDFOutputPreviewAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool PDFOutputPreview, object userState) {
            if ((this.onBeginCWoormInfo_SetPDFOutputPreviewDelegate == null)) {
                this.onBeginCWoormInfo_SetPDFOutputPreviewDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetPDFOutputPreview);
            }
            if ((this.onEndCWoormInfo_SetPDFOutputPreviewDelegate == null)) {
                this.onEndCWoormInfo_SetPDFOutputPreviewDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetPDFOutputPreview);
            }
            if ((this.onCWoormInfo_SetPDFOutputPreviewCompletedDelegate == null)) {
                this.onCWoormInfo_SetPDFOutputPreviewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetPDFOutputPreviewCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetPDFOutputPreviewDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        PDFOutputPreview}, this.onEndCWoormInfo_SetPDFOutputPreviewDelegate, this.onCWoormInfo_SetPDFOutputPreviewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_AddOutputFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn request) {
            return base.Channel.CWoormInfo_AddOutputFileName(request);
        }
        
        public void CWoormInfo_AddOutputFileName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string fileName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.fileName = fileName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_AddOutputFileName(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_AddOutputFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_AddOutputFileName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_AddOutputFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string fileName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.fileName = fileName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_AddOutputFileName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_AddOutputFileName(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_AddOutputFileName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_AddOutputFileName(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddOutputFileNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_AddOutputFileName(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_AddOutputFileName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string fileName = ((string)(inValues[2]));
            return this.BeginCWoormInfo_AddOutputFileName(HeaderInfo, handle, fileName, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_AddOutputFileName(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_AddOutputFileName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_AddOutputFileNameCompleted(object state) {
            if ((this.CWoormInfo_AddOutputFileNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_AddOutputFileNameCompleted(this, new CWoormInfo_AddOutputFileNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_AddOutputFileNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string fileName) {
            this.CWoormInfo_AddOutputFileNameAsync(HeaderInfo, handle, fileName, null);
        }
        
        public void CWoormInfo_AddOutputFileNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string fileName, object userState) {
            if ((this.onBeginCWoormInfo_AddOutputFileNameDelegate == null)) {
                this.onBeginCWoormInfo_AddOutputFileNameDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_AddOutputFileName);
            }
            if ((this.onEndCWoormInfo_AddOutputFileNameDelegate == null)) {
                this.onEndCWoormInfo_AddOutputFileNameDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_AddOutputFileName);
            }
            if ((this.onCWoormInfo_AddOutputFileNameCompletedDelegate == null)) {
                this.onCWoormInfo_AddOutputFileNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_AddOutputFileNameCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_AddOutputFileNameDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        fileName}, this.onEndCWoormInfo_AddOutputFileNameDelegate, this.onCWoormInfo_AddOutputFileNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetRDEOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn request) {
            return base.Channel.CWoormInfo_SetRDEOutput(request);
        }
        
        public void CWoormInfo_SetRDEOutput(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool RDEOutput) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.RDEOutput = RDEOutput;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetRDEOutput(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetRDEOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetRDEOutput(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetRDEOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool RDEOutput, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.RDEOutput = RDEOutput;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetRDEOutput(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetRDEOutput(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetRDEOutput(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetRDEOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetRDEOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetRDEOutput(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetRDEOutput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool RDEOutput = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetRDEOutput(HeaderInfo, handle, RDEOutput, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetRDEOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetRDEOutput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetRDEOutputCompleted(object state) {
            if ((this.CWoormInfo_SetRDEOutputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetRDEOutputCompleted(this, new CWoormInfo_SetRDEOutputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetRDEOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool RDEOutput) {
            this.CWoormInfo_SetRDEOutputAsync(HeaderInfo, handle, RDEOutput, null);
        }
        
        public void CWoormInfo_SetRDEOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool RDEOutput, object userState) {
            if ((this.onBeginCWoormInfo_SetRDEOutputDelegate == null)) {
                this.onBeginCWoormInfo_SetRDEOutputDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetRDEOutput);
            }
            if ((this.onEndCWoormInfo_SetRDEOutputDelegate == null)) {
                this.onEndCWoormInfo_SetRDEOutputDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetRDEOutput);
            }
            if ((this.onCWoormInfo_SetRDEOutputCompletedDelegate == null)) {
                this.onCWoormInfo_SetRDEOutputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetRDEOutputCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetRDEOutputDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        RDEOutput}, this.onEndCWoormInfo_SetRDEOutputDelegate, this.onCWoormInfo_SetRDEOutputCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetExcelOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn request) {
            return base.Channel.CWoormInfo_SetExcelOutput(request);
        }
        
        public void CWoormInfo_SetExcelOutput(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool ExcelOutput) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.ExcelOutput = ExcelOutput;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetExcelOutput(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetExcelOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetExcelOutput(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetExcelOutput(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool ExcelOutput, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.ExcelOutput = ExcelOutput;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetExcelOutput(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetExcelOutput(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetExcelOutput(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetExcelOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetExcelOutputOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetExcelOutput(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetExcelOutput(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool ExcelOutput = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetExcelOutput(HeaderInfo, handle, ExcelOutput, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetExcelOutput(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetExcelOutput(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetExcelOutputCompleted(object state) {
            if ((this.CWoormInfo_SetExcelOutputCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetExcelOutputCompleted(this, new CWoormInfo_SetExcelOutputCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetExcelOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool ExcelOutput) {
            this.CWoormInfo_SetExcelOutputAsync(HeaderInfo, handle, ExcelOutput, null);
        }
        
        public void CWoormInfo_SetExcelOutputAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool ExcelOutput, object userState) {
            if ((this.onBeginCWoormInfo_SetExcelOutputDelegate == null)) {
                this.onBeginCWoormInfo_SetExcelOutputDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetExcelOutput);
            }
            if ((this.onEndCWoormInfo_SetExcelOutputDelegate == null)) {
                this.onEndCWoormInfo_SetExcelOutputDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetExcelOutput);
            }
            if ((this.onCWoormInfo_SetExcelOutputCompletedDelegate == null)) {
                this.onCWoormInfo_SetExcelOutputCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetExcelOutputCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetExcelOutputDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        ExcelOutput}, this.onEndCWoormInfo_SetExcelOutputDelegate, this.onCWoormInfo_SetExcelOutputCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn request) {
            return base.Channel.CWoormInfo_MailTo(request);
        }
        
        public void CWoormInfo_MailTo(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string to) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.to = to;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailTo(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailTo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string to, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.to = to;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailTo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailTo(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailTo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailTo(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailToOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailTo(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailTo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string to = ((string)(inValues[2]));
            return this.BeginCWoormInfo_MailTo(HeaderInfo, handle, to, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailTo(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailTo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailToCompleted(object state) {
            if ((this.CWoormInfo_MailToCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailToCompleted(this, new CWoormInfo_MailToCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailToAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string to) {
            this.CWoormInfo_MailToAsync(HeaderInfo, handle, to, null);
        }
        
        public void CWoormInfo_MailToAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string to, object userState) {
            if ((this.onBeginCWoormInfo_MailToDelegate == null)) {
                this.onBeginCWoormInfo_MailToDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailTo);
            }
            if ((this.onEndCWoormInfo_MailToDelegate == null)) {
                this.onEndCWoormInfo_MailToDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailTo);
            }
            if ((this.onCWoormInfo_MailToCompletedDelegate == null)) {
                this.onCWoormInfo_MailToCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailToCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailToDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        to}, this.onEndCWoormInfo_MailToDelegate, this.onCWoormInfo_MailToCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn request) {
            return base.Channel.CWoormInfo_MailCc(request);
        }
        
        public void CWoormInfo_MailCc(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string cc) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.cc = cc;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailCc(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailCc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string cc, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.cc = cc;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailCc(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailCc(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailCc(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailCc(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailCcOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailCc(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailCc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string cc = ((string)(inValues[2]));
            return this.BeginCWoormInfo_MailCc(HeaderInfo, handle, cc, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailCc(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailCc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailCcCompleted(object state) {
            if ((this.CWoormInfo_MailCcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailCcCompleted(this, new CWoormInfo_MailCcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailCcAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string cc) {
            this.CWoormInfo_MailCcAsync(HeaderInfo, handle, cc, null);
        }
        
        public void CWoormInfo_MailCcAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string cc, object userState) {
            if ((this.onBeginCWoormInfo_MailCcDelegate == null)) {
                this.onBeginCWoormInfo_MailCcDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailCc);
            }
            if ((this.onEndCWoormInfo_MailCcDelegate == null)) {
                this.onEndCWoormInfo_MailCcDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailCc);
            }
            if ((this.onCWoormInfo_MailCcCompletedDelegate == null)) {
                this.onCWoormInfo_MailCcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailCcCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailCcDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        cc}, this.onEndCWoormInfo_MailCcDelegate, this.onCWoormInfo_MailCcCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn request) {
            return base.Channel.CWoormInfo_MailBcc(request);
        }
        
        public void CWoormInfo_MailBcc(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string bcc) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.bcc = bcc;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailBcc(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailBcc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string bcc, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.bcc = bcc;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailBcc(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailBcc(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailBcc(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailBcc(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBccOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailBcc(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailBcc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string bcc = ((string)(inValues[2]));
            return this.BeginCWoormInfo_MailBcc(HeaderInfo, handle, bcc, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailBcc(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailBcc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailBccCompleted(object state) {
            if ((this.CWoormInfo_MailBccCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailBccCompleted(this, new CWoormInfo_MailBccCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailBccAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string bcc) {
            this.CWoormInfo_MailBccAsync(HeaderInfo, handle, bcc, null);
        }
        
        public void CWoormInfo_MailBccAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string bcc, object userState) {
            if ((this.onBeginCWoormInfo_MailBccDelegate == null)) {
                this.onBeginCWoormInfo_MailBccDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailBcc);
            }
            if ((this.onEndCWoormInfo_MailBccDelegate == null)) {
                this.onEndCWoormInfo_MailBccDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailBcc);
            }
            if ((this.onCWoormInfo_MailBccCompletedDelegate == null)) {
                this.onCWoormInfo_MailBccCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailBccCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailBccDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        bcc}, this.onEndCWoormInfo_MailBccDelegate, this.onCWoormInfo_MailBccCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn request) {
            return base.Channel.CWoormInfo_MailAttach(request);
        }
        
        public void CWoormInfo_MailAttach(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string file, string title) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.file = file;
            inValue.title = title;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailAttach(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailAttach(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string file, string title, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.file = file;
            inValue.title = title;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailAttach(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailAttach(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailAttach(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailAttach(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailAttach(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailAttach(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string file = ((string)(inValues[2]));
            string title = ((string)(inValues[3]));
            return this.BeginCWoormInfo_MailAttach(HeaderInfo, handle, file, title, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailAttach(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailAttach(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailAttachCompleted(object state) {
            if ((this.CWoormInfo_MailAttachCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailAttachCompleted(this, new CWoormInfo_MailAttachCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailAttachAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string file, string title) {
            this.CWoormInfo_MailAttachAsync(HeaderInfo, handle, file, title, null);
        }
        
        public void CWoormInfo_MailAttachAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string file, string title, object userState) {
            if ((this.onBeginCWoormInfo_MailAttachDelegate == null)) {
                this.onBeginCWoormInfo_MailAttachDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailAttach);
            }
            if ((this.onEndCWoormInfo_MailAttachDelegate == null)) {
                this.onEndCWoormInfo_MailAttachDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailAttach);
            }
            if ((this.onCWoormInfo_MailAttachCompletedDelegate == null)) {
                this.onCWoormInfo_MailAttachCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailAttachCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailAttachDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        file,
                        title}, this.onEndCWoormInfo_MailAttachDelegate, this.onCWoormInfo_MailAttachCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn request) {
            return base.Channel.CWoormInfo_MailSubject(request);
        }
        
        public void CWoormInfo_MailSubject(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string subject) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.subject = subject;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailSubject(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailSubject(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string subject, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.subject = subject;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailSubject(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailSubject(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailSubject(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailSubject(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailSubjectOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailSubject(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailSubject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string subject = ((string)(inValues[2]));
            return this.BeginCWoormInfo_MailSubject(HeaderInfo, handle, subject, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailSubject(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailSubject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailSubjectCompleted(object state) {
            if ((this.CWoormInfo_MailSubjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailSubjectCompleted(this, new CWoormInfo_MailSubjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailSubjectAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string subject) {
            this.CWoormInfo_MailSubjectAsync(HeaderInfo, handle, subject, null);
        }
        
        public void CWoormInfo_MailSubjectAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string subject, object userState) {
            if ((this.onBeginCWoormInfo_MailSubjectDelegate == null)) {
                this.onBeginCWoormInfo_MailSubjectDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailSubject);
            }
            if ((this.onEndCWoormInfo_MailSubjectDelegate == null)) {
                this.onEndCWoormInfo_MailSubjectDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailSubject);
            }
            if ((this.onCWoormInfo_MailSubjectCompletedDelegate == null)) {
                this.onCWoormInfo_MailSubjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailSubjectCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailSubjectDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        subject}, this.onEndCWoormInfo_MailSubjectDelegate, this.onCWoormInfo_MailSubjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_MailBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn request) {
            return base.Channel.CWoormInfo_MailBody(request);
        }
        
        public void CWoormInfo_MailBody(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string body, bool isHtml) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.body = body;
            inValue.isHtml = isHtml;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_MailBody(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_MailBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_MailBody(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_MailBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string body, bool isHtml, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.body = body;
            inValue.isHtml = isHtml;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_MailBody(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_MailBody(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_MailBody(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_MailBody(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_MailBodyOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_MailBody(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_MailBody(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string body = ((string)(inValues[2]));
            bool isHtml = ((bool)(inValues[3]));
            return this.BeginCWoormInfo_MailBody(HeaderInfo, handle, body, isHtml, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_MailBody(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_MailBody(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_MailBodyCompleted(object state) {
            if ((this.CWoormInfo_MailBodyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_MailBodyCompleted(this, new CWoormInfo_MailBodyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_MailBodyAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string body, bool isHtml) {
            this.CWoormInfo_MailBodyAsync(HeaderInfo, handle, body, isHtml, null);
        }
        
        public void CWoormInfo_MailBodyAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string body, bool isHtml, object userState) {
            if ((this.onBeginCWoormInfo_MailBodyDelegate == null)) {
                this.onBeginCWoormInfo_MailBodyDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_MailBody);
            }
            if ((this.onEndCWoormInfo_MailBodyDelegate == null)) {
                this.onEndCWoormInfo_MailBodyDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_MailBody);
            }
            if ((this.onCWoormInfo_MailBodyCompletedDelegate == null)) {
                this.onCWoormInfo_MailBodyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_MailBodyCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_MailBodyDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        body,
                        isHtml}, this.onEndCWoormInfo_MailBodyDelegate, this.onCWoormInfo_MailBodyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_AddParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn request) {
            return base.Channel.CWoormInfo_AddParameter(request);
        }
        
        public void CWoormInfo_AddParameter(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.paramName = paramName;
            inValue.value = value;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_AddParameter(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_AddParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_AddParameter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_AddParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.paramName = paramName;
            inValue.value = value;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_AddParameter(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_AddParameter(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_AddParameter(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_AddParameter(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddParameterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_AddParameter(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_AddParameter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string paramName = ((string)(inValues[2]));
            int value = ((int)(inValues[3]));
            return this.BeginCWoormInfo_AddParameter(HeaderInfo, handle, paramName, value, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_AddParameter(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_AddParameter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_AddParameterCompleted(object state) {
            if ((this.CWoormInfo_AddParameterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_AddParameterCompleted(this, new CWoormInfo_AddParameterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_AddParameterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value) {
            this.CWoormInfo_AddParameterAsync(HeaderInfo, handle, paramName, value, null);
        }
        
        public void CWoormInfo_AddParameterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string paramName, int value, object userState) {
            if ((this.onBeginCWoormInfo_AddParameterDelegate == null)) {
                this.onBeginCWoormInfo_AddParameterDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_AddParameter);
            }
            if ((this.onEndCWoormInfo_AddParameterDelegate == null)) {
                this.onEndCWoormInfo_AddParameterDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_AddParameter);
            }
            if ((this.onCWoormInfo_AddParameterCompletedDelegate == null)) {
                this.onCWoormInfo_AddParameterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_AddParameterCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_AddParameterDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        paramName,
                        value}, this.onEndCWoormInfo_AddParameterDelegate, this.onCWoormInfo_AddParameterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetCloseOnEndPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn request) {
            return base.Channel.CWoormInfo_SetCloseOnEndPrint(request);
        }
        
        public void CWoormInfo_SetCloseOnEndPrint(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool closeOnEndPrint) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.closeOnEndPrint = closeOnEndPrint;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetCloseOnEndPrint(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetCloseOnEndPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetCloseOnEndPrint(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetCloseOnEndPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool closeOnEndPrint, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.closeOnEndPrint = closeOnEndPrint;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetCloseOnEndPrint(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetCloseOnEndPrint(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetCloseOnEndPrint(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetCloseOnEndPrint(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCloseOnEndPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetCloseOnEndPrint(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetCloseOnEndPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool closeOnEndPrint = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetCloseOnEndPrint(HeaderInfo, handle, closeOnEndPrint, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetCloseOnEndPrint(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetCloseOnEndPrint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetCloseOnEndPrintCompleted(object state) {
            if ((this.CWoormInfo_SetCloseOnEndPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetCloseOnEndPrintCompleted(this, new CWoormInfo_SetCloseOnEndPrintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetCloseOnEndPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool closeOnEndPrint) {
            this.CWoormInfo_SetCloseOnEndPrintAsync(HeaderInfo, handle, closeOnEndPrint, null);
        }
        
        public void CWoormInfo_SetCloseOnEndPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool closeOnEndPrint, object userState) {
            if ((this.onBeginCWoormInfo_SetCloseOnEndPrintDelegate == null)) {
                this.onBeginCWoormInfo_SetCloseOnEndPrintDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetCloseOnEndPrint);
            }
            if ((this.onEndCWoormInfo_SetCloseOnEndPrintDelegate == null)) {
                this.onEndCWoormInfo_SetCloseOnEndPrintDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetCloseOnEndPrint);
            }
            if ((this.onCWoormInfo_SetCloseOnEndPrintCompletedDelegate == null)) {
                this.onCWoormInfo_SetCloseOnEndPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetCloseOnEndPrintCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetCloseOnEndPrintDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        closeOnEndPrint}, this.onEndCWoormInfo_SetCloseOnEndPrintDelegate, this.onCWoormInfo_SetCloseOnEndPrintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetIconized(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn request) {
            return base.Channel.CWoormInfo_SetIconized(request);
        }
        
        public void CWoormInfo_SetIconized(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool iconized) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.iconized = iconized;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetIconized(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetIconized(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetIconized(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetIconized(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool iconized, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.iconized = iconized;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetIconized(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetIconized(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetIconized(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetIconized(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetIconizedOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetIconized(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetIconized(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool iconized = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetIconized(HeaderInfo, handle, iconized, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetIconized(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetIconized(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetIconizedCompleted(object state) {
            if ((this.CWoormInfo_SetIconizedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetIconizedCompleted(this, new CWoormInfo_SetIconizedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetIconizedAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool iconized) {
            this.CWoormInfo_SetIconizedAsync(HeaderInfo, handle, iconized, null);
        }
        
        public void CWoormInfo_SetIconizedAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool iconized, object userState) {
            if ((this.onBeginCWoormInfo_SetIconizedDelegate == null)) {
                this.onBeginCWoormInfo_SetIconizedDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetIconized);
            }
            if ((this.onEndCWoormInfo_SetIconizedDelegate == null)) {
                this.onEndCWoormInfo_SetIconizedDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetIconized);
            }
            if ((this.onCWoormInfo_SetIconizedCompletedDelegate == null)) {
                this.onCWoormInfo_SetIconizedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetIconizedCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetIconizedDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        iconized}, this.onEndCWoormInfo_SetIconizedDelegate, this.onCWoormInfo_SetIconizedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetHideFrame(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn request) {
            return base.Channel.CWoormInfo_SetHideFrame(request);
        }
        
        public void CWoormInfo_SetHideFrame(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool hideFrame) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.hideFrame = hideFrame;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetHideFrame(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetHideFrame(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetHideFrame(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetHideFrame(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool hideFrame, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.hideFrame = hideFrame;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetHideFrame(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetHideFrame(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetHideFrame(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetHideFrame(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetHideFrameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetHideFrame(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetHideFrame(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool hideFrame = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetHideFrame(HeaderInfo, handle, hideFrame, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetHideFrame(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetHideFrame(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetHideFrameCompleted(object state) {
            if ((this.CWoormInfo_SetHideFrameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetHideFrameCompleted(this, new CWoormInfo_SetHideFrameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetHideFrameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool hideFrame) {
            this.CWoormInfo_SetHideFrameAsync(HeaderInfo, handle, hideFrame, null);
        }
        
        public void CWoormInfo_SetHideFrameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool hideFrame, object userState) {
            if ((this.onBeginCWoormInfo_SetHideFrameDelegate == null)) {
                this.onBeginCWoormInfo_SetHideFrameDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetHideFrame);
            }
            if ((this.onEndCWoormInfo_SetHideFrameDelegate == null)) {
                this.onEndCWoormInfo_SetHideFrameDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetHideFrame);
            }
            if ((this.onCWoormInfo_SetHideFrameCompletedDelegate == null)) {
                this.onCWoormInfo_SetHideFrameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetHideFrameCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetHideFrameDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        hideFrame}, this.onEndCWoormInfo_SetHideFrameDelegate, this.onCWoormInfo_SetHideFrameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetSilentMode(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn request) {
            return base.Channel.CWoormInfo_SetSilentMode(request);
        }
        
        public void CWoormInfo_SetSilentMode(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool silent) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.silent = silent;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetSilentMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetSilentMode(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetSilentMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetSilentMode(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool silent, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.silent = silent;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetSilentMode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetSilentMode(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetSilentMode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetSilentMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSilentModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetSilentMode(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetSilentMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool silent = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetSilentMode(HeaderInfo, handle, silent, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetSilentMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetSilentMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetSilentModeCompleted(object state) {
            if ((this.CWoormInfo_SetSilentModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetSilentModeCompleted(this, new CWoormInfo_SetSilentModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetSilentModeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool silent) {
            this.CWoormInfo_SetSilentModeAsync(HeaderInfo, handle, silent, null);
        }
        
        public void CWoormInfo_SetSilentModeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool silent, object userState) {
            if ((this.onBeginCWoormInfo_SetSilentModeDelegate == null)) {
                this.onBeginCWoormInfo_SetSilentModeDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetSilentMode);
            }
            if ((this.onEndCWoormInfo_SetSilentModeDelegate == null)) {
                this.onEndCWoormInfo_SetSilentModeDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetSilentMode);
            }
            if ((this.onCWoormInfo_SetSilentModeCompletedDelegate == null)) {
                this.onCWoormInfo_SetSilentModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetSilentModeCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetSilentModeDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        silent}, this.onEndCWoormInfo_SetSilentModeDelegate, this.onCWoormInfo_SetSilentModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetSendEmail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn request) {
            return base.Channel.CWoormInfo_SetSendEmail(request);
        }
        
        public void CWoormInfo_SetSendEmail(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool sendEmail) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.sendEmail = sendEmail;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetSendEmail(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetSendEmail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetSendEmail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetSendEmail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool sendEmail, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.sendEmail = sendEmail;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetSendEmail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetSendEmail(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetSendEmail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetSendEmail(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetSendEmailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetSendEmail(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetSendEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool sendEmail = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetSendEmail(HeaderInfo, handle, sendEmail, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetSendEmail(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetSendEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetSendEmailCompleted(object state) {
            if ((this.CWoormInfo_SetSendEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetSendEmailCompleted(this, new CWoormInfo_SetSendEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetSendEmailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool sendEmail) {
            this.CWoormInfo_SetSendEmailAsync(HeaderInfo, handle, sendEmail, null);
        }
        
        public void CWoormInfo_SetSendEmailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool sendEmail, object userState) {
            if ((this.onBeginCWoormInfo_SetSendEmailDelegate == null)) {
                this.onBeginCWoormInfo_SetSendEmailDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetSendEmail);
            }
            if ((this.onEndCWoormInfo_SetSendEmailDelegate == null)) {
                this.onEndCWoormInfo_SetSendEmailDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetSendEmail);
            }
            if ((this.onCWoormInfo_SetSendEmailCompletedDelegate == null)) {
                this.onCWoormInfo_SetSendEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetSendEmailCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetSendEmailDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        sendEmail}, this.onEndCWoormInfo_SetSendEmailDelegate, this.onCWoormInfo_SetSendEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetAttachRDE(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn request) {
            return base.Channel.CWoormInfo_SetAttachRDE(request);
        }
        
        public void CWoormInfo_SetAttachRDE(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachRDE) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachRDE = attachRDE;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetAttachRDE(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetAttachRDE(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetAttachRDE(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetAttachRDE(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachRDE, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachRDE = attachRDE;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetAttachRDE(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetAttachRDE(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetAttachRDE(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetAttachRDE(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachRDEOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetAttachRDE(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetAttachRDE(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool attachRDE = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetAttachRDE(HeaderInfo, handle, attachRDE, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetAttachRDE(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetAttachRDE(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetAttachRDECompleted(object state) {
            if ((this.CWoormInfo_SetAttachRDECompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetAttachRDECompleted(this, new CWoormInfo_SetAttachRDECompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetAttachRDEAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachRDE) {
            this.CWoormInfo_SetAttachRDEAsync(HeaderInfo, handle, attachRDE, null);
        }
        
        public void CWoormInfo_SetAttachRDEAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachRDE, object userState) {
            if ((this.onBeginCWoormInfo_SetAttachRDEDelegate == null)) {
                this.onBeginCWoormInfo_SetAttachRDEDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetAttachRDE);
            }
            if ((this.onEndCWoormInfo_SetAttachRDEDelegate == null)) {
                this.onEndCWoormInfo_SetAttachRDEDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetAttachRDE);
            }
            if ((this.onCWoormInfo_SetAttachRDECompletedDelegate == null)) {
                this.onCWoormInfo_SetAttachRDECompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetAttachRDECompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetAttachRDEDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        attachRDE}, this.onEndCWoormInfo_SetAttachRDEDelegate, this.onCWoormInfo_SetAttachRDECompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetAttachPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn request) {
            return base.Channel.CWoormInfo_SetAttachPDF(request);
        }
        
        public void CWoormInfo_SetAttachPDF(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachPDF) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachPDF = attachPDF;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetAttachPDF(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetAttachPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetAttachPDF(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetAttachPDF(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachPDF, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachPDF = attachPDF;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetAttachPDF(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetAttachPDF(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetAttachPDF(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetAttachPDF(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachPDFOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetAttachPDF(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetAttachPDF(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool attachPDF = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetAttachPDF(HeaderInfo, handle, attachPDF, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetAttachPDF(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetAttachPDF(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetAttachPDFCompleted(object state) {
            if ((this.CWoormInfo_SetAttachPDFCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetAttachPDFCompleted(this, new CWoormInfo_SetAttachPDFCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetAttachPDFAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachPDF) {
            this.CWoormInfo_SetAttachPDFAsync(HeaderInfo, handle, attachPDF, null);
        }
        
        public void CWoormInfo_SetAttachPDFAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachPDF, object userState) {
            if ((this.onBeginCWoormInfo_SetAttachPDFDelegate == null)) {
                this.onBeginCWoormInfo_SetAttachPDFDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetAttachPDF);
            }
            if ((this.onEndCWoormInfo_SetAttachPDFDelegate == null)) {
                this.onEndCWoormInfo_SetAttachPDFDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetAttachPDF);
            }
            if ((this.onCWoormInfo_SetAttachPDFCompletedDelegate == null)) {
                this.onCWoormInfo_SetAttachPDFCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetAttachPDFCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetAttachPDFDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        attachPDF}, this.onEndCWoormInfo_SetAttachPDFDelegate, this.onCWoormInfo_SetAttachPDFCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetAttachOther(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn request) {
            return base.Channel.CWoormInfo_SetAttachOther(request);
        }
        
        public void CWoormInfo_SetAttachOther(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachOther, string expType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachOther = attachOther;
            inValue.expType = expType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetAttachOther(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetAttachOther(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetAttachOther(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetAttachOther(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachOther, string expType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.attachOther = attachOther;
            inValue.expType = expType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetAttachOther(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetAttachOther(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetAttachOther(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetAttachOther(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAttachOtherOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetAttachOther(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetAttachOther(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool attachOther = ((bool)(inValues[2]));
            string expType = ((string)(inValues[3]));
            return this.BeginCWoormInfo_SetAttachOther(HeaderInfo, handle, attachOther, expType, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetAttachOther(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetAttachOther(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetAttachOtherCompleted(object state) {
            if ((this.CWoormInfo_SetAttachOtherCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetAttachOtherCompleted(this, new CWoormInfo_SetAttachOtherCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetAttachOtherAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachOther, string expType) {
            this.CWoormInfo_SetAttachOtherAsync(HeaderInfo, handle, attachOther, expType, null);
        }
        
        public void CWoormInfo_SetAttachOtherAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool attachOther, string expType, object userState) {
            if ((this.onBeginCWoormInfo_SetAttachOtherDelegate == null)) {
                this.onBeginCWoormInfo_SetAttachOtherDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetAttachOther);
            }
            if ((this.onEndCWoormInfo_SetAttachOtherDelegate == null)) {
                this.onEndCWoormInfo_SetAttachOtherDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetAttachOther);
            }
            if ((this.onCWoormInfo_SetAttachOtherCompletedDelegate == null)) {
                this.onCWoormInfo_SetAttachOtherCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetAttachOtherCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetAttachOtherDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        attachOther,
                        expType}, this.onEndCWoormInfo_SetAttachOtherDelegate, this.onCWoormInfo_SetAttachOtherCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetArchivePdfFormat(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn request) {
            return base.Channel.CWoormInfo_SetArchivePdfFormat(request);
        }
        
        public void CWoormInfo_SetArchivePdfFormat(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool archive) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.archive = archive;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetArchivePdfFormat(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetArchivePdfFormat(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetArchivePdfFormat(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetArchivePdfFormat(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool archive, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.archive = archive;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetArchivePdfFormat(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetArchivePdfFormat(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetArchivePdfFormat(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetArchivePdfFormat(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetArchivePdfFormatOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetArchivePdfFormat(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetArchivePdfFormat(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool archive = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetArchivePdfFormat(HeaderInfo, handle, archive, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetArchivePdfFormat(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetArchivePdfFormat(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetArchivePdfFormatCompleted(object state) {
            if ((this.CWoormInfo_SetArchivePdfFormatCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetArchivePdfFormatCompleted(this, new CWoormInfo_SetArchivePdfFormatCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetArchivePdfFormatAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool archive) {
            this.CWoormInfo_SetArchivePdfFormatAsync(HeaderInfo, handle, archive, null);
        }
        
        public void CWoormInfo_SetArchivePdfFormatAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool archive, object userState) {
            if ((this.onBeginCWoormInfo_SetArchivePdfFormatDelegate == null)) {
                this.onBeginCWoormInfo_SetArchivePdfFormatDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetArchivePdfFormat);
            }
            if ((this.onEndCWoormInfo_SetArchivePdfFormatDelegate == null)) {
                this.onEndCWoormInfo_SetArchivePdfFormatDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetArchivePdfFormat);
            }
            if ((this.onCWoormInfo_SetArchivePdfFormatCompletedDelegate == null)) {
                this.onCWoormInfo_SetArchivePdfFormatCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetArchivePdfFormatCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetArchivePdfFormatDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        archive}, this.onEndCWoormInfo_SetArchivePdfFormatDelegate, this.onCWoormInfo_SetArchivePdfFormatCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetCompressAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn request) {
            return base.Channel.CWoormInfo_SetCompressAttach(request);
        }
        
        public void CWoormInfo_SetCompressAttach(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool compressAttach) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.compressAttach = compressAttach;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetCompressAttach(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetCompressAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetCompressAttach(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetCompressAttach(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool compressAttach, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.compressAttach = compressAttach;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetCompressAttach(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetCompressAttach(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetCompressAttach(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetCompressAttach(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetCompressAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetCompressAttach(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetCompressAttach(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool compressAttach = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetCompressAttach(HeaderInfo, handle, compressAttach, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetCompressAttach(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetCompressAttach(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetCompressAttachCompleted(object state) {
            if ((this.CWoormInfo_SetCompressAttachCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetCompressAttachCompleted(this, new CWoormInfo_SetCompressAttachCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetCompressAttachAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool compressAttach) {
            this.CWoormInfo_SetCompressAttachAsync(HeaderInfo, handle, compressAttach, null);
        }
        
        public void CWoormInfo_SetCompressAttachAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool compressAttach, object userState) {
            if ((this.onBeginCWoormInfo_SetCompressAttachDelegate == null)) {
                this.onBeginCWoormInfo_SetCompressAttachDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetCompressAttach);
            }
            if ((this.onEndCWoormInfo_SetCompressAttachDelegate == null)) {
                this.onEndCWoormInfo_SetCompressAttachDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetCompressAttach);
            }
            if ((this.onCWoormInfo_SetCompressAttachCompletedDelegate == null)) {
                this.onCWoormInfo_SetCompressAttachCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetCompressAttachCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetCompressAttachDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        compressAttach}, this.onEndCWoormInfo_SetCompressAttachDelegate, this.onCWoormInfo_SetCompressAttachCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetOnePrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn request) {
            return base.Channel.CWoormInfo_SetOnePrintDialog(request);
        }
        
        public void CWoormInfo_SetOnePrintDialog(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool onePrintDialog) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.onePrintDialog = onePrintDialog;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetOnePrintDialog(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetOnePrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetOnePrintDialog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetOnePrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool onePrintDialog, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.onePrintDialog = onePrintDialog;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetOnePrintDialog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetOnePrintDialog(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetOnePrintDialog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetOnePrintDialog(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetOnePrintDialogOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetOnePrintDialog(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetOnePrintDialog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool onePrintDialog = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetOnePrintDialog(HeaderInfo, handle, onePrintDialog, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetOnePrintDialog(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetOnePrintDialog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetOnePrintDialogCompleted(object state) {
            if ((this.CWoormInfo_SetOnePrintDialogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetOnePrintDialogCompleted(this, new CWoormInfo_SetOnePrintDialogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetOnePrintDialogAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool onePrintDialog) {
            this.CWoormInfo_SetOnePrintDialogAsync(HeaderInfo, handle, onePrintDialog, null);
        }
        
        public void CWoormInfo_SetOnePrintDialogAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool onePrintDialog, object userState) {
            if ((this.onBeginCWoormInfo_SetOnePrintDialogDelegate == null)) {
                this.onBeginCWoormInfo_SetOnePrintDialogDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetOnePrintDialog);
            }
            if ((this.onEndCWoormInfo_SetOnePrintDialogDelegate == null)) {
                this.onEndCWoormInfo_SetOnePrintDialogDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetOnePrintDialog);
            }
            if ((this.onCWoormInfo_SetOnePrintDialogCompletedDelegate == null)) {
                this.onCWoormInfo_SetOnePrintDialogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetOnePrintDialogCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetOnePrintDialogDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        onePrintDialog}, this.onEndCWoormInfo_SetOnePrintDialogDelegate, this.onCWoormInfo_SetOnePrintDialogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetUniqueMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn request) {
            return base.Channel.CWoormInfo_SetUniqueMail(request);
        }
        
        public void CWoormInfo_SetUniqueMail(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool uniqueMail) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.uniqueMail = uniqueMail;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetUniqueMail(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetUniqueMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetUniqueMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetUniqueMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool uniqueMail, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.uniqueMail = uniqueMail;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetUniqueMail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetUniqueMail(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetUniqueMail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetUniqueMail(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetUniqueMailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetUniqueMail(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetUniqueMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool uniqueMail = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetUniqueMail(HeaderInfo, handle, uniqueMail, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetUniqueMail(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetUniqueMail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetUniqueMailCompleted(object state) {
            if ((this.CWoormInfo_SetUniqueMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetUniqueMailCompleted(this, new CWoormInfo_SetUniqueMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetUniqueMailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool uniqueMail) {
            this.CWoormInfo_SetUniqueMailAsync(HeaderInfo, handle, uniqueMail, null);
        }
        
        public void CWoormInfo_SetUniqueMailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool uniqueMail, object userState) {
            if ((this.onBeginCWoormInfo_SetUniqueMailDelegate == null)) {
                this.onBeginCWoormInfo_SetUniqueMailDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetUniqueMail);
            }
            if ((this.onEndCWoormInfo_SetUniqueMailDelegate == null)) {
                this.onEndCWoormInfo_SetUniqueMailDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetUniqueMail);
            }
            if ((this.onCWoormInfo_SetUniqueMailCompletedDelegate == null)) {
                this.onCWoormInfo_SetUniqueMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetUniqueMailCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetUniqueMailDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        uniqueMail}, this.onEndCWoormInfo_SetUniqueMailDelegate, this.onCWoormInfo_SetUniqueMailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetDocumentMethods(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn request) {
            return base.Channel.GetDocumentMethods(request);
        }
        
        public bool GetDocumentMethods(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handleDoc, ref string[] arMethods) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handleDoc = handleDoc;
            inValue.arMethods = arMethods;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetDocumentMethods(inValue);
            HeaderInfo = retVal.HeaderInfo;
            arMethods = retVal.arMethods;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetDocumentMethods(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentMethods(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentMethods(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handleDoc, string[] arMethods, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handleDoc = handleDoc;
            inValue.arMethods = arMethods;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetDocumentMethods(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetDocumentMethods(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentMethods(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetDocumentMethods(System.IAsyncResult result, out bool @return, out string[] arMethods) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetDocumentMethodsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetDocumentMethods(result);
            @return = retVal.@return;
            arMethods = retVal.arMethods;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetDocumentMethods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handleDoc = ((int)(inValues[1]));
            string[] arMethods = ((string[])(inValues[2]));
            return this.BeginGetDocumentMethods(HeaderInfo, handleDoc, arMethods, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentMethods(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            string[] arMethods = this.GetDefaultValueForInitialization<string[]>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetDocumentMethods(result, out @return, out arMethods);
            return new object[] {
                    @return,
                    arMethods,
                    retVal};
        }
        
        private void OnGetDocumentMethodsCompleted(object state) {
            if ((this.GetDocumentMethodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentMethodsCompleted(this, new GetDocumentMethodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentMethodsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handleDoc, string[] arMethods) {
            this.GetDocumentMethodsAsync(HeaderInfo, handleDoc, arMethods, null);
        }
        
        public void GetDocumentMethodsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handleDoc, string[] arMethods, object userState) {
            if ((this.onBeginGetDocumentMethodsDelegate == null)) {
                this.onBeginGetDocumentMethodsDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentMethods);
            }
            if ((this.onEndGetDocumentMethodsDelegate == null)) {
                this.onEndGetDocumentMethodsDelegate = new EndOperationDelegate(this.OnEndGetDocumentMethods);
            }
            if ((this.onGetDocumentMethodsCompletedDelegate == null)) {
                this.onGetDocumentMethodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentMethodsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentMethodsDelegate, new object[] {
                        HeaderInfo,
                        handleDoc,
                        arMethods}, this.onEndGetDocumentMethodsDelegate, this.onGetDocumentMethodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.IsPostaLiteEnabled(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn request) {
            return base.Channel.IsPostaLiteEnabled(request);
        }
        
        public bool IsPostaLiteEnabled(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).IsPostaLiteEnabled(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginIsPostaLiteEnabled(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsPostaLiteEnabled(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsPostaLiteEnabled(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginIsPostaLiteEnabled(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndIsPostaLiteEnabled(System.IAsyncResult result) {
            return base.Channel.EndIsPostaLiteEnabled(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndIsPostaLiteEnabled(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsPostaLiteEnabledOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndIsPostaLiteEnabled(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginIsPostaLiteEnabled(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginIsPostaLiteEnabled(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndIsPostaLiteEnabled(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndIsPostaLiteEnabled(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnIsPostaLiteEnabledCompleted(object state) {
            if ((this.IsPostaLiteEnabledCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsPostaLiteEnabledCompleted(this, new IsPostaLiteEnabledCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsPostaLiteEnabledAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.IsPostaLiteEnabledAsync(HeaderInfo, null);
        }
        
        public void IsPostaLiteEnabledAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginIsPostaLiteEnabledDelegate == null)) {
                this.onBeginIsPostaLiteEnabledDelegate = new BeginOperationDelegate(this.OnBeginIsPostaLiteEnabled);
            }
            if ((this.onEndIsPostaLiteEnabledDelegate == null)) {
                this.onEndIsPostaLiteEnabledDelegate = new EndOperationDelegate(this.OnEndIsPostaLiteEnabled);
            }
            if ((this.onIsPostaLiteEnabledCompletedDelegate == null)) {
                this.onIsPostaLiteEnabledCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsPostaLiteEnabledCompleted);
            }
            base.InvokeAsync(this.onBeginIsPostaLiteEnabledDelegate, new object[] {
                        HeaderInfo}, this.onEndIsPostaLiteEnabledDelegate, this.onIsPostaLiteEnabledCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodeDeliveryType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn request) {
            return base.Channel.PostaLiteDecodeDeliveryType(request);
        }
        
        public string PostaLiteDecodeDeliveryType(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int deliveryType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.deliveryType = deliveryType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodeDeliveryType(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodeDeliveryType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodeDeliveryType(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodeDeliveryType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int deliveryType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.deliveryType = deliveryType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodeDeliveryType(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodeDeliveryType(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodeDeliveryType(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodeDeliveryType(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeDeliveryTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodeDeliveryType(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodeDeliveryType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int deliveryType = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodeDeliveryType(HeaderInfo, deliveryType, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodeDeliveryType(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodeDeliveryType(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodeDeliveryTypeCompleted(object state) {
            if ((this.PostaLiteDecodeDeliveryTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodeDeliveryTypeCompleted(this, new PostaLiteDecodeDeliveryTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodeDeliveryTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int deliveryType) {
            this.PostaLiteDecodeDeliveryTypeAsync(HeaderInfo, deliveryType, null);
        }
        
        public void PostaLiteDecodeDeliveryTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int deliveryType, object userState) {
            if ((this.onBeginPostaLiteDecodeDeliveryTypeDelegate == null)) {
                this.onBeginPostaLiteDecodeDeliveryTypeDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodeDeliveryType);
            }
            if ((this.onEndPostaLiteDecodeDeliveryTypeDelegate == null)) {
                this.onEndPostaLiteDecodeDeliveryTypeDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodeDeliveryType);
            }
            if ((this.onPostaLiteDecodeDeliveryTypeCompletedDelegate == null)) {
                this.onPostaLiteDecodeDeliveryTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodeDeliveryTypeCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodeDeliveryTypeDelegate, new object[] {
                        HeaderInfo,
                        deliveryType}, this.onEndPostaLiteDecodeDeliveryTypeDelegate, this.onPostaLiteDecodeDeliveryTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodePrintType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn request) {
            return base.Channel.PostaLiteDecodePrintType(request);
        }
        
        public string PostaLiteDecodePrintType(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int printType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.printType = printType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodePrintType(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodePrintType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodePrintType(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodePrintType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int printType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.printType = printType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodePrintType(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodePrintType(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodePrintType(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodePrintType(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodePrintTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodePrintType(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodePrintType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int printType = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodePrintType(HeaderInfo, printType, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodePrintType(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodePrintType(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodePrintTypeCompleted(object state) {
            if ((this.PostaLiteDecodePrintTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodePrintTypeCompleted(this, new PostaLiteDecodePrintTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodePrintTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int printType) {
            this.PostaLiteDecodePrintTypeAsync(HeaderInfo, printType, null);
        }
        
        public void PostaLiteDecodePrintTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int printType, object userState) {
            if ((this.onBeginPostaLiteDecodePrintTypeDelegate == null)) {
                this.onBeginPostaLiteDecodePrintTypeDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodePrintType);
            }
            if ((this.onEndPostaLiteDecodePrintTypeDelegate == null)) {
                this.onEndPostaLiteDecodePrintTypeDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodePrintType);
            }
            if ((this.onPostaLiteDecodePrintTypeCompletedDelegate == null)) {
                this.onPostaLiteDecodePrintTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodePrintTypeCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodePrintTypeDelegate, new object[] {
                        HeaderInfo,
                        printType}, this.onEndPostaLiteDecodePrintTypeDelegate, this.onPostaLiteDecodePrintTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodeStatus(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn request) {
            return base.Channel.PostaLiteDecodeStatus(request);
        }
        
        public string PostaLiteDecodeStatus(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.status = status;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodeStatus(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodeStatus(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodeStatus(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodeStatus(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.status = status;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodeStatus(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodeStatus(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodeStatus(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodeStatus(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodeStatus(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodeStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int status = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodeStatus(HeaderInfo, status, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodeStatus(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodeStatus(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodeStatusCompleted(object state) {
            if ((this.PostaLiteDecodeStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodeStatusCompleted(this, new PostaLiteDecodeStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodeStatusAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            this.PostaLiteDecodeStatusAsync(HeaderInfo, status, null);
        }
        
        public void PostaLiteDecodeStatusAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status, object userState) {
            if ((this.onBeginPostaLiteDecodeStatusDelegate == null)) {
                this.onBeginPostaLiteDecodeStatusDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodeStatus);
            }
            if ((this.onEndPostaLiteDecodeStatusDelegate == null)) {
                this.onEndPostaLiteDecodeStatusDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodeStatus);
            }
            if ((this.onPostaLiteDecodeStatusCompletedDelegate == null)) {
                this.onPostaLiteDecodeStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodeStatusCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodeStatusDelegate, new object[] {
                        HeaderInfo,
                        status}, this.onEndPostaLiteDecodeStatusDelegate, this.onPostaLiteDecodeStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodeCodeState(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn request) {
            return base.Channel.PostaLiteDecodeCodeState(request);
        }
        
        public string PostaLiteDecodeCodeState(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int codeState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.codeState = codeState;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodeCodeState(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodeCodeState(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodeCodeState(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodeCodeState(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int codeState, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.codeState = codeState;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodeCodeState(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodeCodeState(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodeCodeState(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodeCodeState(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeCodeStateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodeCodeState(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodeCodeState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int codeState = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodeCodeState(HeaderInfo, codeState, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodeCodeState(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodeCodeState(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodeCodeStateCompleted(object state) {
            if ((this.PostaLiteDecodeCodeStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodeCodeStateCompleted(this, new PostaLiteDecodeCodeStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodeCodeStateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int codeState) {
            this.PostaLiteDecodeCodeStateAsync(HeaderInfo, codeState, null);
        }
        
        public void PostaLiteDecodeCodeStateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int codeState, object userState) {
            if ((this.onBeginPostaLiteDecodeCodeStateDelegate == null)) {
                this.onBeginPostaLiteDecodeCodeStateDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodeCodeState);
            }
            if ((this.onEndPostaLiteDecodeCodeStateDelegate == null)) {
                this.onEndPostaLiteDecodeCodeStateDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodeCodeState);
            }
            if ((this.onPostaLiteDecodeCodeStateCompletedDelegate == null)) {
                this.onPostaLiteDecodeCodeStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodeCodeStateCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodeCodeStateDelegate, new object[] {
                        HeaderInfo,
                        codeState}, this.onEndPostaLiteDecodeCodeStateDelegate, this.onPostaLiteDecodeCodeStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodeStatusExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn request) {
            return base.Channel.PostaLiteDecodeStatusExt(request);
        }
        
        public string PostaLiteDecodeStatusExt(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.status = status;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodeStatusExt(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodeStatusExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodeStatusExt(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodeStatusExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.status = status;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodeStatusExt(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodeStatusExt(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodeStatusExt(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodeStatusExt(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeStatusExtOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodeStatusExt(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodeStatusExt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int status = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodeStatusExt(HeaderInfo, status, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodeStatusExt(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodeStatusExt(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodeStatusExtCompleted(object state) {
            if ((this.PostaLiteDecodeStatusExtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodeStatusExtCompleted(this, new PostaLiteDecodeStatusExtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodeStatusExtAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status) {
            this.PostaLiteDecodeStatusExtAsync(HeaderInfo, status, null);
        }
        
        public void PostaLiteDecodeStatusExtAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int status, object userState) {
            if ((this.onBeginPostaLiteDecodeStatusExtDelegate == null)) {
                this.onBeginPostaLiteDecodeStatusExtDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodeStatusExt);
            }
            if ((this.onEndPostaLiteDecodeStatusExtDelegate == null)) {
                this.onEndPostaLiteDecodeStatusExtDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodeStatusExt);
            }
            if ((this.onPostaLiteDecodeStatusExtCompletedDelegate == null)) {
                this.onPostaLiteDecodeStatusExtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodeStatusExtCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodeStatusExtDelegate, new object[] {
                        HeaderInfo,
                        status}, this.onEndPostaLiteDecodeStatusExtDelegate, this.onPostaLiteDecodeStatusExtCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteDecodeErrorExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn request) {
            return base.Channel.PostaLiteDecodeErrorExt(request);
        }
        
        public string PostaLiteDecodeErrorExt(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int error) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.error = error;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteDecodeErrorExt(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteDecodeErrorExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteDecodeErrorExt(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteDecodeErrorExt(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int error, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.error = error;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteDecodeErrorExt(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteDecodeErrorExt(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteDecodeErrorExt(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteDecodeErrorExt(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteDecodeErrorExtOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteDecodeErrorExt(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteDecodeErrorExt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int error = ((int)(inValues[1]));
            return this.BeginPostaLiteDecodeErrorExt(HeaderInfo, error, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteDecodeErrorExt(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteDecodeErrorExt(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteDecodeErrorExtCompleted(object state) {
            if ((this.PostaLiteDecodeErrorExtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteDecodeErrorExtCompleted(this, new PostaLiteDecodeErrorExtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteDecodeErrorExtAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int error) {
            this.PostaLiteDecodeErrorExtAsync(HeaderInfo, error, null);
        }
        
        public void PostaLiteDecodeErrorExtAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int error, object userState) {
            if ((this.onBeginPostaLiteDecodeErrorExtDelegate == null)) {
                this.onBeginPostaLiteDecodeErrorExtDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteDecodeErrorExt);
            }
            if ((this.onEndPostaLiteDecodeErrorExtDelegate == null)) {
                this.onEndPostaLiteDecodeErrorExtDelegate = new EndOperationDelegate(this.OnEndPostaLiteDecodeErrorExt);
            }
            if ((this.onPostaLiteDecodeErrorExtCompletedDelegate == null)) {
                this.onPostaLiteDecodeErrorExtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteDecodeErrorExtCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteDecodeErrorExtDelegate, new object[] {
                        HeaderInfo,
                        error}, this.onEndPostaLiteDecodeErrorExtDelegate, this.onPostaLiteDecodeErrorExtCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_Create(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn request) {
            return base.Channel.CWoormInfo_Create(request);
        }
        
        public int CWoormInfo_Create(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNamespace) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_Create(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_Create(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_Create(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_Create(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNamespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_Create(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_Create(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_Create(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_Create(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_CreateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_Create(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_Create(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string reportNamespace = ((string)(inValues[1]));
            return this.BeginCWoormInfo_Create(HeaderInfo, reportNamespace, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_Create(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_Create(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCWoormInfo_CreateCompleted(object state) {
            if ((this.CWoormInfo_CreateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_CreateCompleted(this, new CWoormInfo_CreateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_CreateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNamespace) {
            this.CWoormInfo_CreateAsync(HeaderInfo, reportNamespace, null);
        }
        
        public void CWoormInfo_CreateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNamespace, object userState) {
            if ((this.onBeginCWoormInfo_CreateDelegate == null)) {
                this.onBeginCWoormInfo_CreateDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_Create);
            }
            if ((this.onEndCWoormInfo_CreateDelegate == null)) {
                this.onEndCWoormInfo_CreateDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_Create);
            }
            if ((this.onCWoormInfo_CreateCompletedDelegate == null)) {
                this.onCWoormInfo_CreateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_CreateCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_CreateDelegate, new object[] {
                        HeaderInfo,
                        reportNamespace}, this.onEndCWoormInfo_CreateDelegate, this.onCWoormInfo_CreateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_Dispose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn request) {
            return base.Channel.CWoormInfo_Dispose(request);
        }
        
        public bool CWoormInfo_Dispose(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_Dispose(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_Dispose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_Dispose(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_Dispose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_Dispose(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_Dispose(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_Dispose(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_Dispose(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_DisposeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_Dispose(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_Dispose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginCWoormInfo_Dispose(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_Dispose(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_Dispose(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCWoormInfo_DisposeCompleted(object state) {
            if ((this.CWoormInfo_DisposeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_DisposeCompleted(this, new CWoormInfo_DisposeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_DisposeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.CWoormInfo_DisposeAsync(HeaderInfo, handle, null);
        }
        
        public void CWoormInfo_DisposeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginCWoormInfo_DisposeDelegate == null)) {
                this.onBeginCWoormInfo_DisposeDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_Dispose);
            }
            if ((this.onEndCWoormInfo_DisposeDelegate == null)) {
                this.onEndCWoormInfo_DisposeDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_Dispose);
            }
            if ((this.onCWoormInfo_DisposeCompletedDelegate == null)) {
                this.onCWoormInfo_DisposeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_DisposeCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_DisposeDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndCWoormInfo_DisposeDelegate, this.onCWoormInfo_DisposeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_AddReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn request) {
            return base.Channel.CWoormInfo_AddReport(request);
        }
        
        public void CWoormInfo_AddReport(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.reportNamespace = reportNamespace;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_AddReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_AddReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_AddReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_AddReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.reportNamespace = reportNamespace;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_AddReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_AddReport(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_AddReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_AddReport(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_AddReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_AddReport(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_AddReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string reportNamespace = ((string)(inValues[2]));
            return this.BeginCWoormInfo_AddReport(HeaderInfo, handle, reportNamespace, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_AddReport(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_AddReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_AddReportCompleted(object state) {
            if ((this.CWoormInfo_AddReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_AddReportCompleted(this, new CWoormInfo_AddReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_AddReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace) {
            this.CWoormInfo_AddReportAsync(HeaderInfo, handle, reportNamespace, null);
        }
        
        public void CWoormInfo_AddReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, object userState) {
            if ((this.onBeginCWoormInfo_AddReportDelegate == null)) {
                this.onBeginCWoormInfo_AddReportDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_AddReport);
            }
            if ((this.onEndCWoormInfo_AddReportDelegate == null)) {
                this.onEndCWoormInfo_AddReportDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_AddReport);
            }
            if ((this.onCWoormInfo_AddReportCompletedDelegate == null)) {
                this.onCWoormInfo_AddReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_AddReportCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_AddReportDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        reportNamespace}, this.onEndCWoormInfo_AddReportDelegate, this.onCWoormInfo_AddReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn request) {
            return base.Channel.CWoormInfo_SetAutoPrint(request);
        }
        
        public void CWoormInfo_SetAutoPrint(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool autoPrint) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.autoPrint = autoPrint;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetAutoPrint(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetAutoPrint(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool autoPrint, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.autoPrint = autoPrint;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetAutoPrint(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetAutoPrint(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetAutoPrint(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetAutoPrint(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetAutoPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetAutoPrint(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetAutoPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool autoPrint = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetAutoPrint(HeaderInfo, handle, autoPrint, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetAutoPrint(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetAutoPrint(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetAutoPrintCompleted(object state) {
            if ((this.CWoormInfo_SetAutoPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetAutoPrintCompleted(this, new CWoormInfo_SetAutoPrintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetAutoPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool autoPrint) {
            this.CWoormInfo_SetAutoPrintAsync(HeaderInfo, handle, autoPrint, null);
        }
        
        public void CWoormInfo_SetAutoPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool autoPrint, object userState) {
            if ((this.onBeginCWoormInfo_SetAutoPrintDelegate == null)) {
                this.onBeginCWoormInfo_SetAutoPrintDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetAutoPrint);
            }
            if ((this.onEndCWoormInfo_SetAutoPrintDelegate == null)) {
                this.onEndCWoormInfo_SetAutoPrintDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetAutoPrint);
            }
            if ((this.onCWoormInfo_SetAutoPrintCompletedDelegate == null)) {
                this.onCWoormInfo_SetAutoPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetAutoPrintCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetAutoPrintDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        autoPrint}, this.onEndCWoormInfo_SetAutoPrintDelegate, this.onCWoormInfo_SetAutoPrintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CWoormInfo_SetNoPrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn request) {
            return base.Channel.CWoormInfo_SetNoPrintDialog(request);
        }
        
        public void CWoormInfo_SetNoPrintDialog(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool noPrintDialog) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.noPrintDialog = noPrintDialog;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CWoormInfo_SetNoPrintDialog(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCWoormInfo_SetNoPrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCWoormInfo_SetNoPrintDialog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCWoormInfo_SetNoPrintDialog(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool noPrintDialog, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.noPrintDialog = noPrintDialog;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCWoormInfo_SetNoPrintDialog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCWoormInfo_SetNoPrintDialog(System.IAsyncResult result) {
            return base.Channel.EndCWoormInfo_SetNoPrintDialog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCWoormInfo_SetNoPrintDialog(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CWoormInfo_SetNoPrintDialogOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCWoormInfo_SetNoPrintDialog(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCWoormInfo_SetNoPrintDialog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool noPrintDialog = ((bool)(inValues[2]));
            return this.BeginCWoormInfo_SetNoPrintDialog(HeaderInfo, handle, noPrintDialog, callback, asyncState);
        }
        
        private object[] OnEndCWoormInfo_SetNoPrintDialog(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCWoormInfo_SetNoPrintDialog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCWoormInfo_SetNoPrintDialogCompleted(object state) {
            if ((this.CWoormInfo_SetNoPrintDialogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CWoormInfo_SetNoPrintDialogCompleted(this, new CWoormInfo_SetNoPrintDialogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CWoormInfo_SetNoPrintDialogAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool noPrintDialog) {
            this.CWoormInfo_SetNoPrintDialogAsync(HeaderInfo, handle, noPrintDialog, null);
        }
        
        public void CWoormInfo_SetNoPrintDialogAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, bool noPrintDialog, object userState) {
            if ((this.onBeginCWoormInfo_SetNoPrintDialogDelegate == null)) {
                this.onBeginCWoormInfo_SetNoPrintDialogDelegate = new BeginOperationDelegate(this.OnBeginCWoormInfo_SetNoPrintDialog);
            }
            if ((this.onEndCWoormInfo_SetNoPrintDialogDelegate == null)) {
                this.onEndCWoormInfo_SetNoPrintDialogDelegate = new EndOperationDelegate(this.OnEndCWoormInfo_SetNoPrintDialog);
            }
            if ((this.onCWoormInfo_SetNoPrintDialogCompletedDelegate == null)) {
                this.onCWoormInfo_SetNoPrintDialogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCWoormInfo_SetNoPrintDialogCompleted);
            }
            base.InvokeAsync(this.onBeginCWoormInfo_SetNoPrintDialogDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        noPrintDialog}, this.onEndCWoormInfo_SetNoPrintDialogDelegate, this.onCWoormInfo_SetNoPrintDialogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionBeginTrans(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn request) {
            return base.Channel.ConnectionBeginTrans(request);
        }
        
        public bool ConnectionBeginTrans(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionBeginTrans(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionBeginTrans(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionBeginTrans(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionBeginTrans(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionBeginTrans(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionBeginTrans(System.IAsyncResult result) {
            return base.Channel.EndConnectionBeginTrans(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionBeginTrans(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionBeginTransOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionBeginTrans(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionBeginTrans(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            return this.BeginConnectionBeginTrans(HeaderInfo, Connection, callback, asyncState);
        }
        
        private object[] OnEndConnectionBeginTrans(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionBeginTrans(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionBeginTransCompleted(object state) {
            if ((this.ConnectionBeginTransCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionBeginTransCompleted(this, new ConnectionBeginTransCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionBeginTransAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.ConnectionBeginTransAsync(HeaderInfo, Connection, null);
        }
        
        public void ConnectionBeginTransAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, object userState) {
            if ((this.onBeginConnectionBeginTransDelegate == null)) {
                this.onBeginConnectionBeginTransDelegate = new BeginOperationDelegate(this.OnBeginConnectionBeginTrans);
            }
            if ((this.onEndConnectionBeginTransDelegate == null)) {
                this.onEndConnectionBeginTransDelegate = new EndOperationDelegate(this.OnEndConnectionBeginTrans);
            }
            if ((this.onConnectionBeginTransCompletedDelegate == null)) {
                this.onConnectionBeginTransCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionBeginTransCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionBeginTransDelegate, new object[] {
                        HeaderInfo,
                        Connection}, this.onEndConnectionBeginTransDelegate, this.onConnectionBeginTransCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionCommit(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn request) {
            return base.Channel.ConnectionCommit(request);
        }
        
        public bool ConnectionCommit(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionCommit(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionCommit(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionCommit(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionCommit(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionCommit(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionCommit(System.IAsyncResult result) {
            return base.Channel.EndConnectionCommit(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionCommit(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCommitOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionCommit(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionCommit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            return this.BeginConnectionCommit(HeaderInfo, Connection, callback, asyncState);
        }
        
        private object[] OnEndConnectionCommit(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionCommit(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionCommitCompleted(object state) {
            if ((this.ConnectionCommitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionCommitCompleted(this, new ConnectionCommitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionCommitAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.ConnectionCommitAsync(HeaderInfo, Connection, null);
        }
        
        public void ConnectionCommitAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, object userState) {
            if ((this.onBeginConnectionCommitDelegate == null)) {
                this.onBeginConnectionCommitDelegate = new BeginOperationDelegate(this.OnBeginConnectionCommit);
            }
            if ((this.onEndConnectionCommitDelegate == null)) {
                this.onEndConnectionCommitDelegate = new EndOperationDelegate(this.OnEndConnectionCommit);
            }
            if ((this.onConnectionCommitCompletedDelegate == null)) {
                this.onConnectionCommitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionCommitCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionCommitDelegate, new object[] {
                        HeaderInfo,
                        Connection}, this.onEndConnectionCommitDelegate, this.onConnectionCommitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionRollback(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn request) {
            return base.Channel.ConnectionRollback(request);
        }
        
        public bool ConnectionRollback(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionRollback(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionRollback(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionRollback(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionRollback(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionRollback(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionRollback(System.IAsyncResult result) {
            return base.Channel.EndConnectionRollback(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionRollback(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionRollbackOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionRollback(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionRollback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            return this.BeginConnectionRollback(HeaderInfo, Connection, callback, asyncState);
        }
        
        private object[] OnEndConnectionRollback(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionRollback(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionRollbackCompleted(object state) {
            if ((this.ConnectionRollbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionRollbackCompleted(this, new ConnectionRollbackCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionRollbackAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.ConnectionRollbackAsync(HeaderInfo, Connection, null);
        }
        
        public void ConnectionRollbackAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, object userState) {
            if ((this.onBeginConnectionRollbackDelegate == null)) {
                this.onBeginConnectionRollbackDelegate = new BeginOperationDelegate(this.OnBeginConnectionRollback);
            }
            if ((this.onEndConnectionRollbackDelegate == null)) {
                this.onEndConnectionRollbackDelegate = new EndOperationDelegate(this.OnEndConnectionRollback);
            }
            if ((this.onConnectionRollbackCompletedDelegate == null)) {
                this.onConnectionRollbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionRollbackCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionRollbackDelegate, new object[] {
                        HeaderInfo,
                        Connection}, this.onEndConnectionRollbackDelegate, this.onConnectionRollbackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn request) {
            return base.Channel.ConnectionClose(request);
        }
        
        public bool ConnectionClose(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionClose(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionClose(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionClose(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionClose(System.IAsyncResult result) {
            return base.Channel.EndConnectionClose(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionClose(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionCloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionClose(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            return this.BeginConnectionClose(HeaderInfo, Connection, callback, asyncState);
        }
        
        private object[] OnEndConnectionClose(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionClose(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionCloseCompleted(object state) {
            if ((this.ConnectionCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionCloseCompleted(this, new ConnectionCloseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionCloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.ConnectionCloseAsync(HeaderInfo, Connection, null);
        }
        
        public void ConnectionCloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, object userState) {
            if ((this.onBeginConnectionCloseDelegate == null)) {
                this.onBeginConnectionCloseDelegate = new BeginOperationDelegate(this.OnBeginConnectionClose);
            }
            if ((this.onEndConnectionCloseDelegate == null)) {
                this.onEndConnectionCloseDelegate = new EndOperationDelegate(this.OnEndConnectionClose);
            }
            if ((this.onConnectionCloseCompletedDelegate == null)) {
                this.onConnectionCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionCloseCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionCloseDelegate, new object[] {
                        HeaderInfo,
                        Connection}, this.onEndConnectionCloseDelegate, this.onConnectionCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteSetAddressee(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn request) {
            return base.Channel.PostaLiteSetAddressee(request);
        }
        
        public bool PostaLiteSetAddressee(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Addressee, string Address, string City, string County, string Country, string ZipCode, string Fax, string ISOCode, bool append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Addressee = Addressee;
            inValue.Address = Address;
            inValue.City = City;
            inValue.County = County;
            inValue.Country = Country;
            inValue.ZipCode = ZipCode;
            inValue.Fax = Fax;
            inValue.ISOCode = ISOCode;
            inValue.append = append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteSetAddressee(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteSetAddressee(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteSetAddressee(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteSetAddressee(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Addressee, string Address, string City, string County, string Country, string ZipCode, string Fax, string ISOCode, bool append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Addressee = Addressee;
            inValue.Address = Address;
            inValue.City = City;
            inValue.County = County;
            inValue.Country = Country;
            inValue.ZipCode = ZipCode;
            inValue.Fax = Fax;
            inValue.ISOCode = ISOCode;
            inValue.append = append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteSetAddressee(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteSetAddressee(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteSetAddressee(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteSetAddressee(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetAddresseeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteSetAddressee(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteSetAddressee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Addressee = ((string)(inValues[1]));
            string Address = ((string)(inValues[2]));
            string City = ((string)(inValues[3]));
            string County = ((string)(inValues[4]));
            string Country = ((string)(inValues[5]));
            string ZipCode = ((string)(inValues[6]));
            string Fax = ((string)(inValues[7]));
            string ISOCode = ((string)(inValues[8]));
            bool append = ((bool)(inValues[9]));
            return this.BeginPostaLiteSetAddressee(HeaderInfo, Addressee, Address, City, County, Country, ZipCode, Fax, ISOCode, append, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteSetAddressee(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteSetAddressee(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteSetAddresseeCompleted(object state) {
            if ((this.PostaLiteSetAddresseeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteSetAddresseeCompleted(this, new PostaLiteSetAddresseeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteSetAddresseeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Addressee, string Address, string City, string County, string Country, string ZipCode, string Fax, string ISOCode, bool append) {
            this.PostaLiteSetAddresseeAsync(HeaderInfo, Addressee, Address, City, County, Country, ZipCode, Fax, ISOCode, append, null);
        }
        
        public void PostaLiteSetAddresseeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Addressee, string Address, string City, string County, string Country, string ZipCode, string Fax, string ISOCode, bool append, object userState) {
            if ((this.onBeginPostaLiteSetAddresseeDelegate == null)) {
                this.onBeginPostaLiteSetAddresseeDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteSetAddressee);
            }
            if ((this.onEndPostaLiteSetAddresseeDelegate == null)) {
                this.onEndPostaLiteSetAddresseeDelegate = new EndOperationDelegate(this.OnEndPostaLiteSetAddressee);
            }
            if ((this.onPostaLiteSetAddresseeCompletedDelegate == null)) {
                this.onPostaLiteSetAddresseeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteSetAddresseeCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteSetAddresseeDelegate, new object[] {
                        HeaderInfo,
                        Addressee,
                        Address,
                        City,
                        County,
                        Country,
                        ZipCode,
                        Fax,
                        ISOCode,
                        append}, this.onEndPostaLiteSetAddresseeDelegate, this.onPostaLiteSetAddresseeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteSetSendType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn request) {
            return base.Channel.PostaLiteSetSendType(request);
        }
        
        public bool PostaLiteSetSendType(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.DeliveryType = DeliveryType;
            inValue.PrintType = PrintType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteSetSendType(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteSetSendType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteSetSendType(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteSetSendType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.DeliveryType = DeliveryType;
            inValue.PrintType = PrintType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteSetSendType(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteSetSendType(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteSetSendType(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteSetSendType(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSetSendTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteSetSendType(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteSetSendType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int DeliveryType = ((int)(inValues[1]));
            int PrintType = ((int)(inValues[2]));
            return this.BeginPostaLiteSetSendType(HeaderInfo, DeliveryType, PrintType, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteSetSendType(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteSetSendType(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteSetSendTypeCompleted(object state) {
            if ((this.PostaLiteSetSendTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteSetSendTypeCompleted(this, new PostaLiteSetSendTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteSetSendTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            this.PostaLiteSetSendTypeAsync(HeaderInfo, DeliveryType, PrintType, null);
        }
        
        public void PostaLiteSetSendTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType, object userState) {
            if ((this.onBeginPostaLiteSetSendTypeDelegate == null)) {
                this.onBeginPostaLiteSetSendTypeDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteSetSendType);
            }
            if ((this.onEndPostaLiteSetSendTypeDelegate == null)) {
                this.onEndPostaLiteSetSendTypeDelegate = new EndOperationDelegate(this.OnEndPostaLiteSetSendType);
            }
            if ((this.onPostaLiteSetSendTypeCompletedDelegate == null)) {
                this.onPostaLiteSetSendTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteSetSendTypeCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteSetSendTypeDelegate, new object[] {
                        HeaderInfo,
                        DeliveryType,
                        PrintType}, this.onEndPostaLiteSetSendTypeDelegate, this.onPostaLiteSetSendTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.PostaLiteSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn request) {
            return base.Channel.PostaLiteSend(request);
        }
        
        public bool PostaLiteSend(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.DeliveryType = DeliveryType;
            inValue.PrintType = PrintType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).PostaLiteSend(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginPostaLiteSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostaLiteSend(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPostaLiteSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.DeliveryType = DeliveryType;
            inValue.PrintType = PrintType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginPostaLiteSend(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndPostaLiteSend(System.IAsyncResult result) {
            return base.Channel.EndPostaLiteSend(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndPostaLiteSend(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.PostaLiteSendOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndPostaLiteSend(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginPostaLiteSend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int DeliveryType = ((int)(inValues[1]));
            int PrintType = ((int)(inValues[2]));
            return this.BeginPostaLiteSend(HeaderInfo, DeliveryType, PrintType, callback, asyncState);
        }
        
        private object[] OnEndPostaLiteSend(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndPostaLiteSend(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnPostaLiteSendCompleted(object state) {
            if ((this.PostaLiteSendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostaLiteSendCompleted(this, new PostaLiteSendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostaLiteSendAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType) {
            this.PostaLiteSendAsync(HeaderInfo, DeliveryType, PrintType, null);
        }
        
        public void PostaLiteSendAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int DeliveryType, int PrintType, object userState) {
            if ((this.onBeginPostaLiteSendDelegate == null)) {
                this.onBeginPostaLiteSendDelegate = new BeginOperationDelegate(this.OnBeginPostaLiteSend);
            }
            if ((this.onEndPostaLiteSendDelegate == null)) {
                this.onEndPostaLiteSendDelegate = new EndOperationDelegate(this.OnEndPostaLiteSend);
            }
            if ((this.onPostaLiteSendCompletedDelegate == null)) {
                this.onPostaLiteSendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostaLiteSendCompleted);
            }
            base.InvokeAsync(this.onBeginPostaLiteSendDelegate, new object[] {
                        HeaderInfo,
                        DeliveryType,
                        PrintType}, this.onEndPostaLiteSendDelegate, this.onPostaLiteSendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.SendMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn request) {
            return base.Channel.SendMail(request);
        }
        
        public bool SendMail(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, string To, string Cc, string Bcc, string Subject, string Body, string Attachments) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.From = From;
            inValue.To = To;
            inValue.Cc = Cc;
            inValue.Bcc = Bcc;
            inValue.Subject = Subject;
            inValue.Body = Body;
            inValue.Attachments = Attachments;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).SendMail(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginSendMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, string To, string Cc, string Bcc, string Subject, string Body, string Attachments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.From = From;
            inValue.To = To;
            inValue.Cc = Cc;
            inValue.Bcc = Bcc;
            inValue.Subject = Subject;
            inValue.Body = Body;
            inValue.Attachments = Attachments;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginSendMail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndSendMail(System.IAsyncResult result) {
            return base.Channel.EndSendMail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndSendMail(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SendMailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndSendMail(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginSendMail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string From = ((string)(inValues[1]));
            string To = ((string)(inValues[2]));
            string Cc = ((string)(inValues[3]));
            string Bcc = ((string)(inValues[4]));
            string Subject = ((string)(inValues[5]));
            string Body = ((string)(inValues[6]));
            string Attachments = ((string)(inValues[7]));
            return this.BeginSendMail(HeaderInfo, From, To, Cc, Bcc, Subject, Body, Attachments, callback, asyncState);
        }
        
        private object[] OnEndSendMail(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndSendMail(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnSendMailCompleted(object state) {
            if ((this.SendMailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, string To, string Cc, string Bcc, string Subject, string Body, string Attachments) {
            this.SendMailAsync(HeaderInfo, From, To, Cc, Bcc, Subject, Body, Attachments, null);
        }
        
        public void SendMailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, string To, string Cc, string Bcc, string Subject, string Body, string Attachments, object userState) {
            if ((this.onBeginSendMailDelegate == null)) {
                this.onBeginSendMailDelegate = new BeginOperationDelegate(this.OnBeginSendMail);
            }
            if ((this.onEndSendMailDelegate == null)) {
                this.onEndSendMailDelegate = new EndOperationDelegate(this.OnEndSendMail);
            }
            if ((this.onSendMailCompletedDelegate == null)) {
                this.onSendMailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMailCompleted);
            }
            base.InvokeAsync(this.onBeginSendMailDelegate, new object[] {
                        HeaderInfo,
                        From,
                        To,
                        Cc,
                        Bcc,
                        Subject,
                        Body,
                        Attachments}, this.onEndSendMailDelegate, this.onSendMailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ExecNewReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn request) {
            return base.Channel.ExecNewReport(request);
        }
        
        public bool ExecNewReport(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, ref int docHandle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.docHandle = docHandle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ExecNewReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
            docHandle = retVal.docHandle;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginExecNewReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecNewReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecNewReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.docHandle = docHandle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginExecNewReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndExecNewReport(System.IAsyncResult result) {
            return base.Channel.EndExecNewReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndExecNewReport(System.IAsyncResult result, out bool @return, out int docHandle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecNewReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndExecNewReport(result);
            @return = retVal.@return;
            docHandle = retVal.docHandle;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginExecNewReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int docHandle = ((int)(inValues[1]));
            return this.BeginExecNewReport(HeaderInfo, docHandle, callback, asyncState);
        }
        
        private object[] OnEndExecNewReport(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            int docHandle = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndExecNewReport(result, out @return, out docHandle);
            return new object[] {
                    @return,
                    docHandle,
                    retVal};
        }
        
        private void OnExecNewReportCompleted(object state) {
            if ((this.ExecNewReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecNewReportCompleted(this, new ExecNewReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecNewReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle) {
            this.ExecNewReportAsync(HeaderInfo, docHandle, null);
        }
        
        public void ExecNewReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle, object userState) {
            if ((this.onBeginExecNewReportDelegate == null)) {
                this.onBeginExecNewReportDelegate = new BeginOperationDelegate(this.OnBeginExecNewReport);
            }
            if ((this.onEndExecNewReportDelegate == null)) {
                this.onEndExecNewReportDelegate = new EndOperationDelegate(this.OnEndExecNewReport);
            }
            if ((this.onExecNewReportCompletedDelegate == null)) {
                this.onExecNewReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecNewReportCompleted);
            }
            base.InvokeAsync(this.onBeginExecNewReportDelegate, new object[] {
                        HeaderInfo,
                        docHandle}, this.onEndExecNewReportDelegate, this.onExecNewReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ExecOpenReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn request) {
            return base.Channel.ExecOpenReport(request);
        }
        
        public bool ExecOpenReport(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNameSpace, ref int docHandle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNameSpace = reportNameSpace;
            inValue.docHandle = docHandle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ExecOpenReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
            docHandle = retVal.docHandle;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginExecOpenReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecOpenReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecOpenReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNameSpace, int docHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNameSpace = reportNameSpace;
            inValue.docHandle = docHandle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginExecOpenReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndExecOpenReport(System.IAsyncResult result) {
            return base.Channel.EndExecOpenReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndExecOpenReport(System.IAsyncResult result, out bool @return, out int docHandle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecOpenReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndExecOpenReport(result);
            @return = retVal.@return;
            docHandle = retVal.docHandle;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginExecOpenReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string reportNameSpace = ((string)(inValues[1]));
            int docHandle = ((int)(inValues[2]));
            return this.BeginExecOpenReport(HeaderInfo, reportNameSpace, docHandle, callback, asyncState);
        }
        
        private object[] OnEndExecOpenReport(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            int docHandle = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndExecOpenReport(result, out @return, out docHandle);
            return new object[] {
                    @return,
                    docHandle,
                    retVal};
        }
        
        private void OnExecOpenReportCompleted(object state) {
            if ((this.ExecOpenReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecOpenReportCompleted(this, new ExecOpenReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecOpenReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNameSpace, int docHandle) {
            this.ExecOpenReportAsync(HeaderInfo, reportNameSpace, docHandle, null);
        }
        
        public void ExecOpenReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string reportNameSpace, int docHandle, object userState) {
            if ((this.onBeginExecOpenReportDelegate == null)) {
                this.onBeginExecOpenReportDelegate = new BeginOperationDelegate(this.OnBeginExecOpenReport);
            }
            if ((this.onEndExecOpenReportDelegate == null)) {
                this.onEndExecOpenReportDelegate = new EndOperationDelegate(this.OnEndExecOpenReport);
            }
            if ((this.onExecOpenReportCompletedDelegate == null)) {
                this.onExecOpenReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecOpenReportCompleted);
            }
            base.InvokeAsync(this.onBeginExecOpenReportDelegate, new object[] {
                        HeaderInfo,
                        reportNameSpace,
                        docHandle}, this.onEndExecOpenReportDelegate, this.onExecOpenReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ExecUpgradeReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn request) {
            return base.Channel.ExecUpgradeReport(request);
        }
        
        public bool ExecUpgradeReport(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ExecUpgradeReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginExecUpgradeReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecUpgradeReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExecUpgradeReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginExecUpgradeReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndExecUpgradeReport(System.IAsyncResult result) {
            return base.Channel.EndExecUpgradeReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndExecUpgradeReport(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExecUpgradeReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndExecUpgradeReport(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginExecUpgradeReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginExecUpgradeReport(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndExecUpgradeReport(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndExecUpgradeReport(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnExecUpgradeReportCompleted(object state) {
            if ((this.ExecUpgradeReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecUpgradeReportCompleted(this, new ExecUpgradeReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecUpgradeReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.ExecUpgradeReportAsync(HeaderInfo, null);
        }
        
        public void ExecUpgradeReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginExecUpgradeReportDelegate == null)) {
                this.onBeginExecUpgradeReportDelegate = new BeginOperationDelegate(this.OnBeginExecUpgradeReport);
            }
            if ((this.onEndExecUpgradeReportDelegate == null)) {
                this.onEndExecUpgradeReportDelegate = new EndOperationDelegate(this.OnEndExecUpgradeReport);
            }
            if ((this.onExecUpgradeReportCompletedDelegate == null)) {
                this.onExecUpgradeReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecUpgradeReportCompleted);
            }
            base.InvokeAsync(this.onBeginExecUpgradeReportDelegate, new object[] {
                        HeaderInfo}, this.onEndExecUpgradeReportDelegate, this.onExecUpgradeReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.IsUserReportsDeveloper(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn request) {
            return base.Channel.IsUserReportsDeveloper(request);
        }
        
        public bool IsUserReportsDeveloper(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).IsUserReportsDeveloper(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginIsUserReportsDeveloper(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserReportsDeveloper(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsUserReportsDeveloper(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginIsUserReportsDeveloper(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndIsUserReportsDeveloper(System.IAsyncResult result) {
            return base.Channel.EndIsUserReportsDeveloper(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndIsUserReportsDeveloper(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsUserReportsDeveloperOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndIsUserReportsDeveloper(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginIsUserReportsDeveloper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginIsUserReportsDeveloper(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndIsUserReportsDeveloper(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndIsUserReportsDeveloper(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnIsUserReportsDeveloperCompleted(object state) {
            if ((this.IsUserReportsDeveloperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserReportsDeveloperCompleted(this, new IsUserReportsDeveloperCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserReportsDeveloperAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.IsUserReportsDeveloperAsync(HeaderInfo, null);
        }
        
        public void IsUserReportsDeveloperAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginIsUserReportsDeveloperDelegate == null)) {
                this.onBeginIsUserReportsDeveloperDelegate = new BeginOperationDelegate(this.OnBeginIsUserReportsDeveloper);
            }
            if ((this.onEndIsUserReportsDeveloperDelegate == null)) {
                this.onEndIsUserReportsDeveloperDelegate = new EndOperationDelegate(this.OnEndIsUserReportsDeveloper);
            }
            if ((this.onIsUserReportsDeveloperCompletedDelegate == null)) {
                this.onIsUserReportsDeveloperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserReportsDeveloperCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserReportsDeveloperDelegate, new object[] {
                        HeaderInfo}, this.onEndIsUserReportsDeveloperDelegate, this.onIsUserReportsDeveloperCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryRead(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn request) {
            return base.Channel.QueryRead(request);
        }
        
        public bool QueryRead(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryRead(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryRead(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryRead(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryRead(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryRead(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryRead(System.IAsyncResult result) {
            return base.Channel.EndQueryRead(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryRead(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryRead(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryRead(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryRead(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryRead(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryReadCompleted(object state) {
            if ((this.QueryReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryReadCompleted(this, new QueryReadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryReadAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryReadAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryReadAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryReadDelegate == null)) {
                this.onBeginQueryReadDelegate = new BeginOperationDelegate(this.OnBeginQueryRead);
            }
            if ((this.onEndQueryReadDelegate == null)) {
                this.onEndQueryReadDelegate = new EndOperationDelegate(this.OnEndQueryRead);
            }
            if ((this.onQueryReadCompletedDelegate == null)) {
                this.onQueryReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryReadCompleted);
            }
            base.InvokeAsync(this.onBeginQueryReadDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryReadDelegate, this.onQueryReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryExecute(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn request) {
            return base.Channel.QueryExecute(request);
        }
        
        public bool QueryExecute(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryExecute(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryExecute(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryExecute(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryExecute(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryExecute(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryExecute(System.IAsyncResult result) {
            return base.Channel.EndQueryExecute(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryExecute(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryExecuteOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryExecute(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryExecute(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryExecute(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryExecute(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryExecute(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryExecuteCompleted(object state) {
            if ((this.QueryExecuteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryExecuteCompleted(this, new QueryExecuteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryExecuteAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryExecuteAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryExecuteAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryExecuteDelegate == null)) {
                this.onBeginQueryExecuteDelegate = new BeginOperationDelegate(this.OnBeginQueryExecute);
            }
            if ((this.onEndQueryExecuteDelegate == null)) {
                this.onEndQueryExecuteDelegate = new EndOperationDelegate(this.OnEndQueryExecute);
            }
            if ((this.onQueryExecuteCompletedDelegate == null)) {
                this.onQueryExecuteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryExecuteCompleted);
            }
            base.InvokeAsync(this.onBeginQueryExecuteDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryExecuteDelegate, this.onQueryExecuteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryCall(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn request) {
            return base.Channel.QueryCall(request);
        }
        
        public bool QueryCall(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryCall(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryCall(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryCall(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryCall(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryCall(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryCall(System.IAsyncResult result) {
            return base.Channel.EndQueryCall(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryCall(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCallOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryCall(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryCall(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryCall(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryCall(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryCall(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryCallCompleted(object state) {
            if ((this.QueryCallCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryCallCompleted(this, new QueryCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryCallAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryCallAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryCallAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryCallDelegate == null)) {
                this.onBeginQueryCallDelegate = new BeginOperationDelegate(this.OnBeginQueryCall);
            }
            if ((this.onEndQueryCallDelegate == null)) {
                this.onEndQueryCallDelegate = new EndOperationDelegate(this.OnEndQueryCall);
            }
            if ((this.onQueryCallCompletedDelegate == null)) {
                this.onQueryCallCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryCallCompleted);
            }
            base.InvokeAsync(this.onBeginQueryCallDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryCallDelegate, this.onQueryCallCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.UpdateOutputParametersEvenIfReportDoesNotFetchRecords(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn request) {
            return base.Channel.UpdateOutputParametersEvenIfReportDoesNotFetchRecords(request);
        }
        
        public bool UpdateOutputParametersEvenIfReportDoesNotFetchRecords(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).UpdateOutputParametersEvenIfReportDoesNotFetchRecords(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(System.IAsyncResult result) {
            return base.Channel.EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndUpdateOutputParametersEvenIfReportDoesNotFetchRecords(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompleted(object state) {
            if ((this.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompleted(this, new UpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOutputParametersEvenIfReportDoesNotFetchRecordsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.UpdateOutputParametersEvenIfReportDoesNotFetchRecordsAsync(HeaderInfo, null);
        }
        
        public void UpdateOutputParametersEvenIfReportDoesNotFetchRecordsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate == null)) {
                this.onBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate = new BeginOperationDelegate(this.OnBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecords);
            }
            if ((this.onEndUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate == null)) {
                this.onEndUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate = new EndOperationDelegate(this.OnEndUpdateOutputParametersEvenIfReportDoesNotFetchRecords);
            }
            if ((this.onUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedDelegate == null)) {
                this.onUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate, new object[] {
                        HeaderInfo}, this.onEndUpdateOutputParametersEvenIfReportDoesNotFetchRecordsDelegate, this.onUpdateOutputParametersEvenIfReportDoesNotFetchRecordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.SkipContext(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn request) {
            return base.Channel.SkipContext(request);
        }
        
        public bool SkipContext(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).SkipContext(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginSkipContext(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSkipContext(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSkipContext(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginSkipContext(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndSkipContext(System.IAsyncResult result) {
            return base.Channel.EndSkipContext(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndSkipContext(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.SkipContextOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndSkipContext(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginSkipContext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginSkipContext(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndSkipContext(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndSkipContext(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnSkipContextCompleted(object state) {
            if ((this.SkipContextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SkipContextCompleted(this, new SkipContextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SkipContextAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.SkipContextAsync(HeaderInfo, null);
        }
        
        public void SkipContextAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginSkipContextDelegate == null)) {
                this.onBeginSkipContextDelegate = new BeginOperationDelegate(this.OnBeginSkipContext);
            }
            if ((this.onEndSkipContextDelegate == null)) {
                this.onEndSkipContextDelegate = new EndOperationDelegate(this.OnEndSkipContext);
            }
            if ((this.onSkipContextCompletedDelegate == null)) {
                this.onSkipContextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSkipContextCompleted);
            }
            base.InvokeAsync(this.onBeginSkipContextDelegate, new object[] {
                        HeaderInfo}, this.onEndSkipContextDelegate, this.onSkipContextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryReadOne(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn request) {
            return base.Channel.QueryReadOne(request);
        }
        
        public bool QueryReadOne(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryReadOne(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryReadOne(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryReadOne(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryReadOne(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryReadOne(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryReadOne(System.IAsyncResult result) {
            return base.Channel.EndQueryReadOne(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryReadOne(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryReadOneOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryReadOne(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryReadOne(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryReadOne(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryReadOne(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryReadOne(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryReadOneCompleted(object state) {
            if ((this.QueryReadOneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryReadOneCompleted(this, new QueryReadOneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryReadOneAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryReadOneAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryReadOneAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryReadOneDelegate == null)) {
                this.onBeginQueryReadOneDelegate = new BeginOperationDelegate(this.OnBeginQueryReadOne);
            }
            if ((this.onEndQueryReadOneDelegate == null)) {
                this.onEndQueryReadOneDelegate = new EndOperationDelegate(this.OnEndQueryReadOne);
            }
            if ((this.onQueryReadOneCompletedDelegate == null)) {
                this.onQueryReadOneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryReadOneCompleted);
            }
            base.InvokeAsync(this.onBeginQueryReadOneDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryReadOneDelegate, this.onQueryReadOneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QuerySetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn request) {
            return base.Channel.QuerySetConnection(request);
        }
        
        public bool QuerySetConnection(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            inValue.connection = connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QuerySetConnection(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQuerySetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQuerySetConnection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQuerySetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            inValue.connection = connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQuerySetConnection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQuerySetConnection(System.IAsyncResult result) {
            return base.Channel.EndQuerySetConnection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQuerySetConnection(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQuerySetConnection(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQuerySetConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            int connection = ((int)(inValues[2]));
            return this.BeginQuerySetConnection(HeaderInfo, queryName, connection, callback, asyncState);
        }
        
        private object[] OnEndQuerySetConnection(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQuerySetConnection(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQuerySetConnectionCompleted(object state) {
            if ((this.QuerySetConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QuerySetConnectionCompleted(this, new QuerySetConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QuerySetConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int connection) {
            this.QuerySetConnectionAsync(HeaderInfo, queryName, connection, null);
        }
        
        public void QuerySetConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int connection, object userState) {
            if ((this.onBeginQuerySetConnectionDelegate == null)) {
                this.onBeginQuerySetConnectionDelegate = new BeginOperationDelegate(this.OnBeginQuerySetConnection);
            }
            if ((this.onEndQuerySetConnectionDelegate == null)) {
                this.onEndQuerySetConnectionDelegate = new EndOperationDelegate(this.OnEndQuerySetConnection);
            }
            if ((this.onQuerySetConnectionCompletedDelegate == null)) {
                this.onQuerySetConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQuerySetConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginQuerySetConnectionDelegate, new object[] {
                        HeaderInfo,
                        queryName,
                        connection}, this.onEndQuerySetConnectionDelegate, this.onQuerySetConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QuerySetCursorType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn request) {
            return base.Channel.QuerySetCursorType(request);
        }
        
        public bool QuerySetCursorType(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int cursor) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            inValue.cursor = cursor;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QuerySetCursorType(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQuerySetCursorType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQuerySetCursorType(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQuerySetCursorType(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int cursor, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            inValue.cursor = cursor;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQuerySetCursorType(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQuerySetCursorType(System.IAsyncResult result) {
            return base.Channel.EndQuerySetCursorType(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQuerySetCursorType(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QuerySetCursorTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQuerySetCursorType(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQuerySetCursorType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            int cursor = ((int)(inValues[2]));
            return this.BeginQuerySetCursorType(HeaderInfo, queryName, cursor, callback, asyncState);
        }
        
        private object[] OnEndQuerySetCursorType(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQuerySetCursorType(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQuerySetCursorTypeCompleted(object state) {
            if ((this.QuerySetCursorTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QuerySetCursorTypeCompleted(this, new QuerySetCursorTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QuerySetCursorTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int cursor) {
            this.QuerySetCursorTypeAsync(HeaderInfo, queryName, cursor, null);
        }
        
        public void QuerySetCursorTypeAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, int cursor, object userState) {
            if ((this.onBeginQuerySetCursorTypeDelegate == null)) {
                this.onBeginQuerySetCursorTypeDelegate = new BeginOperationDelegate(this.OnBeginQuerySetCursorType);
            }
            if ((this.onEndQuerySetCursorTypeDelegate == null)) {
                this.onEndQuerySetCursorTypeDelegate = new EndOperationDelegate(this.OnEndQuerySetCursorType);
            }
            if ((this.onQuerySetCursorTypeCompletedDelegate == null)) {
                this.onQuerySetCursorTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQuerySetCursorTypeCompleted);
            }
            base.InvokeAsync(this.onBeginQuerySetCursorTypeDelegate, new object[] {
                        HeaderInfo,
                        queryName,
                        cursor}, this.onEndQuerySetCursorTypeDelegate, this.onQuerySetCursorTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn request) {
            return base.Channel.GetConnection(request);
        }
        
        public int GetConnection(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int ownerid) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ownerid = ownerid;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetConnection(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConnection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int ownerid, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ownerid = ownerid;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetConnection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetConnection(System.IAsyncResult result) {
            return base.Channel.EndGetConnection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetConnection(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetConnection(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int ownerid = ((int)(inValues[1]));
            return this.BeginGetConnection(HeaderInfo, ownerid, callback, asyncState);
        }
        
        private object[] OnEndGetConnection(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetConnection(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetConnectionCompleted(object state) {
            if ((this.GetConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConnectionCompleted(this, new GetConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int ownerid) {
            this.GetConnectionAsync(HeaderInfo, ownerid, null);
        }
        
        public void GetConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int ownerid, object userState) {
            if ((this.onBeginGetConnectionDelegate == null)) {
                this.onBeginGetConnectionDelegate = new BeginOperationDelegate(this.OnBeginGetConnection);
            }
            if ((this.onEndGetConnectionDelegate == null)) {
                this.onEndGetConnectionDelegate = new EndOperationDelegate(this.OnEndGetConnection);
            }
            if ((this.onGetConnectionCompletedDelegate == null)) {
                this.onGetConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginGetConnectionDelegate, new object[] {
                        HeaderInfo,
                        ownerid}, this.onEndGetConnectionDelegate, this.onGetConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.OpenConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn request) {
            return base.Channel.OpenConnection(request);
        }
        
        public int OpenConnection(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string connectionString) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.connectionString = connectionString;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).OpenConnection(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginOpenConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenConnection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOpenConnection(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string connectionString, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.connectionString = connectionString;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginOpenConnection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndOpenConnection(System.IAsyncResult result) {
            return base.Channel.EndOpenConnection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndOpenConnection(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.OpenConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndOpenConnection(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginOpenConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string connectionString = ((string)(inValues[1]));
            return this.BeginOpenConnection(HeaderInfo, connectionString, callback, asyncState);
        }
        
        private object[] OnEndOpenConnection(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndOpenConnection(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnOpenConnectionCompleted(object state) {
            if ((this.OpenConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenConnectionCompleted(this, new OpenConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string connectionString) {
            this.OpenConnectionAsync(HeaderInfo, connectionString, null);
        }
        
        public void OpenConnectionAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string connectionString, object userState) {
            if ((this.onBeginOpenConnectionDelegate == null)) {
                this.onBeginOpenConnectionDelegate = new BeginOperationDelegate(this.OnBeginOpenConnection);
            }
            if ((this.onEndOpenConnectionDelegate == null)) {
                this.onEndOpenConnectionDelegate = new EndOperationDelegate(this.OnEndOpenConnection);
            }
            if ((this.onOpenConnectionCompletedDelegate == null)) {
                this.onOpenConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginOpenConnectionDelegate, new object[] {
                        HeaderInfo,
                        connectionString}, this.onEndOpenConnectionDelegate, this.onOpenConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionLockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn request) {
            return base.Channel.ConnectionLockRecord(request);
        }
        
        public bool ConnectionLockRecord(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, ref string LockKeyMsg) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            inValue.Table = Table;
            inValue.LockKeyMsg = LockKeyMsg;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionLockRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
            LockKeyMsg = retVal.LockKeyMsg;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionLockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionLockRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionLockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, string LockKeyMsg, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            inValue.Table = Table;
            inValue.LockKeyMsg = LockKeyMsg;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionLockRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionLockRecord(System.IAsyncResult result) {
            return base.Channel.EndConnectionLockRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionLockRecord(System.IAsyncResult result, out bool @return, out string LockKeyMsg) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionLockRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionLockRecord(result);
            @return = retVal.@return;
            LockKeyMsg = retVal.LockKeyMsg;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionLockRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            string Table = ((string)(inValues[2]));
            string LockKeyMsg = ((string)(inValues[3]));
            return this.BeginConnectionLockRecord(HeaderInfo, Connection, Table, LockKeyMsg, callback, asyncState);
        }
        
        private object[] OnEndConnectionLockRecord(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            string LockKeyMsg = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionLockRecord(result, out @return, out LockKeyMsg);
            return new object[] {
                    @return,
                    LockKeyMsg,
                    retVal};
        }
        
        private void OnConnectionLockRecordCompleted(object state) {
            if ((this.ConnectionLockRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionLockRecordCompleted(this, new ConnectionLockRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionLockRecordAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, string LockKeyMsg) {
            this.ConnectionLockRecordAsync(HeaderInfo, Connection, Table, LockKeyMsg, null);
        }
        
        public void ConnectionLockRecordAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, string LockKeyMsg, object userState) {
            if ((this.onBeginConnectionLockRecordDelegate == null)) {
                this.onBeginConnectionLockRecordDelegate = new BeginOperationDelegate(this.OnBeginConnectionLockRecord);
            }
            if ((this.onEndConnectionLockRecordDelegate == null)) {
                this.onEndConnectionLockRecordDelegate = new EndOperationDelegate(this.OnEndConnectionLockRecord);
            }
            if ((this.onConnectionLockRecordCompletedDelegate == null)) {
                this.onConnectionLockRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionLockRecordCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionLockRecordDelegate, new object[] {
                        HeaderInfo,
                        Connection,
                        Table,
                        LockKeyMsg}, this.onEndConnectionLockRecordDelegate, this.onConnectionLockRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionUnlockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn request) {
            return base.Channel.ConnectionUnlockRecord(request);
        }
        
        public bool ConnectionUnlockRecord(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            inValue.Table = Table;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionUnlockRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionUnlockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionUnlockRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionUnlockRecord(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            inValue.Table = Table;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionUnlockRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionUnlockRecord(System.IAsyncResult result) {
            return base.Channel.EndConnectionUnlockRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionUnlockRecord(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionUnlockRecord(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionUnlockRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            string Table = ((string)(inValues[2]));
            return this.BeginConnectionUnlockRecord(HeaderInfo, Connection, Table, callback, asyncState);
        }
        
        private object[] OnEndConnectionUnlockRecord(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionUnlockRecord(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionUnlockRecordCompleted(object state) {
            if ((this.ConnectionUnlockRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionUnlockRecordCompleted(this, new ConnectionUnlockRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionUnlockRecordAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table) {
            this.ConnectionUnlockRecordAsync(HeaderInfo, Connection, Table, null);
        }
        
        public void ConnectionUnlockRecordAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, string Table, object userState) {
            if ((this.onBeginConnectionUnlockRecordDelegate == null)) {
                this.onBeginConnectionUnlockRecordDelegate = new BeginOperationDelegate(this.OnBeginConnectionUnlockRecord);
            }
            if ((this.onEndConnectionUnlockRecordDelegate == null)) {
                this.onEndConnectionUnlockRecordDelegate = new EndOperationDelegate(this.OnEndConnectionUnlockRecord);
            }
            if ((this.onConnectionUnlockRecordCompletedDelegate == null)) {
                this.onConnectionUnlockRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionUnlockRecordCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionUnlockRecordDelegate, new object[] {
                        HeaderInfo,
                        Connection,
                        Table}, this.onEndConnectionUnlockRecordDelegate, this.onConnectionUnlockRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ConnectionUnlockAll(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn request) {
            return base.Channel.ConnectionUnlockAll(request);
        }
        
        public bool ConnectionUnlockAll(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ConnectionUnlockAll(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginConnectionUnlockAll(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnectionUnlockAll(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnectionUnlockAll(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Connection = Connection;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginConnectionUnlockAll(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndConnectionUnlockAll(System.IAsyncResult result) {
            return base.Channel.EndConnectionUnlockAll(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndConnectionUnlockAll(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ConnectionUnlockAllOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndConnectionUnlockAll(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginConnectionUnlockAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Connection = ((int)(inValues[1]));
            return this.BeginConnectionUnlockAll(HeaderInfo, Connection, callback, asyncState);
        }
        
        private object[] OnEndConnectionUnlockAll(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndConnectionUnlockAll(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnConnectionUnlockAllCompleted(object state) {
            if ((this.ConnectionUnlockAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectionUnlockAllCompleted(this, new ConnectionUnlockAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectionUnlockAllAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection) {
            this.ConnectionUnlockAllAsync(HeaderInfo, Connection, null);
        }
        
        public void ConnectionUnlockAllAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Connection, object userState) {
            if ((this.onBeginConnectionUnlockAllDelegate == null)) {
                this.onBeginConnectionUnlockAllDelegate = new BeginOperationDelegate(this.OnBeginConnectionUnlockAll);
            }
            if ((this.onEndConnectionUnlockAllDelegate == null)) {
                this.onEndConnectionUnlockAllDelegate = new EndOperationDelegate(this.OnEndConnectionUnlockAll);
            }
            if ((this.onConnectionUnlockAllCompletedDelegate == null)) {
                this.onConnectionUnlockAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectionUnlockAllCompleted);
            }
            base.InvokeAsync(this.onBeginConnectionUnlockAllDelegate, new object[] {
                        HeaderInfo,
                        Connection}, this.onEndConnectionUnlockAllDelegate, this.onConnectionUnlockAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn request) {
            return base.Channel.GetRows(request);
        }
        
        public int GetRows(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.id = id;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetRows(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRows(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.id = id;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetRows(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetRows(System.IAsyncResult result) {
            return base.Channel.EndGetRows(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetRows(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetRowsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetRows(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetRows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int id = ((int)(inValues[1]));
            return this.BeginGetRows(HeaderInfo, id, callback, asyncState);
        }
        
        private object[] OnEndGetRows(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetRows(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetRowsCompleted(object state) {
            if ((this.GetRowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRowsCompleted(this, new GetRowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRowsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            this.GetRowsAsync(HeaderInfo, id, null);
        }
        
        public void GetRowsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id, object userState) {
            if ((this.onBeginGetRowsDelegate == null)) {
                this.onBeginGetRowsDelegate = new BeginOperationDelegate(this.OnBeginGetRows);
            }
            if ((this.onEndGetRowsDelegate == null)) {
                this.onEndGetRowsDelegate = new EndOperationDelegate(this.OnEndGetRows);
            }
            if ((this.onGetRowsCompletedDelegate == null)) {
                this.onGetRowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRowsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRowsDelegate, new object[] {
                        HeaderInfo,
                        id}, this.onEndGetRowsDelegate, this.onGetRowsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn request) {
            return base.Channel.GetCurrentRow(request);
        }
        
        public int GetCurrentRow(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.id = id;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetCurrentRow(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentRow(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.id = id;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetCurrentRow(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetCurrentRow(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentRow(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetCurrentRow(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetCurrentRow(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetCurrentRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int id = ((int)(inValues[1]));
            return this.BeginGetCurrentRow(HeaderInfo, id, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentRow(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetCurrentRow(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetCurrentRowCompleted(object state) {
            if ((this.GetCurrentRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentRowCompleted(this, new GetCurrentRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id) {
            this.GetCurrentRowAsync(HeaderInfo, id, null);
        }
        
        public void GetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int id, object userState) {
            if ((this.onBeginGetCurrentRowDelegate == null)) {
                this.onBeginGetCurrentRowDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentRow);
            }
            if ((this.onEndGetCurrentRowDelegate == null)) {
                this.onEndGetCurrentRowDelegate = new EndOperationDelegate(this.OnEndGetCurrentRow);
            }
            if ((this.onGetCurrentRowCompletedDelegate == null)) {
                this.onGetCurrentRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentRowCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentRowDelegate, new object[] {
                        HeaderInfo,
                        id}, this.onEndGetCurrentRowDelegate, this.onGetCurrentRowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetReportPath(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn request) {
            return base.Channel.GetReportPath(request);
        }
        
        public string GetReportPath(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetReportPath(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetReportPath(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportPath(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportPath(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetReportPath(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetReportPath(System.IAsyncResult result) {
            return base.Channel.EndGetReportPath(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetReportPath(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportPathOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetReportPath(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetReportPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetReportPath(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetReportPath(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetReportPath(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetReportPathCompleted(object state) {
            if ((this.GetReportPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportPathCompleted(this, new GetReportPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportPathAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.GetReportPathAsync(HeaderInfo, null);
        }
        
        public void GetReportPathAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetReportPathDelegate == null)) {
                this.onBeginGetReportPathDelegate = new BeginOperationDelegate(this.OnBeginGetReportPath);
            }
            if ((this.onEndGetReportPathDelegate == null)) {
                this.onEndGetReportPathDelegate = new EndOperationDelegate(this.OnEndGetReportPath);
            }
            if ((this.onGetReportPathCompletedDelegate == null)) {
                this.onGetReportPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportPathCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportPathDelegate, new object[] {
                        HeaderInfo}, this.onEndGetReportPathDelegate, this.onGetReportPathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetReportNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn request) {
            return base.Channel.GetReportNamespace(request);
        }
        
        public string GetReportNamespace(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetReportNamespace(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetReportNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportNamespace(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetReportNamespace(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetReportNamespace(System.IAsyncResult result) {
            return base.Channel.EndGetReportNamespace(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetReportNamespace(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetReportNamespace(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetReportNamespace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetReportNamespace(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetReportNamespace(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetReportNamespace(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetReportNamespaceCompleted(object state) {
            if ((this.GetReportNamespaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportNamespaceCompleted(this, new GetReportNamespaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.GetReportNamespaceAsync(HeaderInfo, null);
        }
        
        public void GetReportNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetReportNamespaceDelegate == null)) {
                this.onBeginGetReportNamespaceDelegate = new BeginOperationDelegate(this.OnBeginGetReportNamespace);
            }
            if ((this.onEndGetReportNamespaceDelegate == null)) {
                this.onEndGetReportNamespaceDelegate = new EndOperationDelegate(this.OnEndGetReportNamespace);
            }
            if ((this.onGetReportNamespaceCompletedDelegate == null)) {
                this.onGetReportNamespaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportNamespaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportNamespaceDelegate, new object[] {
                        HeaderInfo}, this.onEndGetReportNamespaceDelegate, this.onGetReportNamespaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn request) {
            return base.Channel.GetReportName(request);
        }
        
        public string GetReportName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool StripExtension) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.StripExtension = StripExtension;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetReportName(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool StripExtension, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.StripExtension = StripExtension;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetReportName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetReportName(System.IAsyncResult result) {
            return base.Channel.EndGetReportName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetReportName(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetReportName(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetReportName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            bool StripExtension = ((bool)(inValues[1]));
            return this.BeginGetReportName(HeaderInfo, StripExtension, callback, asyncState);
        }
        
        private object[] OnEndGetReportName(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetReportName(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetReportNameCompleted(object state) {
            if ((this.GetReportNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportNameCompleted(this, new GetReportNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool StripExtension) {
            this.GetReportNameAsync(HeaderInfo, StripExtension, null);
        }
        
        public void GetReportNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool StripExtension, object userState) {
            if ((this.onBeginGetReportNameDelegate == null)) {
                this.onBeginGetReportNameDelegate = new BeginOperationDelegate(this.OnBeginGetReportName);
            }
            if ((this.onEndGetReportNameDelegate == null)) {
                this.onEndGetReportNameDelegate = new EndOperationDelegate(this.OnEndGetReportName);
            }
            if ((this.onGetReportNameCompletedDelegate == null)) {
                this.onGetReportNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportNameDelegate, new object[] {
                        HeaderInfo,
                        StripExtension}, this.onEndGetReportNameDelegate, this.onGetReportNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetReportModuleNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn request) {
            return base.Channel.GetReportModuleNamespace(request);
        }
        
        public string GetReportModuleNamespace(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetReportModuleNamespace(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetReportModuleNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportModuleNamespace(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportModuleNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetReportModuleNamespace(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetReportModuleNamespace(System.IAsyncResult result) {
            return base.Channel.EndGetReportModuleNamespace(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetReportModuleNamespace(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetReportModuleNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetReportModuleNamespace(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetReportModuleNamespace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetReportModuleNamespace(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetReportModuleNamespace(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetReportModuleNamespace(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetReportModuleNamespaceCompleted(object state) {
            if ((this.GetReportModuleNamespaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportModuleNamespaceCompleted(this, new GetReportModuleNamespaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportModuleNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.GetReportModuleNamespaceAsync(HeaderInfo, null);
        }
        
        public void GetReportModuleNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetReportModuleNamespaceDelegate == null)) {
                this.onBeginGetReportModuleNamespaceDelegate = new BeginOperationDelegate(this.OnBeginGetReportModuleNamespace);
            }
            if ((this.onEndGetReportModuleNamespaceDelegate == null)) {
                this.onEndGetReportModuleNamespaceDelegate = new EndOperationDelegate(this.OnEndGetReportModuleNamespace);
            }
            if ((this.onGetReportModuleNamespaceCompletedDelegate == null)) {
                this.onGetReportModuleNamespaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportModuleNamespaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportModuleNamespaceDelegate, new object[] {
                        HeaderInfo}, this.onEndGetReportModuleNamespaceDelegate, this.onGetReportModuleNamespaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn request) {
            return base.Channel.GetPrinterName(request);
        }
        
        public string GetPrinterName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetPrinterName(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrinterName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrinterName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetPrinterName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetPrinterName(System.IAsyncResult result) {
            return base.Channel.EndGetPrinterName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetPrinterName(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetPrinterNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetPrinterName(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetPrinterName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetPrinterName(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetPrinterName(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetPrinterName(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetPrinterNameCompleted(object state) {
            if ((this.GetPrinterNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrinterNameCompleted(this, new GetPrinterNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrinterNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.GetPrinterNameAsync(HeaderInfo, null);
        }
        
        public void GetPrinterNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetPrinterNameDelegate == null)) {
                this.onBeginGetPrinterNameDelegate = new BeginOperationDelegate(this.OnBeginGetPrinterName);
            }
            if ((this.onEndGetPrinterNameDelegate == null)) {
                this.onEndGetPrinterNameDelegate = new EndOperationDelegate(this.OnEndGetPrinterName);
            }
            if ((this.onGetPrinterNameCompletedDelegate == null)) {
                this.onGetPrinterNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrinterNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrinterNameDelegate, new object[] {
                        HeaderInfo}, this.onEndGetPrinterNameDelegate, this.onGetPrinterNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetOwnerNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn request) {
            return base.Channel.GetOwnerNamespace(request);
        }
        
        public string GetOwnerNamespace(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.docHandle = docHandle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetOwnerNamespace(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetOwnerNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOwnerNamespace(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOwnerNamespace(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.docHandle = docHandle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetOwnerNamespace(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetOwnerNamespace(System.IAsyncResult result) {
            return base.Channel.EndGetOwnerNamespace(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetOwnerNamespace(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetOwnerNamespaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetOwnerNamespace(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetOwnerNamespace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int docHandle = ((int)(inValues[1]));
            return this.BeginGetOwnerNamespace(HeaderInfo, docHandle, callback, asyncState);
        }
        
        private object[] OnEndGetOwnerNamespace(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetOwnerNamespace(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetOwnerNamespaceCompleted(object state) {
            if ((this.GetOwnerNamespaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOwnerNamespaceCompleted(this, new GetOwnerNamespaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOwnerNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle) {
            this.GetOwnerNamespaceAsync(HeaderInfo, docHandle, null);
        }
        
        public void GetOwnerNamespaceAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int docHandle, object userState) {
            if ((this.onBeginGetOwnerNamespaceDelegate == null)) {
                this.onBeginGetOwnerNamespaceDelegate = new BeginOperationDelegate(this.OnBeginGetOwnerNamespace);
            }
            if ((this.onEndGetOwnerNamespaceDelegate == null)) {
                this.onEndGetOwnerNamespaceDelegate = new EndOperationDelegate(this.OnEndGetOwnerNamespace);
            }
            if ((this.onGetOwnerNamespaceCompletedDelegate == null)) {
                this.onGetOwnerNamespaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOwnerNamespaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetOwnerNamespaceDelegate, new object[] {
                        HeaderInfo,
                        docHandle}, this.onEndGetOwnerNamespaceDelegate, this.onGetOwnerNamespaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.IsAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn request) {
            return base.Channel.IsAutoPrint(request);
        }
        
        public bool IsAutoPrint(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).IsAutoPrint(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginIsAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAutoPrint(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsAutoPrint(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginIsAutoPrint(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndIsAutoPrint(System.IAsyncResult result) {
            return base.Channel.EndIsAutoPrint(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndIsAutoPrint(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.IsAutoPrintOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndIsAutoPrint(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginIsAutoPrint(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginIsAutoPrint(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndIsAutoPrint(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndIsAutoPrint(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnIsAutoPrintCompleted(object state) {
            if ((this.IsAutoPrintCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAutoPrintCompleted(this, new IsAutoPrintCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAutoPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo) {
            this.IsAutoPrintAsync(HeaderInfo, null);
        }
        
        public void IsAutoPrintAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginIsAutoPrintDelegate == null)) {
                this.onBeginIsAutoPrintDelegate = new BeginOperationDelegate(this.OnBeginIsAutoPrint);
            }
            if ((this.onEndIsAutoPrintDelegate == null)) {
                this.onEndIsAutoPrintDelegate = new EndOperationDelegate(this.OnEndIsAutoPrint);
            }
            if ((this.onIsAutoPrintCompletedDelegate == null)) {
                this.onIsAutoPrintCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAutoPrintCompleted);
            }
            base.InvokeAsync(this.onBeginIsAutoPrintDelegate, new object[] {
                        HeaderInfo}, this.onEndIsAutoPrintDelegate, this.onIsAutoPrintCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn request) {
            return base.Channel.QueryOpen(request);
        }
        
        public bool QueryOpen(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryOpen(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryOpen(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryOpen(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryOpen(System.IAsyncResult result) {
            return base.Channel.EndQueryOpen(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryOpen(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryOpenOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryOpen(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryOpen(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryOpen(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryOpen(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryOpenCompleted(object state) {
            if ((this.QueryOpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryOpenCompleted(this, new QueryOpenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryOpenAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryOpenAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryOpenAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryOpenDelegate == null)) {
                this.onBeginQueryOpenDelegate = new BeginOperationDelegate(this.OnBeginQueryOpen);
            }
            if ((this.onEndQueryOpenDelegate == null)) {
                this.onEndQueryOpenDelegate = new EndOperationDelegate(this.OnEndQueryOpen);
            }
            if ((this.onQueryOpenCompletedDelegate == null)) {
                this.onQueryOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryOpenCompleted);
            }
            base.InvokeAsync(this.onBeginQueryOpenDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryOpenDelegate, this.onQueryOpenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryIsOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn request) {
            return base.Channel.QueryIsOpen(request);
        }
        
        public bool QueryIsOpen(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryIsOpen(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryIsOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryIsOpen(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryIsOpen(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryIsOpen(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryIsOpen(System.IAsyncResult result) {
            return base.Channel.EndQueryIsOpen(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryIsOpen(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryIsOpenOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryIsOpen(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryIsOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryIsOpen(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryIsOpen(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryIsOpen(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryIsOpenCompleted(object state) {
            if ((this.QueryIsOpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryIsOpenCompleted(this, new QueryIsOpenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryIsOpenAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryIsOpenAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryIsOpenAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryIsOpenDelegate == null)) {
                this.onBeginQueryIsOpenDelegate = new BeginOperationDelegate(this.OnBeginQueryIsOpen);
            }
            if ((this.onEndQueryIsOpenDelegate == null)) {
                this.onEndQueryIsOpenDelegate = new EndOperationDelegate(this.OnEndQueryIsOpen);
            }
            if ((this.onQueryIsOpenCompletedDelegate == null)) {
                this.onQueryIsOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryIsOpenCompleted);
            }
            base.InvokeAsync(this.onBeginQueryIsOpenDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryIsOpenDelegate, this.onQueryIsOpenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.QueryClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn request) {
            return base.Channel.QueryClose(request);
        }
        
        public bool QueryClose(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).QueryClose(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginQueryClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryClose(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryClose(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.queryName = queryName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginQueryClose(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndQueryClose(System.IAsyncResult result) {
            return base.Channel.EndQueryClose(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndQueryClose(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.QueryCloseOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndQueryClose(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginQueryClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string queryName = ((string)(inValues[1]));
            return this.BeginQueryClose(HeaderInfo, queryName, callback, asyncState);
        }
        
        private object[] OnEndQueryClose(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndQueryClose(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnQueryCloseCompleted(object state) {
            if ((this.QueryCloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryCloseCompleted(this, new QueryCloseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryCloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName) {
            this.QueryCloseAsync(HeaderInfo, queryName, null);
        }
        
        public void QueryCloseAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string queryName, object userState) {
            if ((this.onBeginQueryCloseDelegate == null)) {
                this.onBeginQueryCloseDelegate = new BeginOperationDelegate(this.OnBeginQueryClose);
            }
            if ((this.onEndQueryCloseDelegate == null)) {
                this.onEndQueryCloseDelegate = new EndOperationDelegate(this.OnEndQueryClose);
            }
            if ((this.onQueryCloseCompletedDelegate == null)) {
                this.onQueryCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryCloseCompleted);
            }
            base.InvokeAsync(this.onBeginQueryCloseDelegate, new object[] {
                        HeaderInfo,
                        queryName}, this.onEndQueryCloseDelegate, this.onQueryCloseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn request) {
            return base.Channel.MailSend(request);
        }
        
        public bool MailSend(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool AttachRDE, bool AttachPDF, bool Compress) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.AttachRDE = AttachRDE;
            inValue.AttachPDF = AttachPDF;
            inValue.Compress = Compress;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSend(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSend(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSend(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool AttachRDE, bool AttachPDF, bool Compress, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.AttachRDE = AttachRDE;
            inValue.AttachPDF = AttachPDF;
            inValue.Compress = Compress;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSend(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSend(System.IAsyncResult result) {
            return base.Channel.EndMailSend(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSend(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSend(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            bool AttachRDE = ((bool)(inValues[1]));
            bool AttachPDF = ((bool)(inValues[2]));
            bool Compress = ((bool)(inValues[3]));
            return this.BeginMailSend(HeaderInfo, AttachRDE, AttachPDF, Compress, callback, asyncState);
        }
        
        private object[] OnEndMailSend(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSend(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSendCompleted(object state) {
            if ((this.MailSendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSendCompleted(this, new MailSendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSendAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool AttachRDE, bool AttachPDF, bool Compress) {
            this.MailSendAsync(HeaderInfo, AttachRDE, AttachPDF, Compress, null);
        }
        
        public void MailSendAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, bool AttachRDE, bool AttachPDF, bool Compress, object userState) {
            if ((this.onBeginMailSendDelegate == null)) {
                this.onBeginMailSendDelegate = new BeginOperationDelegate(this.OnBeginMailSend);
            }
            if ((this.onEndMailSendDelegate == null)) {
                this.onEndMailSendDelegate = new EndOperationDelegate(this.OnEndMailSend);
            }
            if ((this.onMailSendCompletedDelegate == null)) {
                this.onMailSendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSendCompleted);
            }
            base.InvokeAsync(this.onBeginMailSendDelegate, new object[] {
                        HeaderInfo,
                        AttachRDE,
                        AttachPDF,
                        Compress}, this.onEndMailSendDelegate, this.onMailSendCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSendEx(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn request) {
            return base.Channel.MailSendEx(request);
        }
        
        public bool MailSendEx(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string exportType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.exportType = exportType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSendEx(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSendEx(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSendEx(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSendEx(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string exportType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.exportType = exportType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSendEx(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSendEx(System.IAsyncResult result) {
            return base.Channel.EndMailSendEx(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSendEx(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSendExOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSendEx(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSendEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string exportType = ((string)(inValues[1]));
            return this.BeginMailSendEx(HeaderInfo, exportType, callback, asyncState);
        }
        
        private object[] OnEndMailSendEx(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSendEx(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSendExCompleted(object state) {
            if ((this.MailSendExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSendExCompleted(this, new MailSendExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSendExAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string exportType) {
            this.MailSendExAsync(HeaderInfo, exportType, null);
        }
        
        public void MailSendExAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string exportType, object userState) {
            if ((this.onBeginMailSendExDelegate == null)) {
                this.onBeginMailSendExDelegate = new BeginOperationDelegate(this.OnBeginMailSendEx);
            }
            if ((this.onEndMailSendExDelegate == null)) {
                this.onEndMailSendExDelegate = new EndOperationDelegate(this.OnEndMailSendEx);
            }
            if ((this.onMailSendExCompletedDelegate == null)) {
                this.onMailSendExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSendExCompleted);
            }
            base.InvokeAsync(this.onBeginMailSendExDelegate, new object[] {
                        HeaderInfo,
                        exportType}, this.onEndMailSendExDelegate, this.onMailSendExCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetAttachmentReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn request) {
            return base.Channel.MailSetAttachmentReportName(request);
        }
        
        public bool MailSetAttachmentReportName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string AttachmentReportName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.AttachmentReportName = AttachmentReportName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetAttachmentReportName(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetAttachmentReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetAttachmentReportName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetAttachmentReportName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string AttachmentReportName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.AttachmentReportName = AttachmentReportName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetAttachmentReportName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetAttachmentReportName(System.IAsyncResult result) {
            return base.Channel.EndMailSetAttachmentReportName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetAttachmentReportName(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentReportNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetAttachmentReportName(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetAttachmentReportName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string AttachmentReportName = ((string)(inValues[1]));
            return this.BeginMailSetAttachmentReportName(HeaderInfo, AttachmentReportName, callback, asyncState);
        }
        
        private object[] OnEndMailSetAttachmentReportName(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetAttachmentReportName(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetAttachmentReportNameCompleted(object state) {
            if ((this.MailSetAttachmentReportNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetAttachmentReportNameCompleted(this, new MailSetAttachmentReportNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetAttachmentReportNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string AttachmentReportName) {
            this.MailSetAttachmentReportNameAsync(HeaderInfo, AttachmentReportName, null);
        }
        
        public void MailSetAttachmentReportNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string AttachmentReportName, object userState) {
            if ((this.onBeginMailSetAttachmentReportNameDelegate == null)) {
                this.onBeginMailSetAttachmentReportNameDelegate = new BeginOperationDelegate(this.OnBeginMailSetAttachmentReportName);
            }
            if ((this.onEndMailSetAttachmentReportNameDelegate == null)) {
                this.onEndMailSetAttachmentReportNameDelegate = new EndOperationDelegate(this.OnEndMailSetAttachmentReportName);
            }
            if ((this.onMailSetAttachmentReportNameCompletedDelegate == null)) {
                this.onMailSetAttachmentReportNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetAttachmentReportNameCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetAttachmentReportNameDelegate, new object[] {
                        HeaderInfo,
                        AttachmentReportName}, this.onEndMailSetAttachmentReportNameDelegate, this.onMailSetAttachmentReportNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ReportSaveAs(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn request) {
            return base.Channel.ReportSaveAs(request);
        }
        
        public bool ReportSaveAs(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string fileName, string exportType) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.fileName = fileName;
            inValue.exportType = exportType;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ReportSaveAs(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginReportSaveAs(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportSaveAs(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReportSaveAs(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string fileName, string exportType, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.fileName = fileName;
            inValue.exportType = exportType;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginReportSaveAs(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndReportSaveAs(System.IAsyncResult result) {
            return base.Channel.EndReportSaveAs(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndReportSaveAs(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ReportSaveAsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndReportSaveAs(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginReportSaveAs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string exportType = ((string)(inValues[2]));
            return this.BeginReportSaveAs(HeaderInfo, fileName, exportType, callback, asyncState);
        }
        
        private object[] OnEndReportSaveAs(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndReportSaveAs(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnReportSaveAsCompleted(object state) {
            if ((this.ReportSaveAsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportSaveAsCompleted(this, new ReportSaveAsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportSaveAsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string fileName, string exportType) {
            this.ReportSaveAsAsync(HeaderInfo, fileName, exportType, null);
        }
        
        public void ReportSaveAsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string fileName, string exportType, object userState) {
            if ((this.onBeginReportSaveAsDelegate == null)) {
                this.onBeginReportSaveAsDelegate = new BeginOperationDelegate(this.OnBeginReportSaveAs);
            }
            if ((this.onEndReportSaveAsDelegate == null)) {
                this.onEndReportSaveAsDelegate = new EndOperationDelegate(this.OnEndReportSaveAs);
            }
            if ((this.onReportSaveAsCompletedDelegate == null)) {
                this.onReportSaveAsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportSaveAsCompleted);
            }
            base.InvokeAsync(this.onBeginReportSaveAsDelegate, new object[] {
                        HeaderInfo,
                        fileName,
                        exportType}, this.onEndReportSaveAsDelegate, this.onReportSaveAsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.RunReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn request) {
            return base.Channel.RunReport(request);
        }
        
        public bool RunReport(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Namespace = Namespace;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).RunReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginRunReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunReport(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Namespace = Namespace;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginRunReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndRunReport(System.IAsyncResult result) {
            return base.Channel.EndRunReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndRunReport(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndRunReport(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Namespace = ((string)(inValues[1]));
            return this.BeginRunReport(HeaderInfo, Namespace, callback, asyncState);
        }
        
        private object[] OnEndRunReport(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndRunReport(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunReportCompleted(object state) {
            if ((this.RunReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunReportCompleted(this, new RunReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            this.RunReportAsync(HeaderInfo, Namespace, null);
        }
        
        public void RunReportAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace, object userState) {
            if ((this.onBeginRunReportDelegate == null)) {
                this.onBeginRunReportDelegate = new BeginOperationDelegate(this.OnBeginRunReport);
            }
            if ((this.onEndRunReportDelegate == null)) {
                this.onEndRunReportDelegate = new EndOperationDelegate(this.OnEndRunReport);
            }
            if ((this.onRunReportCompletedDelegate == null)) {
                this.onRunReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunReportCompleted);
            }
            base.InvokeAsync(this.onBeginRunReportDelegate, new object[] {
                        HeaderInfo,
                        Namespace}, this.onEndRunReportDelegate, this.onRunReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.RunDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn request) {
            return base.Channel.RunDocument(request);
        }
        
        public int RunDocument(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Namespace = Namespace;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).RunDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginRunDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Namespace = Namespace;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginRunDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndRunDocument(System.IAsyncResult result) {
            return base.Channel.EndRunDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndRunDocument(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndRunDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Namespace = ((string)(inValues[1]));
            return this.BeginRunDocument(HeaderInfo, Namespace, callback, asyncState);
        }
        
        private object[] OnEndRunDocument(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndRunDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunDocumentCompleted(object state) {
            if ((this.RunDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunDocumentCompleted(this, new RunDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunDocumentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace) {
            this.RunDocumentAsync(HeaderInfo, Namespace, null);
        }
        
        public void RunDocumentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Namespace, object userState) {
            if ((this.onBeginRunDocumentDelegate == null)) {
                this.onBeginRunDocumentDelegate = new BeginOperationDelegate(this.OnBeginRunDocument);
            }
            if ((this.onEndRunDocumentDelegate == null)) {
                this.onEndRunDocumentDelegate = new EndOperationDelegate(this.OnEndRunDocument);
            }
            if ((this.onRunDocumentCompletedDelegate == null)) {
                this.onRunDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginRunDocumentDelegate, new object[] {
                        HeaderInfo,
                        Namespace}, this.onEndRunDocumentDelegate, this.onRunDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BrowseDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn request) {
            return base.Channel.BrowseDocument(request);
        }
        
        public bool BrowseDocument(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BrowseDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginBrowseDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBrowseDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBrowseDocument(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginBrowseDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndBrowseDocument(System.IAsyncResult result) {
            return base.Channel.EndBrowseDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndBrowseDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.BrowseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndBrowseDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginBrowseDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginBrowseDocument(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndBrowseDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndBrowseDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnBrowseDocumentCompleted(object state) {
            if ((this.BrowseDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BrowseDocumentCompleted(this, new BrowseDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BrowseDocumentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.BrowseDocumentAsync(HeaderInfo, handle, null);
        }
        
        public void BrowseDocumentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginBrowseDocumentDelegate == null)) {
                this.onBeginBrowseDocumentDelegate = new BeginOperationDelegate(this.OnBeginBrowseDocument);
            }
            if ((this.onEndBrowseDocumentDelegate == null)) {
                this.onEndBrowseDocumentDelegate = new EndOperationDelegate(this.OnEndBrowseDocument);
            }
            if ((this.onBrowseDocumentCompletedDelegate == null)) {
                this.onBrowseDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBrowseDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginBrowseDocumentDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndBrowseDocumentDelegate, this.onBrowseDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.RunProgram(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn request) {
            return base.Channel.RunProgram(request);
        }
        
        public bool RunProgram(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string cmd, string cmdLine) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.cmd = cmd;
            inValue.cmdLine = cmdLine;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).RunProgram(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginRunProgram(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunProgram(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunProgram(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string cmd, string cmdLine, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.cmd = cmd;
            inValue.cmdLine = cmdLine;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginRunProgram(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndRunProgram(System.IAsyncResult result) {
            return base.Channel.EndRunProgram(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndRunProgram(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.RunProgramOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndRunProgram(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunProgram(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string cmd = ((string)(inValues[1]));
            string cmdLine = ((string)(inValues[2]));
            return this.BeginRunProgram(HeaderInfo, cmd, cmdLine, callback, asyncState);
        }
        
        private object[] OnEndRunProgram(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndRunProgram(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunProgramCompleted(object state) {
            if ((this.RunProgramCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunProgramCompleted(this, new RunProgramCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunProgramAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string cmd, string cmdLine) {
            this.RunProgramAsync(HeaderInfo, cmd, cmdLine, null);
        }
        
        public void RunProgramAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string cmd, string cmdLine, object userState) {
            if ((this.onBeginRunProgramDelegate == null)) {
                this.onBeginRunProgramDelegate = new BeginOperationDelegate(this.OnBeginRunProgram);
            }
            if ((this.onEndRunProgramDelegate == null)) {
                this.onEndRunProgramDelegate = new EndOperationDelegate(this.OnEndRunProgram);
            }
            if ((this.onRunProgramCompletedDelegate == null)) {
                this.onRunProgramCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunProgramCompleted);
            }
            base.InvokeAsync(this.onBeginRunProgramDelegate, new object[] {
                        HeaderInfo,
                        cmd,
                        cmdLine}, this.onEndRunProgramDelegate, this.onRunProgramCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.ExpandTemplate(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn request) {
            return base.Channel.ExpandTemplate(request);
        }
        
        public bool ExpandTemplate(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string sourceNamespace, string targetNamespace) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.sourceNamespace = sourceNamespace;
            inValue.targetNamespace = targetNamespace;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).ExpandTemplate(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginExpandTemplate(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExpandTemplate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExpandTemplate(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string sourceNamespace, string targetNamespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.sourceNamespace = sourceNamespace;
            inValue.targetNamespace = targetNamespace;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginExpandTemplate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndExpandTemplate(System.IAsyncResult result) {
            return base.Channel.EndExpandTemplate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndExpandTemplate(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.ExpandTemplateOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndExpandTemplate(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginExpandTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string sourceNamespace = ((string)(inValues[1]));
            string targetNamespace = ((string)(inValues[2]));
            return this.BeginExpandTemplate(HeaderInfo, sourceNamespace, targetNamespace, callback, asyncState);
        }
        
        private object[] OnEndExpandTemplate(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndExpandTemplate(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnExpandTemplateCompleted(object state) {
            if ((this.ExpandTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExpandTemplateCompleted(this, new ExpandTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExpandTemplateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string sourceNamespace, string targetNamespace) {
            this.ExpandTemplateAsync(HeaderInfo, sourceNamespace, targetNamespace, null);
        }
        
        public void ExpandTemplateAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string sourceNamespace, string targetNamespace, object userState) {
            if ((this.onBeginExpandTemplateDelegate == null)) {
                this.onBeginExpandTemplateDelegate = new BeginOperationDelegate(this.OnBeginExpandTemplate);
            }
            if ((this.onEndExpandTemplateDelegate == null)) {
                this.onEndExpandTemplateDelegate = new EndOperationDelegate(this.OnEndExpandTemplate);
            }
            if ((this.onExpandTemplateCompletedDelegate == null)) {
                this.onExpandTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExpandTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginExpandTemplateDelegate, new object[] {
                        HeaderInfo,
                        sourceNamespace,
                        targetNamespace}, this.onEndExpandTemplateDelegate, this.onExpandTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetTableRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn request) {
            return base.Channel.GetTableRows(request);
        }
        
        public int GetTableRows(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetTableRows(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetTableRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTableRows(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTableRows(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetTableRows(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetTableRows(System.IAsyncResult result) {
            return base.Channel.EndGetTableRows(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetTableRows(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableRowsOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetTableRows(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetTableRows(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string TableName = ((string)(inValues[1]));
            return this.BeginGetTableRows(HeaderInfo, TableName, callback, asyncState);
        }
        
        private object[] OnEndGetTableRows(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetTableRows(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetTableRowsCompleted(object state) {
            if ((this.GetTableRowsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTableRowsCompleted(this, new GetTableRowsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTableRowsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.GetTableRowsAsync(HeaderInfo, TableName, null);
        }
        
        public void GetTableRowsAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, object userState) {
            if ((this.onBeginGetTableRowsDelegate == null)) {
                this.onBeginGetTableRowsDelegate = new BeginOperationDelegate(this.OnBeginGetTableRows);
            }
            if ((this.onEndGetTableRowsDelegate == null)) {
                this.onEndGetTableRowsDelegate = new EndOperationDelegate(this.OnEndGetTableRows);
            }
            if ((this.onGetTableRowsCompletedDelegate == null)) {
                this.onGetTableRowsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTableRowsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTableRowsDelegate, new object[] {
                        HeaderInfo,
                        TableName}, this.onEndGetTableRowsDelegate, this.onGetTableRowsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.GetTableCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn request) {
            return base.Channel.GetTableCurrentRow(request);
        }
        
        public int GetTableCurrentRow(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).GetTableCurrentRow(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginGetTableCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTableCurrentRow(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTableCurrentRow(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginGetTableCurrentRow(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndGetTableCurrentRow(System.IAsyncResult result) {
            return base.Channel.EndGetTableCurrentRow(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndGetTableCurrentRow(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.GetTableCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndGetTableCurrentRow(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetTableCurrentRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string TableName = ((string)(inValues[1]));
            return this.BeginGetTableCurrentRow(HeaderInfo, TableName, callback, asyncState);
        }
        
        private object[] OnEndGetTableCurrentRow(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndGetTableCurrentRow(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetTableCurrentRowCompleted(object state) {
            if ((this.GetTableCurrentRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTableCurrentRowCompleted(this, new GetTableCurrentRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTableCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.GetTableCurrentRowAsync(HeaderInfo, TableName, null);
        }
        
        public void GetTableCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, object userState) {
            if ((this.onBeginGetTableCurrentRowDelegate == null)) {
                this.onBeginGetTableCurrentRowDelegate = new BeginOperationDelegate(this.OnBeginGetTableCurrentRow);
            }
            if ((this.onEndGetTableCurrentRowDelegate == null)) {
                this.onEndGetTableCurrentRowDelegate = new EndOperationDelegate(this.OnEndGetTableCurrentRow);
            }
            if ((this.onGetTableCurrentRowCompletedDelegate == null)) {
                this.onGetTableCurrentRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTableCurrentRowCompleted);
            }
            base.InvokeAsync(this.onBeginGetTableCurrentRowDelegate, new object[] {
                        HeaderInfo,
                        TableName}, this.onEndGetTableCurrentRowDelegate, this.onGetTableCurrentRowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CurrentRowContainsCellTail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn request) {
            return base.Channel.CurrentRowContainsCellTail(request);
        }
        
        public bool CurrentRowContainsCellTail(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CurrentRowContainsCellTail(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCurrentRowContainsCellTail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrentRowContainsCellTail(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCurrentRowContainsCellTail(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCurrentRowContainsCellTail(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCurrentRowContainsCellTail(System.IAsyncResult result) {
            return base.Channel.EndCurrentRowContainsCellTail(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCurrentRowContainsCellTail(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellTailOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCurrentRowContainsCellTail(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCurrentRowContainsCellTail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string TableName = ((string)(inValues[1]));
            return this.BeginCurrentRowContainsCellTail(HeaderInfo, TableName, callback, asyncState);
        }
        
        private object[] OnEndCurrentRowContainsCellTail(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCurrentRowContainsCellTail(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCurrentRowContainsCellTailCompleted(object state) {
            if ((this.CurrentRowContainsCellTailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrentRowContainsCellTailCompleted(this, new CurrentRowContainsCellTailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrentRowContainsCellTailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.CurrentRowContainsCellTailAsync(HeaderInfo, TableName, null);
        }
        
        public void CurrentRowContainsCellTailAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, object userState) {
            if ((this.onBeginCurrentRowContainsCellTailDelegate == null)) {
                this.onBeginCurrentRowContainsCellTailDelegate = new BeginOperationDelegate(this.OnBeginCurrentRowContainsCellTail);
            }
            if ((this.onEndCurrentRowContainsCellTailDelegate == null)) {
                this.onEndCurrentRowContainsCellTailDelegate = new EndOperationDelegate(this.OnEndCurrentRowContainsCellTail);
            }
            if ((this.onCurrentRowContainsCellTailCompletedDelegate == null)) {
                this.onCurrentRowContainsCellTailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrentRowContainsCellTailCompleted);
            }
            base.InvokeAsync(this.onBeginCurrentRowContainsCellTailDelegate, new object[] {
                        HeaderInfo,
                        TableName}, this.onEndCurrentRowContainsCellTailDelegate, this.onCurrentRowContainsCellTailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.CurrentRowContainsCellSubTotal(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn request) {
            return base.Channel.CurrentRowContainsCellSubTotal(request);
        }
        
        public bool CurrentRowContainsCellSubTotal(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).CurrentRowContainsCellSubTotal(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginCurrentRowContainsCellSubTotal(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCurrentRowContainsCellSubTotal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCurrentRowContainsCellSubTotal(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.TableName = TableName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginCurrentRowContainsCellSubTotal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndCurrentRowContainsCellSubTotal(System.IAsyncResult result) {
            return base.Channel.EndCurrentRowContainsCellSubTotal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndCurrentRowContainsCellSubTotal(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.CurrentRowContainsCellSubTotalOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndCurrentRowContainsCellSubTotal(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCurrentRowContainsCellSubTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string TableName = ((string)(inValues[1]));
            return this.BeginCurrentRowContainsCellSubTotal(HeaderInfo, TableName, callback, asyncState);
        }
        
        private object[] OnEndCurrentRowContainsCellSubTotal(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndCurrentRowContainsCellSubTotal(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCurrentRowContainsCellSubTotalCompleted(object state) {
            if ((this.CurrentRowContainsCellSubTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CurrentRowContainsCellSubTotalCompleted(this, new CurrentRowContainsCellSubTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CurrentRowContainsCellSubTotalAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName) {
            this.CurrentRowContainsCellSubTotalAsync(HeaderInfo, TableName, null);
        }
        
        public void CurrentRowContainsCellSubTotalAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string TableName, object userState) {
            if ((this.onBeginCurrentRowContainsCellSubTotalDelegate == null)) {
                this.onBeginCurrentRowContainsCellSubTotalDelegate = new BeginOperationDelegate(this.OnBeginCurrentRowContainsCellSubTotal);
            }
            if ((this.onEndCurrentRowContainsCellSubTotalDelegate == null)) {
                this.onEndCurrentRowContainsCellSubTotalDelegate = new EndOperationDelegate(this.OnEndCurrentRowContainsCellSubTotal);
            }
            if ((this.onCurrentRowContainsCellSubTotalCompletedDelegate == null)) {
                this.onCurrentRowContainsCellSubTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCurrentRowContainsCellSubTotalCompleted);
            }
            base.InvokeAsync(this.onBeginCurrentRowContainsCellSubTotalDelegate, new object[] {
                        HeaderInfo,
                        TableName}, this.onEndCurrentRowContainsCellSubTotalDelegate, this.onCurrentRowContainsCellSubTotalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetFrom(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn request) {
            return base.Channel.MailSetFrom(request);
        }
        
        public bool MailSetFrom(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.From = From;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetFrom(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetFrom(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetFrom(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetFrom(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.From = From;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetFrom(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetFrom(System.IAsyncResult result) {
            return base.Channel.EndMailSetFrom(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetFrom(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetFromOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetFrom(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetFrom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string From = ((string)(inValues[1]));
            return this.BeginMailSetFrom(HeaderInfo, From, callback, asyncState);
        }
        
        private object[] OnEndMailSetFrom(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetFrom(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetFromCompleted(object state) {
            if ((this.MailSetFromCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetFromCompleted(this, new MailSetFromCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetFromAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From) {
            this.MailSetFromAsync(HeaderInfo, From, null);
        }
        
        public void MailSetFromAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string From, object userState) {
            if ((this.onBeginMailSetFromDelegate == null)) {
                this.onBeginMailSetFromDelegate = new BeginOperationDelegate(this.OnBeginMailSetFrom);
            }
            if ((this.onEndMailSetFromDelegate == null)) {
                this.onEndMailSetFromDelegate = new EndOperationDelegate(this.OnEndMailSetFrom);
            }
            if ((this.onMailSetFromCompletedDelegate == null)) {
                this.onMailSetFromCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetFromCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetFromDelegate, new object[] {
                        HeaderInfo,
                        From}, this.onEndMailSetFromDelegate, this.onMailSetFromCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn request) {
            return base.Channel.MailSetSubject(request);
        }
        
        public bool MailSetSubject(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Subject, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Subject = Subject;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetSubject(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetSubject(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetSubject(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Subject, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Subject = Subject;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetSubject(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetSubject(System.IAsyncResult result) {
            return base.Channel.EndMailSetSubject(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetSubject(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetSubjectOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetSubject(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetSubject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Subject = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetSubject(HeaderInfo, Subject, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetSubject(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetSubject(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetSubjectCompleted(object state) {
            if ((this.MailSetSubjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetSubjectCompleted(this, new MailSetSubjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetSubjectAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Subject, bool Append) {
            this.MailSetSubjectAsync(HeaderInfo, Subject, Append, null);
        }
        
        public void MailSetSubjectAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Subject, bool Append, object userState) {
            if ((this.onBeginMailSetSubjectDelegate == null)) {
                this.onBeginMailSetSubjectDelegate = new BeginOperationDelegate(this.OnBeginMailSetSubject);
            }
            if ((this.onEndMailSetSubjectDelegate == null)) {
                this.onEndMailSetSubjectDelegate = new EndOperationDelegate(this.OnEndMailSetSubject);
            }
            if ((this.onMailSetSubjectCompletedDelegate == null)) {
                this.onMailSetSubjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetSubjectCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetSubjectDelegate, new object[] {
                        HeaderInfo,
                        Subject,
                        Append}, this.onEndMailSetSubjectDelegate, this.onMailSetSubjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn request) {
            return base.Channel.MailSetBody(request);
        }
        
        public bool MailSetBody(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Body, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Body = Body;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetBody(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetBody(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetBody(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Body, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Body = Body;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetBody(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetBody(System.IAsyncResult result) {
            return base.Channel.EndMailSetBody(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetBody(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetBody(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetBody(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Body = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetBody(HeaderInfo, Body, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetBody(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetBody(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetBodyCompleted(object state) {
            if ((this.MailSetBodyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetBodyCompleted(this, new MailSetBodyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetBodyAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Body, bool Append) {
            this.MailSetBodyAsync(HeaderInfo, Body, Append, null);
        }
        
        public void MailSetBodyAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Body, bool Append, object userState) {
            if ((this.onBeginMailSetBodyDelegate == null)) {
                this.onBeginMailSetBodyDelegate = new BeginOperationDelegate(this.OnBeginMailSetBody);
            }
            if ((this.onEndMailSetBodyDelegate == null)) {
                this.onEndMailSetBodyDelegate = new EndOperationDelegate(this.OnEndMailSetBody);
            }
            if ((this.onMailSetBodyCompletedDelegate == null)) {
                this.onMailSetBodyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetBodyCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetBodyDelegate, new object[] {
                        HeaderInfo,
                        Body,
                        Append}, this.onEndMailSetBodyDelegate, this.onMailSetBodyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetMapiProfile(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn request) {
            return base.Channel.MailSetMapiProfile(request);
        }
        
        public bool MailSetMapiProfile(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string MapiProfile) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.MapiProfile = MapiProfile;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetMapiProfile(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetMapiProfile(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetMapiProfile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetMapiProfile(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string MapiProfile, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.MapiProfile = MapiProfile;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetMapiProfile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetMapiProfile(System.IAsyncResult result) {
            return base.Channel.EndMailSetMapiProfile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetMapiProfile(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetMapiProfileOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetMapiProfile(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetMapiProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string MapiProfile = ((string)(inValues[1]));
            return this.BeginMailSetMapiProfile(HeaderInfo, MapiProfile, callback, asyncState);
        }
        
        private object[] OnEndMailSetMapiProfile(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetMapiProfile(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetMapiProfileCompleted(object state) {
            if ((this.MailSetMapiProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetMapiProfileCompleted(this, new MailSetMapiProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetMapiProfileAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string MapiProfile) {
            this.MailSetMapiProfileAsync(HeaderInfo, MapiProfile, null);
        }
        
        public void MailSetMapiProfileAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string MapiProfile, object userState) {
            if ((this.onBeginMailSetMapiProfileDelegate == null)) {
                this.onBeginMailSetMapiProfileDelegate = new BeginOperationDelegate(this.OnBeginMailSetMapiProfile);
            }
            if ((this.onEndMailSetMapiProfileDelegate == null)) {
                this.onEndMailSetMapiProfileDelegate = new EndOperationDelegate(this.OnEndMailSetMapiProfile);
            }
            if ((this.onMailSetMapiProfileCompletedDelegate == null)) {
                this.onMailSetMapiProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetMapiProfileCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetMapiProfileDelegate, new object[] {
                        HeaderInfo,
                        MapiProfile}, this.onEndMailSetMapiProfileDelegate, this.onMailSetMapiProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetBodyTemplateFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn request) {
            return base.Channel.MailSetBodyTemplateFileName(request);
        }
        
        public bool MailSetBodyTemplateFileName(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string BodyTemplateFileName) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.BodyTemplateFileName = BodyTemplateFileName;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetBodyTemplateFileName(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetBodyTemplateFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetBodyTemplateFileName(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetBodyTemplateFileName(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string BodyTemplateFileName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.BodyTemplateFileName = BodyTemplateFileName;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetBodyTemplateFileName(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetBodyTemplateFileName(System.IAsyncResult result) {
            return base.Channel.EndMailSetBodyTemplateFileName(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetBodyTemplateFileName(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyTemplateFileNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetBodyTemplateFileName(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetBodyTemplateFileName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string BodyTemplateFileName = ((string)(inValues[1]));
            return this.BeginMailSetBodyTemplateFileName(HeaderInfo, BodyTemplateFileName, callback, asyncState);
        }
        
        private object[] OnEndMailSetBodyTemplateFileName(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetBodyTemplateFileName(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetBodyTemplateFileNameCompleted(object state) {
            if ((this.MailSetBodyTemplateFileNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetBodyTemplateFileNameCompleted(this, new MailSetBodyTemplateFileNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetBodyTemplateFileNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string BodyTemplateFileName) {
            this.MailSetBodyTemplateFileNameAsync(HeaderInfo, BodyTemplateFileName, null);
        }
        
        public void MailSetBodyTemplateFileNameAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string BodyTemplateFileName, object userState) {
            if ((this.onBeginMailSetBodyTemplateFileNameDelegate == null)) {
                this.onBeginMailSetBodyTemplateFileNameDelegate = new BeginOperationDelegate(this.OnBeginMailSetBodyTemplateFileName);
            }
            if ((this.onEndMailSetBodyTemplateFileNameDelegate == null)) {
                this.onEndMailSetBodyTemplateFileNameDelegate = new EndOperationDelegate(this.OnEndMailSetBodyTemplateFileName);
            }
            if ((this.onMailSetBodyTemplateFileNameCompletedDelegate == null)) {
                this.onMailSetBodyTemplateFileNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetBodyTemplateFileNameCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetBodyTemplateFileNameDelegate, new object[] {
                        HeaderInfo,
                        BodyTemplateFileName}, this.onEndMailSetBodyTemplateFileNameDelegate, this.onMailSetBodyTemplateFileNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn request) {
            return base.Channel.MailSetTo(request);
        }
        
        public bool MailSetTo(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.To = To;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetTo(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetTo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetTo(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.To = To;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetTo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetTo(System.IAsyncResult result) {
            return base.Channel.EndMailSetTo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetTo(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetTo(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetTo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string To = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetTo(HeaderInfo, To, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetTo(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetTo(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetToCompleted(object state) {
            if ((this.MailSetToCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetToCompleted(this, new MailSetToCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetToAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            this.MailSetToAsync(HeaderInfo, To, Append, null);
        }
        
        public void MailSetToAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append, object userState) {
            if ((this.onBeginMailSetToDelegate == null)) {
                this.onBeginMailSetToDelegate = new BeginOperationDelegate(this.OnBeginMailSetTo);
            }
            if ((this.onEndMailSetToDelegate == null)) {
                this.onEndMailSetToDelegate = new EndOperationDelegate(this.OnEndMailSetTo);
            }
            if ((this.onMailSetToCompletedDelegate == null)) {
                this.onMailSetToCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetToCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetToDelegate, new object[] {
                        HeaderInfo,
                        To,
                        Append}, this.onEndMailSetToDelegate, this.onMailSetToCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn request) {
            return base.Channel.MailSetCc(request);
        }
        
        public bool MailSetCc(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Cc, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Cc = Cc;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetCc(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetCc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetCc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Cc, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Cc = Cc;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetCc(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetCc(System.IAsyncResult result) {
            return base.Channel.EndMailSetCc(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetCc(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCcOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetCc(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetCc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Cc = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetCc(HeaderInfo, Cc, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetCc(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetCc(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetCcCompleted(object state) {
            if ((this.MailSetCcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetCcCompleted(this, new MailSetCcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetCcAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Cc, bool Append) {
            this.MailSetCcAsync(HeaderInfo, Cc, Append, null);
        }
        
        public void MailSetCcAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Cc, bool Append, object userState) {
            if ((this.onBeginMailSetCcDelegate == null)) {
                this.onBeginMailSetCcDelegate = new BeginOperationDelegate(this.OnBeginMailSetCc);
            }
            if ((this.onEndMailSetCcDelegate == null)) {
                this.onEndMailSetCcDelegate = new EndOperationDelegate(this.OnEndMailSetCc);
            }
            if ((this.onMailSetCcCompletedDelegate == null)) {
                this.onMailSetCcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetCcCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetCcDelegate, new object[] {
                        HeaderInfo,
                        Cc,
                        Append}, this.onEndMailSetCcDelegate, this.onMailSetCcCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn request) {
            return base.Channel.MailSetBcc(request);
        }
        
        public bool MailSetBcc(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Bcc, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Bcc = Bcc;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetBcc(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetBcc(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetBcc(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Bcc, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Bcc = Bcc;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetBcc(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetBcc(System.IAsyncResult result) {
            return base.Channel.EndMailSetBcc(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetBcc(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBccOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetBcc(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetBcc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Bcc = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetBcc(HeaderInfo, Bcc, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetBcc(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetBcc(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetBccCompleted(object state) {
            if ((this.MailSetBccCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetBccCompleted(this, new MailSetBccCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetBccAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Bcc, bool Append) {
            this.MailSetBccAsync(HeaderInfo, Bcc, Append, null);
        }
        
        public void MailSetBccAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Bcc, bool Append, object userState) {
            if ((this.onBeginMailSetBccDelegate == null)) {
                this.onBeginMailSetBccDelegate = new BeginOperationDelegate(this.OnBeginMailSetBcc);
            }
            if ((this.onEndMailSetBccDelegate == null)) {
                this.onEndMailSetBccDelegate = new EndOperationDelegate(this.OnEndMailSetBcc);
            }
            if ((this.onMailSetBccCompletedDelegate == null)) {
                this.onMailSetBccCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetBccCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetBccDelegate, new object[] {
                        HeaderInfo,
                        Bcc,
                        Append}, this.onEndMailSetBccDelegate, this.onMailSetBccCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetToCertified(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn request) {
            return base.Channel.MailSetToCertified(request);
        }
        
        public bool MailSetToCertified(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.To = To;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetToCertified(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetToCertified(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetToCertified(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetToCertified(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.To = To;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetToCertified(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetToCertified(System.IAsyncResult result) {
            return base.Channel.EndMailSetToCertified(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetToCertified(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetToCertifiedOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetToCertified(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetToCertified(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string To = ((string)(inValues[1]));
            bool Append = ((bool)(inValues[2]));
            return this.BeginMailSetToCertified(HeaderInfo, To, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetToCertified(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetToCertified(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetToCertifiedCompleted(object state) {
            if ((this.MailSetToCertifiedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetToCertifiedCompleted(this, new MailSetToCertifiedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetToCertifiedAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append) {
            this.MailSetToCertifiedAsync(HeaderInfo, To, Append, null);
        }
        
        public void MailSetToCertifiedAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string To, bool Append, object userState) {
            if ((this.onBeginMailSetToCertifiedDelegate == null)) {
                this.onBeginMailSetToCertifiedDelegate = new BeginOperationDelegate(this.OnBeginMailSetToCertified);
            }
            if ((this.onEndMailSetToCertifiedDelegate == null)) {
                this.onEndMailSetToCertifiedDelegate = new EndOperationDelegate(this.OnEndMailSetToCertified);
            }
            if ((this.onMailSetToCertifiedCompletedDelegate == null)) {
                this.onMailSetToCertifiedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetToCertifiedCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetToCertifiedDelegate, new object[] {
                        HeaderInfo,
                        To,
                        Append}, this.onEndMailSetToCertifiedDelegate, this.onMailSetToCertifiedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetCertifiedFilter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn request) {
            return base.Channel.MailSetCertifiedFilter(request);
        }
        
        public bool MailSetCertifiedFilter(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Filter) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Filter = Filter;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetCertifiedFilter(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetCertifiedFilter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetCertifiedFilter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetCertifiedFilter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Filter, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Filter = Filter;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetCertifiedFilter(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetCertifiedFilter(System.IAsyncResult result) {
            return base.Channel.EndMailSetCertifiedFilter(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetCertifiedFilter(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetCertifiedFilterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetCertifiedFilter(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetCertifiedFilter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            int Filter = ((int)(inValues[1]));
            return this.BeginMailSetCertifiedFilter(HeaderInfo, Filter, callback, asyncState);
        }
        
        private object[] OnEndMailSetCertifiedFilter(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetCertifiedFilter(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetCertifiedFilterCompleted(object state) {
            if ((this.MailSetCertifiedFilterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetCertifiedFilterCompleted(this, new MailSetCertifiedFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetCertifiedFilterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Filter) {
            this.MailSetCertifiedFilterAsync(HeaderInfo, Filter, null);
        }
        
        public void MailSetCertifiedFilterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, int Filter, object userState) {
            if ((this.onBeginMailSetCertifiedFilterDelegate == null)) {
                this.onBeginMailSetCertifiedFilterDelegate = new BeginOperationDelegate(this.OnBeginMailSetCertifiedFilter);
            }
            if ((this.onEndMailSetCertifiedFilterDelegate == null)) {
                this.onEndMailSetCertifiedFilterDelegate = new EndOperationDelegate(this.OnEndMailSetCertifiedFilter);
            }
            if ((this.onMailSetCertifiedFilterCompletedDelegate == null)) {
                this.onMailSetCertifiedFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetCertifiedFilterCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetCertifiedFilterDelegate, new object[] {
                        HeaderInfo,
                        Filter}, this.onEndMailSetCertifiedFilterDelegate, this.onMailSetCertifiedFilterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetAttachment(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn request) {
            return base.Channel.MailSetAttachment(request);
        }
        
        public bool MailSetAttachment(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Attachment, string AttachmentTitle, bool Append) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Attachment = Attachment;
            inValue.AttachmentTitle = AttachmentTitle;
            inValue.Append = Append;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetAttachment(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetAttachment(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetAttachment(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetAttachment(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Attachment, string AttachmentTitle, bool Append, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Attachment = Attachment;
            inValue.AttachmentTitle = AttachmentTitle;
            inValue.Append = Append;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetAttachment(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetAttachment(System.IAsyncResult result) {
            return base.Channel.EndMailSetAttachment(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetAttachment(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetAttachmentOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetAttachment(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetAttachment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Attachment = ((string)(inValues[1]));
            string AttachmentTitle = ((string)(inValues[2]));
            bool Append = ((bool)(inValues[3]));
            return this.BeginMailSetAttachment(HeaderInfo, Attachment, AttachmentTitle, Append, callback, asyncState);
        }
        
        private object[] OnEndMailSetAttachment(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetAttachment(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetAttachmentCompleted(object state) {
            if ((this.MailSetAttachmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetAttachmentCompleted(this, new MailSetAttachmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetAttachmentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Attachment, string AttachmentTitle, bool Append) {
            this.MailSetAttachmentAsync(HeaderInfo, Attachment, AttachmentTitle, Append, null);
        }
        
        public void MailSetAttachmentAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Attachment, string AttachmentTitle, bool Append, object userState) {
            if ((this.onBeginMailSetAttachmentDelegate == null)) {
                this.onBeginMailSetAttachmentDelegate = new BeginOperationDelegate(this.OnBeginMailSetAttachment);
            }
            if ((this.onEndMailSetAttachmentDelegate == null)) {
                this.onEndMailSetAttachmentDelegate = new EndOperationDelegate(this.OnEndMailSetAttachment);
            }
            if ((this.onMailSetAttachmentCompletedDelegate == null)) {
                this.onMailSetAttachmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetAttachmentCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetAttachmentDelegate, new object[] {
                        HeaderInfo,
                        Attachment,
                        AttachmentTitle,
                        Append}, this.onEndMailSetAttachmentDelegate, this.onMailSetAttachmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.MailSetBodyParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn request) {
            return base.Channel.MailSetBodyParameter(request);
        }
        
        public bool MailSetBodyParameter(ref Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Name, string Value) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Name = Name;
            inValue.Value = Value;
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).MailSetBodyParameter(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.BeginMailSetBodyParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMailSetBodyParameter(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMailSetBodyParameter(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Name, string Value, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn inValue = new Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.Name = Name;
            inValue.Value = Value;
            return ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).BeginMailSetBodyParameter(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer.EndMailSetBodyParameter(System.IAsyncResult result) {
            return base.Channel.EndMailSetBodyParameter(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo EndMailSetBodyParameter(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.MailSetBodyParameterOut retVal = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TbWoormViewer)(this)).EndMailSetBodyParameter(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginMailSetBodyParameter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo)(inValues[0]));
            string Name = ((string)(inValues[1]));
            string Value = ((string)(inValues[2]));
            return this.BeginMailSetBodyParameter(HeaderInfo, Name, Value, callback, asyncState);
        }
        
        private object[] OnEndMailSetBodyParameter(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo retVal = this.EndMailSetBodyParameter(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnMailSetBodyParameterCompleted(object state) {
            if ((this.MailSetBodyParameterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MailSetBodyParameterCompleted(this, new MailSetBodyParameterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MailSetBodyParameterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Name, string Value) {
            this.MailSetBodyParameterAsync(HeaderInfo, Name, Value, null);
        }
        
        public void MailSetBodyParameterAsync(Microarea.TaskBuilderNet.Core.TbWoormViewerInterface.TBHeaderInfo HeaderInfo, string Name, string Value, object userState) {
            if ((this.onBeginMailSetBodyParameterDelegate == null)) {
                this.onBeginMailSetBodyParameterDelegate = new BeginOperationDelegate(this.OnBeginMailSetBodyParameter);
            }
            if ((this.onEndMailSetBodyParameterDelegate == null)) {
                this.onEndMailSetBodyParameterDelegate = new EndOperationDelegate(this.OnEndMailSetBodyParameter);
            }
            if ((this.onMailSetBodyParameterCompletedDelegate == null)) {
                this.onMailSetBodyParameterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMailSetBodyParameterCompleted);
            }
            base.InvokeAsync(this.onBeginMailSetBodyParameterDelegate, new object[] {
                        HeaderInfo,
                        Name,
                        Value}, this.onEndMailSetBodyParameterDelegate, this.onMailSetBodyParameterCompletedDelegate, userState);
        }
    }
}
