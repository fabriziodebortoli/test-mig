//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.TaskBuilderNet.Core.TbDMSInterface {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBHeaderInfo", Namespace="urn:Microarea.Web.Services")]
    [System.SerializableAttribute()]
    public partial class TBHeaderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthToken {
            get {
                return this.AuthTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthTokenField, value) != true)) {
                    this.AuthTokenField = value;
                    this.RaisePropertyChanged("AuthToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
    [System.SerializableAttribute()]
    public partial class TBSoapFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Microarea.Web.Services", ConfigurationName="TbDMSInterface.TbDMS")]
    public interface TbDMS {
        
        // CODEGEN: Generating message contract since the operation GetAttachmentTemporaryFilePath is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetAttachmentTemporaryFilePath", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetAttachmentTemporaryFilePathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetAttachmentTemporaryFilePathTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathOut GetAttachmentTemporaryFilePath(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathIn request);
        
        // CODEGEN: Generating message contract since the operation MassiveAttachUnattendedMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#MassiveAttachUnattendedMode", ReplyAction="urn:Microarea.Web.Services/TbDMS/MassiveAttachUnattendedModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/MassiveAttachUnattendedModeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeOut MassiveAttachUnattendedMode(Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeIn request);
        
        // CODEGEN: Generating message contract since the operation SearchAttachmentsForDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SearchAttachmentsForDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/SearchAttachmentsForDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/SearchAttachmentsForDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentOut SearchAttachmentsForDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentIn request);
        
        // CODEGEN: Generating message contract since the operation SaveAttachmentFileInFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SaveAttachmentFileInFolder", ReplyAction="urn:Microarea.Web.Services/TbDMS/SaveAttachmentFileInFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/SaveAttachmentFileInFolderTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderOut SaveAttachmentFileInFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderIn request);
        
        // CODEGEN: Generating message contract since the operation GetAttachmentBinaryContent is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetAttachmentBinaryContent", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetAttachmentBinaryContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetAttachmentBinaryContentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentOut GetAttachmentBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentIn request);
        
        // CODEGEN: Generating message contract since the operation GetAttachmentIDByFileName is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetAttachmentIDByFileName", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetAttachmentIDByFileNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetAttachmentIDByFileNameTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameOut GetAttachmentIDByFileName(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameIn request);
        
        // CODEGEN: Generating message contract since the operation AttachFolderInDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachFolderInDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachFolderInDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachFolderInDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentOut AttachFolderInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentIn request);
        
        // CODEGEN: Generating message contract since the operation AttachFromTable is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachFromTable", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachFromTableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachFromTableTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableOut AttachFromTable(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableIn request);
        
        // CODEGEN: Generating message contract since the operation ArchiveBinaryContent is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ArchiveBinaryContent", ReplyAction="urn:Microarea.Web.Services/TbDMS/ArchiveBinaryContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/ArchiveBinaryContentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentOut ArchiveBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentIn request);
        
        // CODEGEN: Generating message contract since the operation AttachBinaryContent is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachBinaryContent", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachBinaryContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachBinaryContentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentOut AttachBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentIn request);
        
        // CODEGEN: Generating message contract since the operation AttachBinaryContentInDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachBinaryContentInDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachBinaryContentInDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachBinaryContentInDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentOut AttachBinaryContentInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentIn request);
        
        // CODEGEN: Generating message contract since the operation DeleteAttachment is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DeleteAttachment", ReplyAction="urn:Microarea.Web.Services/TbDMS/DeleteAttachmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/DeleteAttachmentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentOut DeleteAttachment(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentIn request);
        
        // CODEGEN: Generating message contract since the operation DeleteDocumentAttachments is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DeleteDocumentAttachments", ReplyAction="urn:Microarea.Web.Services/TbDMS/DeleteDocumentAttachmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/DeleteDocumentAttachmentsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsOut DeleteDocumentAttachments(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsIn request);
        
        // CODEGEN: Generating message contract since the operation DeleteAllERPDocumentInfo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DeleteAllERPDocumentInfo", ReplyAction="urn:Microarea.Web.Services/TbDMS/DeleteAllERPDocumentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/DeleteAllERPDocumentInfoTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoOut DeleteAllERPDocumentInfo(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoIn request);
        
        // CODEGEN: Generating message contract since the operation GetNewBarcodeValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetNewBarcodeValue", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetNewBarcodeValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetNewBarcodeValueTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueOut GetNewBarcodeValue(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueIn request);
        
        // CODEGEN: Generating message contract since the operation GetDefaultBarcodeType is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetDefaultBarcodeType", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetDefaultBarcodeTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetDefaultBarcodeTypeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeOut GetDefaultBarcodeType(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeIn request);
        
        // CODEGEN: Generating message contract since the operation AttachPaperyBarcode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachPaperyBarcode", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachPaperyBarcodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachPaperyBarcodeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeOut AttachPaperyBarcode(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeIn request);
        
        // CODEGEN: Generating message contract since the operation AttachPaperyInDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachPaperyInDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachPaperyInDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachPaperyInDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentOut AttachPaperyInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentIn request);
        
        // CODEGEN: Generating message contract since the operation RunDocumentWithEAPanel is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunDocumentWithEAPanel", ReplyAction="urn:Microarea.Web.Services/TbDMS/RunDocumentWithEAPanelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/RunDocumentWithEAPanelTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelOut RunDocumentWithEAPanel(Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelIn request);
        
        // CODEGEN: Generating message contract since the operation GetEasyAttachmentTempPath is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetEasyAttachmentTempPath", ReplyAction="urn:Microarea.Web.Services/TbDMS/GetEasyAttachmentTempPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/GetEasyAttachmentTempPathTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathOut GetEasyAttachmentTempPath(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathIn request);
        
        // CODEGEN: Generating message contract since the operation OpenMassiveAttach is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenMassiveAttach", ReplyAction="urn:Microarea.Web.Services/TbDMS/OpenMassiveAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/OpenMassiveAttachTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachOut OpenMassiveAttach(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachIn request);
        
        // CODEGEN: Generating message contract since the operation OpenQuickAttach is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenQuickAttach", ReplyAction="urn:Microarea.Web.Services/TbDMS/OpenQuickAttachResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/OpenQuickAttachTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachOut OpenQuickAttach(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachIn request);
        
        // CODEGEN: Generating message contract since the operation OpenAttachmentWebSearch is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenAttachmentWebSearch", ReplyAction="urn:Microarea.Web.Services/TbDMS/OpenAttachmentWebSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/OpenAttachmentWebSearchTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchOut OpenAttachmentWebSearch(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchIn request);
        
        // CODEGEN: Generating message contract since the operation OpenBBTraylet is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenBBTraylet", ReplyAction="urn:Microarea.Web.Services/TbDMS/OpenBBTrayletResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/OpenBBTrayletTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletOut OpenBBTraylet(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletIn request);
        
        // CODEGEN: Generating message contract since the operation OpenBBSettings is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#OpenBBSettings", ReplyAction="urn:Microarea.Web.Services/TbDMS/OpenBBSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/OpenBBSettingsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsOut OpenBBSettings(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsIn request);
        
        // CODEGEN: Generating message contract since the operation AttachFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachFile", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachFileTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileOut AttachFile(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileIn request);
        
        // CODEGEN: Generating message contract since the operation AttachArchivedDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachArchivedDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachArchivedDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachArchivedDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentOut AttachArchivedDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentIn request);
        
        // CODEGEN: Generating message contract since the operation AttachFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachFolder", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachFolderTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderOut AttachFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderIn request);
        
        // CODEGEN: Generating message contract since the operation ArchiveFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ArchiveFile", ReplyAction="urn:Microarea.Web.Services/TbDMS/ArchiveFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/ArchiveFileTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileOut ArchiveFile(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileIn request);
        
        // CODEGEN: Generating message contract since the operation ArchiveFolder is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ArchiveFolder", ReplyAction="urn:Microarea.Web.Services/TbDMS/ArchiveFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/ArchiveFolderTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderOut ArchiveFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderIn request);
        
        // CODEGEN: Generating message contract since the operation AttachFileInDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AttachFileInDocument", ReplyAction="urn:Microarea.Web.Services/TbDMS/AttachFileInDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbDMS/AttachFileInDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentOut AttachFileInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentIn request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentTemporaryFilePathIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentTemporaryFilePath", Order=0)]
        public int attachmentID;
        
        public GetAttachmentTemporaryFilePathIn() {
        }
        
        public GetAttachmentTemporaryFilePathIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID) {
            this.HeaderInfo = HeaderInfo;
            this.attachmentID = attachmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentTemporaryFilePathOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentTemporaryFilePath", Order=0)]
        public string @return;
        
        public GetAttachmentTemporaryFilePathOut() {
        }
        
        public GetAttachmentTemporaryFilePathOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MassiveAttachUnattendedModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MassiveAttachUnattendedMode", Order=0)]
        public string folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MassiveAttachUnattendedMode", Order=1)]
        public bool splitFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MassiveAttachUnattendedMode", Order=2)]
        public string result;
        
        public MassiveAttachUnattendedModeIn() {
        }
        
        public MassiveAttachUnattendedModeIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, bool splitFile, string result) {
            this.HeaderInfo = HeaderInfo;
            this.folder = folder;
            this.splitFile = splitFile;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MassiveAttachUnattendedModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MassiveAttachUnattendedMode", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.MassiveAttachUnattendedMode", Order=1)]
        public string result;
        
        public MassiveAttachUnattendedModeOut() {
        }
        
        public MassiveAttachUnattendedModeOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchAttachmentsForDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=2)]
        public string searchText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=3)]
        public int location;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=4)]
        public string searchFields;
        
        public SearchAttachmentsForDocumentIn() {
        }
        
        public SearchAttachmentsForDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string searchText, int location, string searchFields) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.searchText = searchText;
            this.location = location;
            this.searchFields = searchFields;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchAttachmentsForDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SearchAttachmentsForDocument", Order=0)]
        public int[] @return;
        
        public SearchAttachmentsForDocumentOut() {
        }
        
        public SearchAttachmentsForDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int[] @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveAttachmentFileInFolderIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SaveAttachmentFileInFolder", Order=0)]
        public int attachmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SaveAttachmentFileInFolder", Order=1)]
        public string sharedFolder;
        
        public SaveAttachmentFileInFolderIn() {
        }
        
        public SaveAttachmentFileInFolderIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID, string sharedFolder) {
            this.HeaderInfo = HeaderInfo;
            this.attachmentID = attachmentID;
            this.sharedFolder = sharedFolder;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveAttachmentFileInFolderOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SaveAttachmentFileInFolder", Order=0)]
        public string @return;
        
        public SaveAttachmentFileInFolderOut() {
        }
        
        public SaveAttachmentFileInFolderOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentBinaryContentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=0)]
        public int attachmentID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=1)]
        public byte[] binaryContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=3)]
        public bool veryLargeFile;
        
        public GetAttachmentBinaryContentIn() {
        }
        
        public GetAttachmentBinaryContentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID, byte[] binaryContent, string fileName, bool veryLargeFile) {
            this.HeaderInfo = HeaderInfo;
            this.attachmentID = attachmentID;
            this.binaryContent = binaryContent;
            this.fileName = fileName;
            this.veryLargeFile = veryLargeFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentBinaryContentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=1)]
        public byte[] binaryContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentBinaryContent", Order=3)]
        public bool veryLargeFile;
        
        public GetAttachmentBinaryContentOut() {
        }
        
        public GetAttachmentBinaryContentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, byte[] binaryContent, string fileName, bool veryLargeFile) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.binaryContent = binaryContent;
            this.fileName = fileName;
            this.veryLargeFile = veryLargeFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentIDByFileNameIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentIDByFileName", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentIDByFileName", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentIDByFileName", Order=2)]
        public string fileName;
        
        public GetAttachmentIDByFileNameIn() {
        }
        
        public GetAttachmentIDByFileNameIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string fileName) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentIDByFileNameOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetAttachmentIDByFileName", Order=0)]
        public int @return;
        
        public GetAttachmentIDByFileNameOut() {
        }
        
        public GetAttachmentIDByFileNameOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFolderInDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=2)]
        public string folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=3)]
        public string result;
        
        public AttachFolderInDocumentIn() {
        }
        
        public AttachFolderInDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string folder, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.folder = folder;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFolderInDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolderInDocument", Order=1)]
        public string result;
        
        public AttachFolderInDocumentOut() {
        }
        
        public AttachFolderInDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFromTableIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFromTable", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFromTable", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFromTable", Order=2)]
        public string result;
        
        public AttachFromTableIn() {
        }
        
        public AttachFromTableIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFromTableOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFromTable", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFromTable", Order=1)]
        public string result;
        
        public AttachFromTableOut() {
        }
        
        public AttachFromTableOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveBinaryContentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=0)]
        public byte[] binaryContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=1)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=2)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=3)]
        public int archivedDocID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=4)]
        public string result;
        
        public ArchiveBinaryContentIn() {
        }
        
        public ArchiveBinaryContentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, int archivedDocID, string result) {
            this.HeaderInfo = HeaderInfo;
            this.binaryContent = binaryContent;
            this.sourceFileName = sourceFileName;
            this.description = description;
            this.archivedDocID = archivedDocID;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveBinaryContentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=1)]
        public int archivedDocID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveBinaryContent", Order=2)]
        public string result;
        
        public ArchiveBinaryContentOut() {
        }
        
        public ArchiveBinaryContentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, int archivedDocID, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.archivedDocID = archivedDocID;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachBinaryContentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=0)]
        public byte[] binaryContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=1)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=2)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=3)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=4)]
        public int attachmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=5)]
        public string result;
        
        public AttachBinaryContentIn() {
        }
        
        public AttachBinaryContentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, int documentHandle, int attachmentId, string result) {
            this.HeaderInfo = HeaderInfo;
            this.binaryContent = binaryContent;
            this.sourceFileName = sourceFileName;
            this.description = description;
            this.documentHandle = documentHandle;
            this.attachmentId = attachmentId;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachBinaryContentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=1)]
        public int attachmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContent", Order=2)]
        public string result;
        
        public AttachBinaryContentOut() {
        }
        
        public AttachBinaryContentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, int attachmentId, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.attachmentId = attachmentId;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachBinaryContentInDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=0)]
        public byte[] binaryContent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=1)]
        public string sourceFileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=2)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=3)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=4)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=5)]
        public int attachmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=6)]
        public string result;
        
        public AttachBinaryContentInDocumentIn() {
        }
        
        public AttachBinaryContentInDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, string documentNamespace, string documentKey, int attachmentId, string result) {
            this.HeaderInfo = HeaderInfo;
            this.binaryContent = binaryContent;
            this.sourceFileName = sourceFileName;
            this.description = description;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.attachmentId = attachmentId;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachBinaryContentInDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=1)]
        public int attachmentId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachBinaryContentInDocument", Order=2)]
        public string result;
        
        public AttachBinaryContentInDocumentOut() {
        }
        
        public AttachBinaryContentInDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, int attachmentId, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.attachmentId = attachmentId;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAttachmentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAttachment", Order=0)]
        public int attachmentID;
        
        public DeleteAttachmentIn() {
        }
        
        public DeleteAttachmentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID) {
            this.HeaderInfo = HeaderInfo;
            this.attachmentID = attachmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAttachmentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAttachment", Order=0)]
        public bool @return;
        
        public DeleteAttachmentOut() {
        }
        
        public DeleteAttachmentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDocumentAttachmentsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteDocumentAttachments", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteDocumentAttachments", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteDocumentAttachments", Order=2)]
        public string result;
        
        public DeleteDocumentAttachmentsIn() {
        }
        
        public DeleteDocumentAttachmentsIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteDocumentAttachmentsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteDocumentAttachments", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteDocumentAttachments", Order=1)]
        public string result;
        
        public DeleteDocumentAttachmentsOut() {
        }
        
        public DeleteDocumentAttachmentsOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllERPDocumentInfoIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAllERPDocumentInfo", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAllERPDocumentInfo", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAllERPDocumentInfo", Order=2)]
        public string result;
        
        public DeleteAllERPDocumentInfoIn() {
        }
        
        public DeleteAllERPDocumentInfoIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteAllERPDocumentInfoOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAllERPDocumentInfo", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DeleteAllERPDocumentInfo", Order=1)]
        public string result;
        
        public DeleteAllERPDocumentInfoOut() {
        }
        
        public DeleteAllERPDocumentInfoOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewBarcodeValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public GetNewBarcodeValueIn() {
        }
        
        public GetNewBarcodeValueIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNewBarcodeValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetNewBarcodeValue", Order=0)]
        public string @return;
        
        public GetNewBarcodeValueOut() {
        }
        
        public GetNewBarcodeValueOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDefaultBarcodeTypeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDefaultBarcodeType", Order=0)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDefaultBarcodeType", Order=1)]
        public string prefix;
        
        public GetDefaultBarcodeTypeIn() {
        }
        
        public GetDefaultBarcodeTypeIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string type, string prefix) {
            this.HeaderInfo = HeaderInfo;
            this.type = type;
            this.prefix = prefix;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDefaultBarcodeTypeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDefaultBarcodeType", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDefaultBarcodeType", Order=1)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDefaultBarcodeType", Order=2)]
        public string prefix;
        
        public GetDefaultBarcodeTypeOut() {
        }
        
        public GetDefaultBarcodeTypeOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string type, string prefix) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.type = type;
            this.prefix = prefix;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachPaperyBarcodeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyBarcode", Order=0)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyBarcode", Order=1)]
        public string barcode;
        
        public AttachPaperyBarcodeIn() {
        }
        
        public AttachPaperyBarcodeIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int documentHandle, string barcode) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
            this.barcode = barcode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachPaperyBarcodeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyBarcode", Order=0)]
        public bool @return;
        
        public AttachPaperyBarcodeOut() {
        }
        
        public AttachPaperyBarcodeOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachPaperyInDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=2)]
        public string barcode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=3)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=4)]
        public string result;
        
        public AttachPaperyInDocumentIn() {
        }
        
        public AttachPaperyInDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string barcode, string description, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.barcode = barcode;
            this.description = description;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachPaperyInDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachPaperyInDocument", Order=1)]
        public string result;
        
        public AttachPaperyInDocumentOut() {
        }
        
        public AttachPaperyInDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentWithEAPanelIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocumentWithEAPanel", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocumentWithEAPanel", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocumentWithEAPanel", Order=2)]
        public string result;
        
        public RunDocumentWithEAPanelIn() {
        }
        
        public RunDocumentWithEAPanelIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentWithEAPanelOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocumentWithEAPanel", Order=0)]
        public int @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocumentWithEAPanel", Order=1)]
        public string result;
        
        public RunDocumentWithEAPanelOut() {
        }
        
        public RunDocumentWithEAPanelOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEasyAttachmentTempPathIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public GetEasyAttachmentTempPathIn() {
        }
        
        public GetEasyAttachmentTempPathIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetEasyAttachmentTempPathOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetEasyAttachmentTempPath", Order=0)]
        public string @return;
        
        public GetEasyAttachmentTempPathOut() {
        }
        
        public GetEasyAttachmentTempPathOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenMassiveAttachIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenMassiveAttachIn() {
        }
        
        public OpenMassiveAttachIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenMassiveAttachOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenMassiveAttach", Order=0)]
        public bool @return;
        
        public OpenMassiveAttachOut() {
        }
        
        public OpenMassiveAttachOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenQuickAttachIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenQuickAttachIn() {
        }
        
        public OpenQuickAttachIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenQuickAttachOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenQuickAttach", Order=0)]
        public bool @return;
        
        public OpenQuickAttachOut() {
        }
        
        public OpenQuickAttachOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenAttachmentWebSearchIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenAttachmentWebSearchIn() {
        }
        
        public OpenAttachmentWebSearchIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenAttachmentWebSearchOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenAttachmentWebSearchOut() {
        }
        
        public OpenAttachmentWebSearchOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenBBTrayletIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenBBTrayletIn() {
        }
        
        public OpenBBTrayletIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenBBTrayletOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenBBTraylet", Order=0)]
        public bool @return;
        
        public OpenBBTrayletOut() {
        }
        
        public OpenBBTrayletOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenBBSettingsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        public OpenBBSettingsIn() {
        }
        
        public OpenBBSettingsIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class OpenBBSettingsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.OpenBBSettings", Order=0)]
        public bool @return;
        
        public OpenBBSettingsOut() {
        }
        
        public OpenBBSettingsOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFileIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=1)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=2)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=3)]
        public string result;
        
        public AttachFileIn() {
        }
        
        public AttachFileIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string fileName, string description, int documentHandle, string result) {
            this.HeaderInfo = HeaderInfo;
            this.fileName = fileName;
            this.description = description;
            this.documentHandle = documentHandle;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFileOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFile", Order=1)]
        public string result;
        
        public AttachFileOut() {
        }
        
        public AttachFileOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachArchivedDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachArchivedDocument", Order=0)]
        public int archivedDocId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachArchivedDocument", Order=1)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachArchivedDocument", Order=2)]
        public string result;
        
        public AttachArchivedDocumentIn() {
        }
        
        public AttachArchivedDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int archivedDocId, int documentHandle, string result) {
            this.HeaderInfo = HeaderInfo;
            this.archivedDocId = archivedDocId;
            this.documentHandle = documentHandle;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachArchivedDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachArchivedDocument", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachArchivedDocument", Order=1)]
        public string result;
        
        public AttachArchivedDocumentOut() {
        }
        
        public AttachArchivedDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFolderIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolder", Order=0)]
        public string folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolder", Order=1)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolder", Order=2)]
        public string result;
        
        public AttachFolderIn() {
        }
        
        public AttachFolderIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, int documentHandle, string result) {
            this.HeaderInfo = HeaderInfo;
            this.folder = folder;
            this.documentHandle = documentHandle;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFolderOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolder", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFolder", Order=1)]
        public string result;
        
        public AttachFolderOut() {
        }
        
        public AttachFolderOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveFileIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFile", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFile", Order=1)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFile", Order=2)]
        public string result;
        
        public ArchiveFileIn() {
        }
        
        public ArchiveFileIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string fileName, string description, string result) {
            this.HeaderInfo = HeaderInfo;
            this.fileName = fileName;
            this.description = description;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveFileOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFile", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFile", Order=1)]
        public string result;
        
        public ArchiveFileOut() {
        }
        
        public ArchiveFileOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveFolderIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFolder", Order=0)]
        public string folder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFolder", Order=1)]
        public string result;
        
        public ArchiveFolderIn() {
        }
        
        public ArchiveFolderIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, string result) {
            this.HeaderInfo = HeaderInfo;
            this.folder = folder;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ArchiveFolderOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFolder", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ArchiveFolder", Order=1)]
        public string result;
        
        public ArchiveFolderOut() {
        }
        
        public ArchiveFolderOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFileInDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=1)]
        public string documentKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=3)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=4)]
        public string result;
        
        public AttachFileInDocumentIn() {
        }
        
        public AttachFileInDocumentIn(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string fileName, string description, string result) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.documentKey = documentKey;
            this.fileName = fileName;
            this.description = description;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AttachFileInDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.AttachFileInDocument", Order=1)]
        public string result;
        
        public AttachFileInDocumentOut() {
        }
        
        public AttachFileInDocumentOut(Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, bool @return, string result) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TbDMSChannel : Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TbDMSClient : System.ServiceModel.ClientBase<Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS>, Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS {
        
        public TbDMSClient() {
        }
        
        public TbDMSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TbDMSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbDMSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbDMSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetAttachmentTemporaryFilePath(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathIn request) {
            return base.Channel.GetAttachmentTemporaryFilePath(request);
        }
        
        public string GetAttachmentTemporaryFilePath(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.attachmentID = attachmentID;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentTemporaryFilePathOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetAttachmentTemporaryFilePath(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.MassiveAttachUnattendedMode(Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeIn request) {
            return base.Channel.MassiveAttachUnattendedMode(request);
        }
        
        public bool MassiveAttachUnattendedMode(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, bool splitFile, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.folder = folder;
            inValue.splitFile = splitFile;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.MassiveAttachUnattendedModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).MassiveAttachUnattendedMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.SearchAttachmentsForDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentIn request) {
            return base.Channel.SearchAttachmentsForDocument(request);
        }
        
        public int[] SearchAttachmentsForDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string searchText, int location, string searchFields) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.searchText = searchText;
            inValue.location = location;
            inValue.searchFields = searchFields;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.SearchAttachmentsForDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).SearchAttachmentsForDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.SaveAttachmentFileInFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderIn request) {
            return base.Channel.SaveAttachmentFileInFolder(request);
        }
        
        public string SaveAttachmentFileInFolder(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID, string sharedFolder) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.attachmentID = attachmentID;
            inValue.sharedFolder = sharedFolder;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.SaveAttachmentFileInFolderOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).SaveAttachmentFileInFolder(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetAttachmentBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentIn request) {
            return base.Channel.GetAttachmentBinaryContent(request);
        }
        
        public bool GetAttachmentBinaryContent(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID, ref byte[] binaryContent, ref string fileName, ref bool veryLargeFile) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.attachmentID = attachmentID;
            inValue.binaryContent = binaryContent;
            inValue.fileName = fileName;
            inValue.veryLargeFile = veryLargeFile;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentBinaryContentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetAttachmentBinaryContent(inValue);
            HeaderInfo = retVal.HeaderInfo;
            binaryContent = retVal.binaryContent;
            fileName = retVal.fileName;
            veryLargeFile = retVal.veryLargeFile;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetAttachmentIDByFileName(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameIn request) {
            return base.Channel.GetAttachmentIDByFileName(request);
        }
        
        public int GetAttachmentIDByFileName(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string fileName) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.fileName = fileName;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetAttachmentIDByFileNameOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetAttachmentIDByFileName(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachFolderInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentIn request) {
            return base.Channel.AttachFolderInDocument(request);
        }
        
        public bool AttachFolderInDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string folder, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.folder = folder;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderInDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachFolderInDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachFromTable(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableIn request) {
            return base.Channel.AttachFromTable(request);
        }
        
        public bool AttachFromTable(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFromTableOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachFromTable(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.ArchiveBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentIn request) {
            return base.Channel.ArchiveBinaryContent(request);
        }
        
        public bool ArchiveBinaryContent(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, ref int archivedDocID, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.binaryContent = binaryContent;
            inValue.sourceFileName = sourceFileName;
            inValue.description = description;
            inValue.archivedDocID = archivedDocID;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveBinaryContentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).ArchiveBinaryContent(inValue);
            HeaderInfo = retVal.HeaderInfo;
            archivedDocID = retVal.archivedDocID;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachBinaryContent(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentIn request) {
            return base.Channel.AttachBinaryContent(request);
        }
        
        public bool AttachBinaryContent(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, int documentHandle, ref int attachmentId, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.binaryContent = binaryContent;
            inValue.sourceFileName = sourceFileName;
            inValue.description = description;
            inValue.documentHandle = documentHandle;
            inValue.attachmentId = attachmentId;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachBinaryContent(inValue);
            HeaderInfo = retVal.HeaderInfo;
            attachmentId = retVal.attachmentId;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachBinaryContentInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentIn request) {
            return base.Channel.AttachBinaryContentInDocument(request);
        }
        
        public bool AttachBinaryContentInDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, byte[] binaryContent, string sourceFileName, string description, string documentNamespace, string documentKey, ref int attachmentId, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.binaryContent = binaryContent;
            inValue.sourceFileName = sourceFileName;
            inValue.description = description;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.attachmentId = attachmentId;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachBinaryContentInDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachBinaryContentInDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            attachmentId = retVal.attachmentId;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.DeleteAttachment(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentIn request) {
            return base.Channel.DeleteAttachment(request);
        }
        
        public bool DeleteAttachment(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int attachmentID) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.attachmentID = attachmentID;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAttachmentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).DeleteAttachment(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.DeleteDocumentAttachments(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsIn request) {
            return base.Channel.DeleteDocumentAttachments(request);
        }
        
        public bool DeleteDocumentAttachments(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteDocumentAttachmentsOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).DeleteDocumentAttachments(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.DeleteAllERPDocumentInfo(Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoIn request) {
            return base.Channel.DeleteAllERPDocumentInfo(request);
        }
        
        public bool DeleteAllERPDocumentInfo(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.DeleteAllERPDocumentInfoOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).DeleteAllERPDocumentInfo(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetNewBarcodeValue(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueIn request) {
            return base.Channel.GetNewBarcodeValue(request);
        }
        
        public string GetNewBarcodeValue(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetNewBarcodeValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetNewBarcodeValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetDefaultBarcodeType(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeIn request) {
            return base.Channel.GetDefaultBarcodeType(request);
        }
        
        public bool GetDefaultBarcodeType(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, ref string type, ref string prefix) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.type = type;
            inValue.prefix = prefix;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetDefaultBarcodeTypeOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetDefaultBarcodeType(inValue);
            HeaderInfo = retVal.HeaderInfo;
            type = retVal.type;
            prefix = retVal.prefix;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachPaperyBarcode(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeIn request) {
            return base.Channel.AttachPaperyBarcode(request);
        }
        
        public bool AttachPaperyBarcode(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int documentHandle, string barcode) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            inValue.barcode = barcode;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyBarcodeOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachPaperyBarcode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachPaperyInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentIn request) {
            return base.Channel.AttachPaperyInDocument(request);
        }
        
        public bool AttachPaperyInDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string barcode, string description, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.barcode = barcode;
            inValue.description = description;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachPaperyInDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachPaperyInDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.RunDocumentWithEAPanel(Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelIn request) {
            return base.Channel.RunDocumentWithEAPanel(request);
        }
        
        public int RunDocumentWithEAPanel(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.RunDocumentWithEAPanelOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).RunDocumentWithEAPanel(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.GetEasyAttachmentTempPath(Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathIn request) {
            return base.Channel.GetEasyAttachmentTempPath(request);
        }
        
        public string GetEasyAttachmentTempPath(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.GetEasyAttachmentTempPathOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).GetEasyAttachmentTempPath(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.OpenMassiveAttach(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachIn request) {
            return base.Channel.OpenMassiveAttach(request);
        }
        
        public bool OpenMassiveAttach(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenMassiveAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).OpenMassiveAttach(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.OpenQuickAttach(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachIn request) {
            return base.Channel.OpenQuickAttach(request);
        }
        
        public bool OpenQuickAttach(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenQuickAttachOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).OpenQuickAttach(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.OpenAttachmentWebSearch(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchIn request) {
            return base.Channel.OpenAttachmentWebSearch(request);
        }
        
        public void OpenAttachmentWebSearch(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenAttachmentWebSearchOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).OpenAttachmentWebSearch(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.OpenBBTraylet(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletIn request) {
            return base.Channel.OpenBBTraylet(request);
        }
        
        public bool OpenBBTraylet(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBTrayletOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).OpenBBTraylet(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.OpenBBSettings(Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsIn request) {
            return base.Channel.OpenBBSettings(request);
        }
        
        public bool OpenBBSettings(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.OpenBBSettingsOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).OpenBBSettings(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachFile(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileIn request) {
            return base.Channel.AttachFile(request);
        }
        
        public bool AttachFile(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string fileName, string description, int documentHandle, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.fileName = fileName;
            inValue.description = description;
            inValue.documentHandle = documentHandle;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachFile(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachArchivedDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentIn request) {
            return base.Channel.AttachArchivedDocument(request);
        }
        
        public bool AttachArchivedDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, int archivedDocId, int documentHandle, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.archivedDocId = archivedDocId;
            inValue.documentHandle = documentHandle;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachArchivedDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachArchivedDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderIn request) {
            return base.Channel.AttachFolder(request);
        }
        
        public bool AttachFolder(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, int documentHandle, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.folder = folder;
            inValue.documentHandle = documentHandle;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFolderOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachFolder(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.ArchiveFile(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileIn request) {
            return base.Channel.ArchiveFile(request);
        }
        
        public bool ArchiveFile(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string fileName, string description, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.fileName = fileName;
            inValue.description = description;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFileOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).ArchiveFile(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.ArchiveFolder(Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderIn request) {
            return base.Channel.ArchiveFolder(request);
        }
        
        public bool ArchiveFolder(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string folder, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.folder = folder;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.ArchiveFolderOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).ArchiveFolder(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentOut Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS.AttachFileInDocument(Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentIn request) {
            return base.Channel.AttachFileInDocument(request);
        }
        
        public bool AttachFileInDocument(ref Microarea.TaskBuilderNet.Core.TbDMSInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string documentKey, string fileName, string description, ref string result) {
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.documentKey = documentKey;
            inValue.fileName = fileName;
            inValue.description = description;
            inValue.result = result;
            Microarea.TaskBuilderNet.Core.TbDMSInterface.AttachFileInDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbDMSInterface.TbDMS)(this)).AttachFileInDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            result = retVal.result;
            return retVal.@return;
        }
    }
}
