//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.TaskBuilderNet.Core.TbGesInterface
{


	[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBHeaderInfo", Namespace="urn:Microarea.Web.Services")]
    [System.SerializableAttribute()]
    public partial class TBHeaderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthToken {
            get {
                return this.AuthTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthTokenField, value) != true)) {
                    this.AuthTokenField = value;
                    this.RaisePropertyChanged("AuthToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
    [System.SerializableAttribute()]
    public partial class TBSoapFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Microarea.Web.Services", ConfigurationName="TbGesInterface.TbGes")]
    public interface TbGes {
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_ResizeColumnAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_ResizeColumnAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeColumnActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeColumnActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut WebProxyObj_ResizeColumnAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_ResizeColumnAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeColumnActionResponse")]
        System.IAsyncResult BeginWebProxyObj_ResizeColumnAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut EndWebProxyObj_ResizeColumnAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_BETreeToggleExpandNodeAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_BETreeToggleExpandNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_BETreeToggleExpandNodeActionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_BETreeToggleExpandNodeActionTBSoapFa" +
            "ultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut WebProxyObj_BETreeToggleExpandNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_BETreeToggleExpandNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_BETreeToggleExpandNodeActionResponse" +
            "")]
        System.IAsyncResult BeginWebProxyObj_BETreeToggleExpandNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut EndWebProxyObj_BETreeToggleExpandNodeAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoHotLinkAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoHotLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHotLinkActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHotLinkActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut WebProxyObj_DoHotLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoHotLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHotLinkActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoHotLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut EndWebProxyObj_DoHotLinkAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoSpinAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoSpinAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoSpinActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoSpinActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut WebProxyObj_DoSpinAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoSpinAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoSpinActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoSpinAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut EndWebProxyObj_DoSpinAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_ActivateTabPageAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_ActivateTabPageAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ActivateTabPageActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_ActivateTabPageActionTBSoapFaultFaul" +
            "t", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut WebProxyObj_ActivateTabPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_ActivateTabPageAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ActivateTabPageActionResponse")]
        System.IAsyncResult BeginWebProxyObj_ActivateTabPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut EndWebProxyObj_ActivateTabPageAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SelectNodeAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SelectNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectNodeActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectNodeActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut WebProxyObj_SelectNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SelectNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectNodeActionResponse")]
        System.IAsyncResult BeginWebProxyObj_SelectNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut EndWebProxyObj_SelectNodeAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_ToggleNodeAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_ToggleNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ToggleNodeActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_ToggleNodeActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut WebProxyObj_ToggleNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_ToggleNodeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ToggleNodeActionResponse")]
        System.IAsyncResult BeginWebProxyObj_ToggleNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut EndWebProxyObj_ToggleNodeAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SelectRadarAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SelectRadarAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRadarActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRadarActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut WebProxyObj_SelectRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SelectRadarAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRadarActionResponse")]
        System.IAsyncResult BeginWebProxyObj_SelectRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut EndWebProxyObj_SelectRadarAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_MoveRowRadarAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_MoveRowRadarAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveRowRadarActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveRowRadarActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut WebProxyObj_MoveRowRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_MoveRowRadarAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveRowRadarActionResponse")]
        System.IAsyncResult BeginWebProxyObj_MoveRowRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut EndWebProxyObj_MoveRowRadarAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_ClickContextMenuAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_ClickContextMenuAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ClickContextMenuActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_ClickContextMenuActionTBSoapFaultFau" +
            "lt", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut WebProxyObj_ClickContextMenuAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_ClickContextMenuAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ClickContextMenuActionResponse")]
        System.IAsyncResult BeginWebProxyObj_ClickContextMenuAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut EndWebProxyObj_ClickContextMenuAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoMoveBodyPageAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoMoveBodyPageAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoMoveBodyPageActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoMoveBodyPageActionTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut WebProxyObj_DoMoveBodyPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoMoveBodyPageAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoMoveBodyPageActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoMoveBodyPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut EndWebProxyObj_DoMoveBodyPageAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoLinkAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoLinkActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoLinkActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut WebProxyObj_DoLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoLinkActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut EndWebProxyObj_DoLinkAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoHyperLinkAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoHyperLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHyperLinkActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHyperLinkActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut WebProxyObj_DoHyperLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoHyperLinkAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoHyperLinkActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoHyperLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut EndWebProxyObj_DoHyperLinkAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SelectRowAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SelectRowAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRowActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRowActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut WebProxyObj_SelectRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SelectRowAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectRowActionResponse")]
        System.IAsyncResult BeginWebProxyObj_SelectRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut EndWebProxyObj_SelectRowAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetThreadContextMessages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetThreadContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadContextMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadContextMessagesTBSoapFaultF" +
            "ault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut WebProxyObj_GetThreadContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetThreadContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadContextMessagesResponse")]
        System.IAsyncResult BeginWebProxyObj_GetThreadContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut EndWebProxyObj_GetThreadContextMessages(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoKeyAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoKeyAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut WebProxyObj_DoKeyAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoKeyAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoKeyAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut EndWebProxyObj_DoKeyAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_RunDocumentAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_RunDocumentAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunDocumentActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunDocumentActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut WebProxyObj_RunDocumentAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_RunDocumentAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunDocumentActionResponse")]
        System.IAsyncResult BeginWebProxyObj_RunDocumentAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut EndWebProxyObj_RunDocumentAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_RunReportAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_RunReportAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunReportActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunReportActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut WebProxyObj_RunReportAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_RunReportAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunReportActionResponse")]
        System.IAsyncResult BeginWebProxyObj_RunReportAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut EndWebProxyObj_RunReportAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_RunFunctionAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_RunFunctionAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunFunctionActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunFunctionActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut WebProxyObj_RunFunctionAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_RunFunctionAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_RunFunctionActionResponse")]
        System.IAsyncResult BeginWebProxyObj_RunFunctionAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut EndWebProxyObj_RunFunctionAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SelectIndexAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SelectIndexAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectIndexActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectIndexActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut WebProxyObj_SelectIndexAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SelectIndexAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SelectIndexActionResponse")]
        System.IAsyncResult BeginWebProxyObj_SelectIndexAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut EndWebProxyObj_SelectIndexAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DblClickItemAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DblClickItemAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DblClickItemActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DblClickItemActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut WebProxyObj_DblClickItemAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DblClickItemAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DblClickItemActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DblClickItemAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut EndWebProxyObj_DblClickItemAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_NewRowAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_NewRowAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_NewRowActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_NewRowActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut WebProxyObj_NewRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_NewRowAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_NewRowActionResponse")]
        System.IAsyncResult BeginWebProxyObj_NewRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut EndWebProxyObj_NewRowAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoCommandAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoCommandAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCommandActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCommandActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut WebProxyObj_DoCommandAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoCommandAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCommandActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoCommandAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut EndWebProxyObj_DoCommandAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoUploadFileAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoUploadFileAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoUploadFileActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoUploadFileActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut WebProxyObj_DoUploadFileAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoUploadFileAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoUploadFileActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoUploadFileAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut EndWebProxyObj_DoUploadFileAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_MoveToAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_MoveToAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveToActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveToActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut WebProxyObj_MoveToAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_MoveToAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_MoveToActionResponse")]
        System.IAsyncResult BeginWebProxyObj_MoveToAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut EndWebProxyObj_MoveToAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoCloseAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoCloseAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCloseActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCloseActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut WebProxyObj_DoCloseAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoCloseAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoCloseActionResponse")]
        System.IAsyncResult BeginWebProxyObj_DoCloseAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut EndWebProxyObj_DoCloseAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_ResizeAction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_ResizeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeActionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeActionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut WebProxyObj_ResizeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_ResizeAction", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_ResizeActionResponse")]
        System.IAsyncResult BeginWebProxyObj_ResizeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut EndWebProxyObj_ResizeAction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CreateWebProxy is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CreateWebProxy", ReplyAction="urn:Microarea.Web.Services/TbGes/CreateWebProxyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CreateWebProxyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut CreateWebProxy(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CreateWebProxy", ReplyAction="urn:Microarea.Web.Services/TbGes/CreateWebProxyResponse")]
        System.IAsyncResult BeginCreateWebProxy(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut EndCreateWebProxy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CreateWebProxyForThread is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CreateWebProxyForThread", ReplyAction="urn:Microarea.Web.Services/TbGes/CreateWebProxyForThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CreateWebProxyForThreadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut CreateWebProxyForThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CreateWebProxyForThread", ReplyAction="urn:Microarea.Web.Services/TbGes/CreateWebProxyForThreadResponse")]
        System.IAsyncResult BeginCreateWebProxyForThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut EndCreateWebProxyForThread(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetThreadWindowsBinaryDescription is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetThreadWindowsBinaryDescription", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadWindowsBinaryDescriptionRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadWindowsBinaryDescriptionTBS" +
            "oapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut WebProxyObj_GetThreadWindowsBinaryDescription(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetThreadWindowsBinaryDescription", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetThreadWindowsBinaryDescriptionRes" +
            "ponse")]
        System.IAsyncResult BeginWebProxyObj_GetThreadWindowsBinaryDescription(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut EndWebProxyObj_GetThreadWindowsBinaryDescription(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SetUserInteractionMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SetUserInteractionMode", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetUserInteractionModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetUserInteractionModeTBSoapFaultFau" +
            "lt", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut WebProxyObj_SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SetUserInteractionMode", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetUserInteractionModeResponse")]
        System.IAsyncResult BeginWebProxyObj_SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut EndWebProxyObj_SetUserInteractionMode(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetCommandLinkUrl is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetCommandLinkUrl", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetCommandLinkUrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetCommandLinkUrlTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut WebProxyObj_GetCommandLinkUrl(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetCommandLinkUrl", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetCommandLinkUrlResponse")]
        System.IAsyncResult BeginWebProxyObj_GetCommandLinkUrl(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut EndWebProxyObj_GetCommandLinkUrl(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_OpenDropdownBtn is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_OpenDropdownBtn", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_OpenDropdownBtnResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_OpenDropdownBtnTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut WebProxyObj_OpenDropdownBtn(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_OpenDropdownBtn", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_OpenDropdownBtnResponse")]
        System.IAsyncResult BeginWebProxyObj_OpenDropdownBtn(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut EndWebProxyObj_OpenDropdownBtn(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoContextMenu is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoContextMenuResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoContextMenuTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut WebProxyObj_DoContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoContextMenuResponse")]
        System.IAsyncResult BeginWebProxyObj_DoContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut EndWebProxyObj_DoContextMenu(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetTreeViewAdvContextMenu is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetTreeViewAdvContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetTreeViewAdvContextMenuResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetTreeViewAdvContextMenuTBSoapFault" +
            "Fault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut WebProxyObj_GetTreeViewAdvContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetTreeViewAdvContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetTreeViewAdvContextMenuResponse")]
        System.IAsyncResult BeginWebProxyObj_GetTreeViewAdvContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut EndWebProxyObj_GetTreeViewAdvContextMenu(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetContextMenu is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetContextMenuResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetContextMenuTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut WebProxyObj_GetContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetContextMenu", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetContextMenuResponse")]
        System.IAsyncResult BeginWebProxyObj_GetContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut EndWebProxyObj_GetContextMenu(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_DoKey is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_DoKey", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut WebProxyObj_DoKey(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_DoKey", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_DoKeyResponse")]
        System.IAsyncResult BeginWebProxyObj_DoKey(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut EndWebProxyObj_DoKey(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_GetComboItems is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_GetComboItems", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetComboItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetComboItemsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut WebProxyObj_GetComboItems(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_GetComboItems", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_GetComboItemsResponse")]
        System.IAsyncResult BeginWebProxyObj_GetComboItems(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut EndWebProxyObj_GetComboItems(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation WebProxyObj_SetDate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#WebProxyObj_SetDate", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetDateTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut WebProxyObj_SetDate(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#WebProxyObj_SetDate", ReplyAction="urn:Microarea.Web.Services/TbGes/WebProxyObj_SetDateResponse")]
        System.IAsyncResult BeginWebProxyObj_SetDate(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut EndWebProxyObj_SetDate(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetApplicationDate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetApplicationDate", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetApplicationDateTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut GetApplicationDate(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetApplicationDate", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationDateResponse")]
        System.IAsyncResult BeginGetApplicationDate(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut EndGetApplicationDate(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetApplicationYear is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetApplicationYear", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationYearResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetApplicationYearTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut GetApplicationYear(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetApplicationYear", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationYearResponse")]
        System.IAsyncResult BeginGetApplicationYear(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut EndGetApplicationYear(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetApplicationMonth is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetApplicationMonth", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationMonthResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetApplicationMonthTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut GetApplicationMonth(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetApplicationMonth", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationMonthResponse")]
        System.IAsyncResult BeginGetApplicationMonth(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut EndGetApplicationMonth(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetApplicationDay is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetApplicationDay", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationDayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetApplicationDayTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut GetApplicationDay(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetApplicationDay", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationDayResponse")]
        System.IAsyncResult BeginGetApplicationDay(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut EndGetApplicationDay(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation EnableSoapFunctionExecutionControl is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#EnableSoapFunctionExecutionControl", ReplyAction="urn:Microarea.Web.Services/TbGes/EnableSoapFunctionExecutionControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/EnableSoapFunctionExecutionControlTBSoapFaultFau" +
            "lt", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut EnableSoapFunctionExecutionControl(Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#EnableSoapFunctionExecutionControl", ReplyAction="urn:Microarea.Web.Services/TbGes/EnableSoapFunctionExecutionControlResponse")]
        System.IAsyncResult BeginEnableSoapFunctionExecutionControl(Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut EndEnableSoapFunctionExecutionControl(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CanChangeLogin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CanChangeLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CanChangeLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CanChangeLoginTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut CanChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CanChangeLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CanChangeLoginResponse")]
        System.IAsyncResult BeginCanChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut EndCanChangeLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ChangeLogin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ChangeLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/ChangeLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/ChangeLoginTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut ChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ChangeLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/ChangeLoginResponse")]
        System.IAsyncResult BeginChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut EndChangeLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation IsTBLocked is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#IsTBLocked", ReplyAction="urn:Microarea.Web.Services/TbGes/IsTBLockedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/IsTBLockedTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut IsTBLocked(Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#IsTBLocked", ReplyAction="urn:Microarea.Web.Services/TbGes/IsTBLockedResponse")]
        System.IAsyncResult BeginIsTBLocked(Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut EndIsTBLocked(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation LockTB is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#LockTB", ReplyAction="urn:Microarea.Web.Services/TbGes/LockTBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/LockTBTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut LockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#LockTB", ReplyAction="urn:Microarea.Web.Services/TbGes/LockTBResponse")]
        System.IAsyncResult BeginLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut EndLockTB(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation UnLockTB is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#UnLockTB", ReplyAction="urn:Microarea.Web.Services/TbGes/UnLockTBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/UnLockTBTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut UnLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#UnLockTB", ReplyAction="urn:Microarea.Web.Services/TbGes/UnLockTBResponse")]
        System.IAsyncResult BeginUnLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut EndUnLockTB(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ClearCache is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ClearCache", ReplyAction="urn:Microarea.Web.Services/TbGes/ClearCacheResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/ClearCacheTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut ClearCache(Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ClearCache", ReplyAction="urn:Microarea.Web.Services/TbGes/ClearCacheResponse")]
        System.IAsyncResult BeginClearCache(Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut EndClearCache(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DisconnectCompany is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DisconnectCompany", ReplyAction="urn:Microarea.Web.Services/TbGes/DisconnectCompanyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DisconnectCompanyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut DisconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DisconnectCompany", ReplyAction="urn:Microarea.Web.Services/TbGes/DisconnectCompanyResponse")]
        System.IAsyncResult BeginDisconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut EndDisconnectCompany(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ReconnectCompany is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ReconnectCompany", ReplyAction="urn:Microarea.Web.Services/TbGes/ReconnectCompanyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/ReconnectCompanyTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut ReconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ReconnectCompany", ReplyAction="urn:Microarea.Web.Services/TbGes/ReconnectCompanyResponse")]
        System.IAsyncResult BeginReconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut EndReconnectCompany(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CanCloseLogin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CanCloseLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CanCloseLoginTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut CanCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CanCloseLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseLoginResponse")]
        System.IAsyncResult BeginCanCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut EndCanCloseLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CloseLogin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CloseLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CloseLoginTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut CloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CloseLogin", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseLoginResponse")]
        System.IAsyncResult BeginCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut EndCloseLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation IsLoginValid is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#IsLoginValid", ReplyAction="urn:Microarea.Web.Services/TbGes/IsLoginValidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/IsLoginValidTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut IsLoginValid(Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#IsLoginValid", ReplyAction="urn:Microarea.Web.Services/TbGes/IsLoginValidResponse")]
        System.IAsyncResult BeginIsLoginValid(Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut EndIsLoginValid(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CloseTB is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CloseTB", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseTBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CloseTBTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut CloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CloseTB", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseTBResponse")]
        System.IAsyncResult BeginCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut EndCloseTB(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DestroyTB is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DestroyTB", ReplyAction="urn:Microarea.Web.Services/TbGes/DestroyTBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DestroyTBTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut DestroyTB(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DestroyTB", ReplyAction="urn:Microarea.Web.Services/TbGes/DestroyTBResponse")]
        System.IAsyncResult BeginDestroyTB(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut EndDestroyTB(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation AdminDocumentReports is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AdminDocumentReports", ReplyAction="urn:Microarea.Web.Services/TbGes/AdminDocumentReportsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/AdminDocumentReportsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut AdminDocumentReports(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#AdminDocumentReports", ReplyAction="urn:Microarea.Web.Services/TbGes/AdminDocumentReportsResponse")]
        System.IAsyncResult BeginAdminDocumentReports(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut EndAdminDocumentReports(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation AdminDocumentProfiles is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#AdminDocumentProfiles", ReplyAction="urn:Microarea.Web.Services/TbGes/AdminDocumentProfilesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/AdminDocumentProfilesTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut AdminDocumentProfiles(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#AdminDocumentProfiles", ReplyAction="urn:Microarea.Web.Services/TbGes/AdminDocumentProfilesResponse")]
        System.IAsyncResult BeginAdminDocumentProfiles(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut EndAdminDocumentProfiles(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetHotlinkQuery is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetHotlinkQuery", ReplyAction="urn:Microarea.Web.Services/TbGes/GetHotlinkQueryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetHotlinkQueryTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut GetHotlinkQuery(Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetHotlinkQuery", ReplyAction="urn:Microarea.Web.Services/TbGes/GetHotlinkQueryResponse")]
        System.IAsyncResult BeginGetHotlinkQuery(Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut EndGetHotlinkQuery(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetDocumentParameters is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetDocumentParameters", ReplyAction="urn:Microarea.Web.Services/TbGes/GetDocumentParametersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetDocumentParametersTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut GetDocumentParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetDocumentParameters", ReplyAction="urn:Microarea.Web.Services/TbGes/GetDocumentParametersResponse")]
        System.IAsyncResult BeginGetDocumentParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut EndGetDocumentParameters(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetReportParameters is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetReportParameters", ReplyAction="urn:Microarea.Web.Services/TbGes/GetReportParametersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetReportParametersTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut GetReportParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetReportParameters", ReplyAction="urn:Microarea.Web.Services/TbGes/GetReportParametersResponse")]
        System.IAsyncResult BeginGetReportParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut EndGetReportParameters(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunBatchInUnattendedMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunBatchInUnattendedMode", ReplyAction="urn:Microarea.Web.Services/TbGes/RunBatchInUnattendedModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunBatchInUnattendedModeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut RunBatchInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunBatchInUnattendedMode", ReplyAction="urn:Microarea.Web.Services/TbGes/RunBatchInUnattendedModeResponse")]
        System.IAsyncResult BeginRunBatchInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut EndRunBatchInUnattendedMode(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunReportInUnattendedMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunReportInUnattendedMode", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportInUnattendedModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunReportInUnattendedModeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut RunReportInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunReportInUnattendedMode", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportInUnattendedModeResponse")]
        System.IAsyncResult BeginRunReportInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut EndRunReportInUnattendedMode(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunFunction is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunFunction", ReplyAction="urn:Microarea.Web.Services/TbGes/RunFunctionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunFunctionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut RunFunction(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunFunction", ReplyAction="urn:Microarea.Web.Services/TbGes/RunFunctionResponse")]
        System.IAsyncResult BeginRunFunction(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut EndRunFunction(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunFunctionInNewThread is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunFunctionInNewThread", ReplyAction="urn:Microarea.Web.Services/TbGes/RunFunctionInNewThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunFunctionInNewThreadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut RunFunctionInNewThread(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunFunctionInNewThread", ReplyAction="urn:Microarea.Web.Services/TbGes/RunFunctionInNewThreadResponse")]
        System.IAsyncResult BeginRunFunctionInNewThread(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut EndRunFunctionInNewThread(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunEditor is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunEditor", ReplyAction="urn:Microarea.Web.Services/TbGes/RunEditorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunEditorTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut RunEditor(Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunEditor", ReplyAction="urn:Microarea.Web.Services/TbGes/RunEditorResponse")]
        System.IAsyncResult BeginRunEditor(Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut EndRunEditor(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CloseDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CloseDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CloseDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut CloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CloseDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseDocumentResponse")]
        System.IAsyncResult BeginCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut EndCloseDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunIconizedDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunIconizedDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/RunIconizedDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunIconizedDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut RunIconizedDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunIconizedDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/RunIconizedDocumentResponse")]
        System.IAsyncResult BeginRunIconizedDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut EndRunIconizedDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CanCloseDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CanCloseDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CanCloseDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut CanCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CanCloseDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseDocumentResponse")]
        System.IAsyncResult BeginCanCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut EndCanCloseDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ExistDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#ExistDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/ExistDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/ExistDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut ExistDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#ExistDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/ExistDocumentResponse")]
        System.IAsyncResult BeginExistDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut EndExistDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DestroyDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DestroyDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/DestroyDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DestroyDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut DestroyDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DestroyDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/DestroyDocumentResponse")]
        System.IAsyncResult BeginDestroyDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut EndDestroyDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CloseAllDocuments is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CloseAllDocuments", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseAllDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CloseAllDocumentsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut CloseAllDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CloseAllDocuments", ReplyAction="urn:Microarea.Web.Services/TbGes/CloseAllDocumentsResponse")]
        System.IAsyncResult BeginCloseAllDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut EndCloseAllDocuments(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetOpenDocuments is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetOpenDocuments", ReplyAction="urn:Microarea.Web.Services/TbGes/GetOpenDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetOpenDocumentsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut GetOpenDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetOpenDocuments", ReplyAction="urn:Microarea.Web.Services/TbGes/GetOpenDocumentsResponse")]
        System.IAsyncResult BeginGetOpenDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut EndGetOpenDocuments(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetApplicationContextMessages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetApplicationContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationContextMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetApplicationContextMessagesTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut GetApplicationContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetApplicationContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/GetApplicationContextMessagesResponse")]
        System.IAsyncResult BeginGetApplicationContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut EndGetApplicationContextMessages(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetLoginContextMessages is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetLoginContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginContextMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetLoginContextMessagesTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut GetLoginContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetLoginContextMessages", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginContextMessagesResponse")]
        System.IAsyncResult BeginGetLoginContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut EndGetLoginContextMessages(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CanCloseTB is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CanCloseTB", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseTBResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CanCloseTBTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut CanCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CanCloseTB", ReplyAction="urn:Microarea.Web.Services/TbGes/CanCloseTBResponse")]
        System.IAsyncResult BeginCanCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut EndCanCloseTB(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation KillThread is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#KillThread", ReplyAction="urn:Microarea.Web.Services/TbGes/KillThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/KillThreadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut KillThread(Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#KillThread", ReplyAction="urn:Microarea.Web.Services/TbGes/KillThreadResponse")]
        System.IAsyncResult BeginKillThread(Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut EndKillThread(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation StopThread is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#StopThread", ReplyAction="urn:Microarea.Web.Services/TbGes/StopThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/StopThreadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut StopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#StopThread", ReplyAction="urn:Microarea.Web.Services/TbGes/StopThreadResponse")]
        System.IAsyncResult BeginStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut EndStopThread(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CanStopThread is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CanStopThread", ReplyAction="urn:Microarea.Web.Services/TbGes/CanStopThreadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CanStopThreadTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut CanStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CanStopThread", ReplyAction="urn:Microarea.Web.Services/TbGes/CanStopThreadResponse")]
        System.IAsyncResult BeginCanStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut EndCanStopThread(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetActiveThreads is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetActiveThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetActiveThreadsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetActiveThreadsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut GetActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetActiveThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetActiveThreadsResponse")]
        System.IAsyncResult BeginGetActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut EndGetActiveThreads(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetLoginActiveThreads is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetLoginActiveThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginActiveThreadsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetLoginActiveThreadsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut GetLoginActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetLoginActiveThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginActiveThreadsResponse")]
        System.IAsyncResult BeginGetLoginActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut EndGetLoginActiveThreads(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetDocumentThreads is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetDocumentThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetDocumentThreadsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetDocumentThreadsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut GetDocumentThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetDocumentThreads", ReplyAction="urn:Microarea.Web.Services/TbGes/GetDocumentThreadsResponse")]
        System.IAsyncResult BeginGetDocumentThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut EndGetDocumentThreads(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetMenuHandle is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SetMenuHandle", ReplyAction="urn:Microarea.Web.Services/TbGes/SetMenuHandleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/SetMenuHandleTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut SetMenuHandle(Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#SetMenuHandle", ReplyAction="urn:Microarea.Web.Services/TbGes/SetMenuHandleResponse")]
        System.IAsyncResult BeginSetMenuHandle(Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut EndSetMenuHandle(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetDocumentInForeground is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SetDocumentInForeground", ReplyAction="urn:Microarea.Web.Services/TbGes/SetDocumentInForegroundResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/SetDocumentInForegroundTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut SetDocumentInForeground(Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#SetDocumentInForeground", ReplyAction="urn:Microarea.Web.Services/TbGes/SetDocumentInForegroundResponse")]
        System.IAsyncResult BeginSetDocumentInForeground(Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut EndSetDocumentInForeground(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetCurrentUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetCurrentUser", ReplyAction="urn:Microarea.Web.Services/TbGes/GetCurrentUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetCurrentUserTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut GetCurrentUser(Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetCurrentUser", ReplyAction="urn:Microarea.Web.Services/TbGes/GetCurrentUserResponse")]
        System.IAsyncResult BeginGetCurrentUser(Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut EndGetCurrentUser(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunDocument is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/RunDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunDocumentTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut RunDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunDocument", ReplyAction="urn:Microarea.Web.Services/TbGes/RunDocumentResponse")]
        System.IAsyncResult BeginRunDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut EndRunDocument(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunReport", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunReportTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut RunReport(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunReport", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportResponse")]
        System.IAsyncResult BeginRunReport(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut EndRunReport(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation RunReportFromWoormInfo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#RunReportFromWoormInfo", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportFromWoormInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/RunReportFromWoormInfoTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut RunReportFromWoormInfo(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#RunReportFromWoormInfo", ReplyAction="urn:Microarea.Web.Services/TbGes/RunReportFromWoormInfoResponse")]
        System.IAsyncResult BeginRunReportFromWoormInfo(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut EndRunReportFromWoormInfo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_PressToolbarButton is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_PressToolbarButton", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_PressToolbarButtonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_PressToolbarButtonTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut CAbstractFormDoc_PressToolbarButton(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_PressToolbarButton", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_PressToolbarButtonResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_PressToolbarButton(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut EndCAbstractFormDoc_PressToolbarButton(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_GetMaster is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_GetMaster", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetMasterTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut CAbstractFormDoc_GetMaster(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_GetMaster", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetMasterResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_GetMaster(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut EndCAbstractFormDoc_GetMaster(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_GetHotLinkValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_GetHotLinkValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetHotLinkValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetHotLinkValueTBSoapFaultFault" +
            "", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut CAbstractFormDoc_GetHotLinkValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_GetHotLinkValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetHotLinkValueResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_GetHotLinkValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut EndCAbstractFormDoc_GetHotLinkValue(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_GetFieldData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_GetFieldData", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldDataTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut CAbstractFormDoc_GetFieldData(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_GetFieldData", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldDataResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_GetFieldData(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut EndCAbstractFormDoc_GetFieldData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_GetFieldValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_GetFieldValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldValueTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut CAbstractFormDoc_GetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_GetFieldValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetFieldValueResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_GetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut EndCAbstractFormDoc_GetFieldValue(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_SetFieldValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_SetFieldValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_SetFieldValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_SetFieldValueTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut CAbstractFormDoc_SetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_SetFieldValue", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_SetFieldValueResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_SetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut EndCAbstractFormDoc_SetFieldValue(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_GetConnection is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_GetConnection", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetConnectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetConnectionTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut CAbstractFormDoc_GetConnection(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_GetConnection", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_GetConnectionResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_GetConnection(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut EndCAbstractFormDoc_GetConnection(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation HotKeyLink_SetParamValue is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#HotKeyLink_SetParamValue", ReplyAction="urn:Microarea.Web.Services/TbGes/HotKeyLink_SetParamValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/HotKeyLink_SetParamValueTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut HotKeyLink_SetParamValue(Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#HotKeyLink_SetParamValue", ReplyAction="urn:Microarea.Web.Services/TbGes/HotKeyLink_SetParamValueResponse")]
        System.IAsyncResult BeginHotKeyLink_SetParamValue(Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut EndHotKeyLink_SetParamValue(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetLogins is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetLogins", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetLoginsTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut GetLogins(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetLogins", ReplyAction="urn:Microarea.Web.Services/TbGes/GetLoginsResponse")]
        System.IAsyncResult BeginGetLogins(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut EndGetLogins(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetUserInteractionMode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#SetUserInteractionMode", ReplyAction="urn:Microarea.Web.Services/TbGes/SetUserInteractionModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/SetUserInteractionModeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#SetUserInteractionMode", ReplyAction="urn:Microarea.Web.Services/TbGes/SetUserInteractionModeResponse")]
        System.IAsyncResult BeginSetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut EndSetUserInteractionMode(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation UseRemoteInterface is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#UseRemoteInterface", ReplyAction="urn:Microarea.Web.Services/TbGes/UseRemoteInterfaceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/UseRemoteInterfaceTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut UseRemoteInterface(Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#UseRemoteInterface", ReplyAction="urn:Microarea.Web.Services/TbGes/UseRemoteInterfaceResponse")]
        System.IAsyncResult BeginUseRemoteInterface(Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut EndUseRemoteInterface(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation Login is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#Login", ReplyAction="urn:Microarea.Web.Services/TbGes/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/LoginTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut Login(Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#Login", ReplyAction="urn:Microarea.Web.Services/TbGes/LoginResponse")]
        System.IAsyncResult BeginLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut EndLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetProcessID is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#GetProcessID", ReplyAction="urn:Microarea.Web.Services/TbGes/GetProcessIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/GetProcessIDTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut GetProcessID(Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#GetProcessID", ReplyAction="urn:Microarea.Web.Services/TbGes/GetProcessIDResponse")]
        System.IAsyncResult BeginGetProcessID(Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut EndGetProcessID(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTObject_GetRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTObject_GetRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTObject_GetRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTObject_GetRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut DBTObject_GetRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTObject_GetRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTObject_GetRecordResponse")]
        System.IAsyncResult BeginDBTObject_GetRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut EndDBTObject_GetRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTObject_GetTable is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTObject_GetTable", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTObject_GetTableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTObject_GetTableTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut DBTObject_GetTable(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTObject_GetTable", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTObject_GetTableResponse")]
        System.IAsyncResult BeginDBTObject_GetTable(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut EndDBTObject_GetTable(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_AddRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_AddRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_AddRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_AddRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut DBTSlaveBuffered_AddRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_AddRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_AddRecordResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_AddRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut EndDBTSlaveBuffered_AddRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_GetRow is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_GetRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetRowTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut DBTSlaveBuffered_GetRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_GetRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetRowResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_GetRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut EndDBTSlaveBuffered_GetRow(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_GetCurrentRow is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_GetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut DBTSlaveBuffered_GetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_GetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_GetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut EndDBTSlaveBuffered_GetCurrentRow(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_SetCurrentRow is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_SetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_SetCurrentRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_SetCurrentRowTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut DBTSlaveBuffered_SetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_SetCurrentRow", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_SetCurrentRowResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_SetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut EndDBTSlaveBuffered_SetCurrentRow(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_GetCurrentRowIndex is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_GetCurrentRowIndex", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowIndexResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowIndexTBSoapFaultFa" +
            "ult", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut DBTSlaveBuffered_GetCurrentRowIndex(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_GetCurrentRowIndex", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetCurrentRowIndexResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_GetCurrentRowIndex(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut EndDBTSlaveBuffered_GetCurrentRowIndex(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_GetSize is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_GetSize", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetSizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetSizeTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut DBTSlaveBuffered_GetSize(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_GetSize", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_GetSizeResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_GetSize(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut EndDBTSlaveBuffered_GetSize(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_InsertRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_InsertRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_InsertRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_InsertRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut DBTSlaveBuffered_InsertRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_InsertRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_InsertRecordResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_InsertRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut EndDBTSlaveBuffered_InsertRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_DeleteRecord is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_DeleteRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_DeleteRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_DeleteRecordTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut DBTSlaveBuffered_DeleteRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_DeleteRecord", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_DeleteRecordResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_DeleteRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut EndDBTSlaveBuffered_DeleteRecord(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DBTSlaveBuffered_RemoveAll is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#DBTSlaveBuffered_RemoveAll", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_RemoveAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_RemoveAllTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut DBTSlaveBuffered_RemoveAll(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#DBTSlaveBuffered_RemoveAll", ReplyAction="urn:Microarea.Web.Services/TbGes/DBTSlaveBuffered_RemoveAllResponse")]
        System.IAsyncResult BeginDBTSlaveBuffered_RemoveAll(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut EndDBTSlaveBuffered_RemoveAll(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CAbstractFormDoc_ActivateTab is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="#CAbstractFormDoc_ActivateTab", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_ActivateTabResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microarea.TaskBuilderNet.Core.TbGesInterface.TBSoapFault), Action="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_ActivateTabTBSoapFaultFault", Name="TBSoapFault", Namespace="http://schemas.datacontract.org/2004/07/Microarea.TaskBuilderNet.Core.SoapCall")]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut CAbstractFormDoc_ActivateTab(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="#CAbstractFormDoc_ActivateTab", ReplyAction="urn:Microarea.Web.Services/TbGes/CAbstractFormDoc_ActivateTabResponse")]
        System.IAsyncResult BeginCAbstractFormDoc_ActivateTab(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn request, System.AsyncCallback callback, object asyncState);
        
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut EndCAbstractFormDoc_ActivateTab(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ResizeColumnActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeColumnAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeColumnAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeColumnAction", Order=2)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeColumnAction", Order=3)]
        public byte[] Description;
        
        public WebProxyObj_ResizeColumnActionIn() {
        }
        
        public WebProxyObj_ResizeColumnActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Width = Width;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ResizeColumnActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeColumnAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_ResizeColumnActionOut() {
        }
        
        public WebProxyObj_ResizeColumnActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_BETreeToggleExpandNodeActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_BETreeToggleExpandNodeAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_BETreeToggleExpandNodeAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_BETreeToggleExpandNodeAction", Order=2)]
        public byte[] Description;
        
        public WebProxyObj_BETreeToggleExpandNodeActionIn() {
        }
        
        public WebProxyObj_BETreeToggleExpandNodeActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_BETreeToggleExpandNodeActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_BETreeToggleExpandNodeAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_BETreeToggleExpandNodeActionOut() {
        }
        
        public WebProxyObj_BETreeToggleExpandNodeActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoHotLinkActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=4)]
        public bool Lower;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_DoHotLinkActionIn() {
        }
        
        public WebProxyObj_DoHotLinkActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool Lower, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.Lower = Lower;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoHotLinkActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHotLinkAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoHotLinkActionOut() {
        }
        
        public WebProxyObj_DoHotLinkActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoSpinActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=4)]
        public bool clickDown;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_DoSpinActionIn() {
        }
        
        public WebProxyObj_DoSpinActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool clickDown, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.clickDown = clickDown;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoSpinActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoSpinAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoSpinActionOut() {
        }
        
        public WebProxyObj_DoSpinActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ActivateTabPageActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=4)]
        public string TabId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_ActivateTabPageActionIn() {
        }
        
        public WebProxyObj_ActivateTabPageActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string TabId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.TabId = TabId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ActivateTabPageActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ActivateTabPageAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_ActivateTabPageActionOut() {
        }
        
        public WebProxyObj_ActivateTabPageActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectNodeActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=4)]
        public string sItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_SelectNodeActionIn() {
        }
        
        public WebProxyObj_SelectNodeActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.sItem = sItem;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectNodeActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectNodeAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_SelectNodeActionOut() {
        }
        
        public WebProxyObj_SelectNodeActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ToggleNodeActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=4)]
        public string sItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_ToggleNodeActionIn() {
        }
        
        public WebProxyObj_ToggleNodeActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.sItem = sItem;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ToggleNodeActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ToggleNodeAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_ToggleNodeActionOut() {
        }
        
        public WebProxyObj_ToggleNodeActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectRadarActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRadarAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRadarAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRadarAction", Order=2)]
        public int Index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRadarAction", Order=3)]
        public byte[] Description;
        
        public WebProxyObj_SelectRadarActionIn() {
        }
        
        public WebProxyObj_SelectRadarActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Index = Index;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectRadarActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRadarAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_SelectRadarActionOut() {
        }
        
        public WebProxyObj_SelectRadarActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_MoveRowRadarActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveRowRadarAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveRowRadarAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveRowRadarAction", Order=2)]
        public int Index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveRowRadarAction", Order=3)]
        public byte[] Description;
        
        public WebProxyObj_MoveRowRadarActionIn() {
        }
        
        public WebProxyObj_MoveRowRadarActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Index = Index;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_MoveRowRadarActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveRowRadarAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_MoveRowRadarActionOut() {
        }
        
        public WebProxyObj_MoveRowRadarActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ClickContextMenuActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=2)]
        public int ItemID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=3)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=4)]
        public byte[] Description;
        
        public WebProxyObj_ClickContextMenuActionIn() {
        }
        
        public WebProxyObj_ClickContextMenuActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int ItemID, int CommandType, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.ItemID = ItemID;
            this.CommandType = CommandType;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ClickContextMenuActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=0)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ClickContextMenuAction", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_ClickContextMenuActionOut() {
        }
        
        public WebProxyObj_ClickContextMenuActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int CommandType, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.CommandType = CommandType;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoMoveBodyPageActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=1)]
        public bool Next;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=2)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=3)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=4)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_DoMoveBodyPageActionIn() {
        }
        
        public WebProxyObj_DoMoveBodyPageActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool Next, string FromWindow, string Value, string WindowId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.Next = Next;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoMoveBodyPageActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoMoveBodyPageAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoMoveBodyPageActionOut() {
        }
        
        public WebProxyObj_DoMoveBodyPageActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoLinkActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=4)]
        public int nAlias;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=5)]
        public int nRow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=6)]
        public byte[] Description;
        
        public WebProxyObj_DoLinkActionIn() {
        }
        
        public WebProxyObj_DoLinkActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nAlias, int nRow, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.nAlias = nAlias;
            this.nRow = nRow;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoLinkActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoLinkAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoLinkActionOut() {
        }
        
        public WebProxyObj_DoLinkActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoHyperLinkActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHyperLinkAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHyperLinkAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHyperLinkAction", Order=2)]
        public byte[] Description;
        
        public WebProxyObj_DoHyperLinkActionIn() {
        }
        
        public WebProxyObj_DoHyperLinkActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoHyperLinkActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoHyperLinkAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoHyperLinkActionOut() {
        }
        
        public WebProxyObj_DoHyperLinkActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectRowActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRowAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRowAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRowAction", Order=2)]
        public byte[] Description;
        
        public WebProxyObj_SelectRowActionIn() {
        }
        
        public WebProxyObj_SelectRowActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectRowActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectRowAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_SelectRowActionOut() {
        }
        
        public WebProxyObj_SelectRowActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetThreadContextMessagesIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=1)]
        public bool clearMessages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=2)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=3)]
        public int[] types;
        
        public WebProxyObj_GetThreadContextMessagesIn() {
        }
        
        public WebProxyObj_GetThreadContextMessagesIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool clearMessages, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.clearMessages = clearMessages;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetThreadContextMessagesOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=0)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadContextMessages", Order=1)]
        public int[] types;
        
        public WebProxyObj_GetThreadContextMessagesOut() {
        }
        
        public WebProxyObj_GetThreadContextMessagesOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoKeyActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=2)]
        public int keyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=3)]
        public bool bShift;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=4)]
        public bool bCtrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=5)]
        public bool bAlt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=6)]
        public byte[] Description;
        
        public WebProxyObj_DoKeyActionIn() {
        }
        
        public WebProxyObj_DoKeyActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.keyCode = keyCode;
            this.bShift = bShift;
            this.bCtrl = bCtrl;
            this.bAlt = bAlt;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoKeyActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKeyAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoKeyActionOut() {
        }
        
        public WebProxyObj_DoKeyActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunDocumentActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=1)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=2)]
        public int DocHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=3)]
        public byte[] Description;
        
        public WebProxyObj_RunDocumentActionIn() {
        }
        
        public WebProxyObj_RunDocumentActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string documentNamespace, int DocHandle, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.documentNamespace = documentNamespace;
            this.DocHandle = DocHandle;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunDocumentActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=0)]
        public int DocHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunDocumentAction", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_RunDocumentActionOut() {
        }
        
        public WebProxyObj_RunDocumentActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int DocHandle, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.DocHandle = DocHandle;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunReportActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=1)]
        public string reportNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=2)]
        public int DocHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=3)]
        public byte[] Description;
        
        public WebProxyObj_RunReportActionIn() {
        }
        
        public WebProxyObj_RunReportActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, int DocHandle, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.reportNamespace = reportNamespace;
            this.DocHandle = DocHandle;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunReportActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=0)]
        public int DocHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunReportAction", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_RunReportActionOut() {
        }
        
        public WebProxyObj_RunReportActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int DocHandle, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.DocHandle = DocHandle;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunFunctionActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunFunctionAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunFunctionAction", Order=1)]
        public string functionNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunFunctionAction", Order=2)]
        public byte[] Description;
        
        public WebProxyObj_RunFunctionActionIn() {
        }
        
        public WebProxyObj_RunFunctionActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string functionNamespace, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.functionNamespace = functionNamespace;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_RunFunctionActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_RunFunctionAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_RunFunctionActionOut() {
        }
        
        public WebProxyObj_RunFunctionActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectIndexActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=4)]
        public int Index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_SelectIndexActionIn() {
        }
        
        public WebProxyObj_SelectIndexActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.Index = Index;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SelectIndexActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SelectIndexAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_SelectIndexActionOut() {
        }
        
        public WebProxyObj_SelectIndexActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DblClickItemActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=4)]
        public int Index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_DblClickItemActionIn() {
        }
        
        public WebProxyObj_DblClickItemActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.Index = Index;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DblClickItemActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DblClickItemAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DblClickItemActionOut() {
        }
        
        public WebProxyObj_DblClickItemActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_NewRowActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=4)]
        public int nCol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=5)]
        public byte[] Description;
        
        public WebProxyObj_NewRowActionIn() {
        }
        
        public WebProxyObj_NewRowActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nCol, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.nCol = nCol;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_NewRowActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_NewRowAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_NewRowActionOut() {
        }
        
        public WebProxyObj_NewRowActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoCommandActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=4)]
        public int CommandId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=5)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=6)]
        public byte[] Description;
        
        public WebProxyObj_DoCommandActionIn() {
        }
        
        public WebProxyObj_DoCommandActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.CommandId = CommandId;
            this.CommandType = CommandType;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoCommandActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=0)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCommandAction", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_DoCommandActionOut() {
        }
        
        public WebProxyObj_DoCommandActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int CommandType, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.CommandType = CommandType;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoUploadFileActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=4)]
        public int CommandId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=5)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=6)]
        public string FilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=7)]
        public byte[] Description;
        
        public WebProxyObj_DoUploadFileActionIn() {
        }
        
        public WebProxyObj_DoUploadFileActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, string FilePath, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.CommandId = CommandId;
            this.CommandType = CommandType;
            this.FilePath = FilePath;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoUploadFileActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=0)]
        public int CommandType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoUploadFileAction", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_DoUploadFileActionOut() {
        }
        
        public WebProxyObj_DoUploadFileActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int CommandType, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.CommandType = CommandType;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_MoveToActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=3)]
        public string ToWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=4)]
        public byte[] Description;
        
        public WebProxyObj_MoveToActionIn() {
        }
        
        public WebProxyObj_MoveToActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string ToWindow, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.ToWindow = ToWindow;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_MoveToActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_MoveToAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_MoveToActionOut() {
        }
        
        public WebProxyObj_MoveToActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoCloseActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=1)]
        public string FromWindow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=2)]
        public string Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=3)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=4)]
        public byte[] Description;
        
        public WebProxyObj_DoCloseActionIn() {
        }
        
        public WebProxyObj_DoCloseActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.FromWindow = FromWindow;
            this.Value = Value;
            this.WindowId = WindowId;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoCloseActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoCloseAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_DoCloseActionOut() {
        }
        
        public WebProxyObj_DoCloseActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ResizeActionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=2)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=3)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=4)]
        public byte[] Description;
        
        public WebProxyObj_ResizeActionIn() {
        }
        
        public WebProxyObj_ResizeActionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, int Height, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Width = Width;
            this.Height = Height;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_ResizeActionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_ResizeAction", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_ResizeActionOut() {
        }
        
        public WebProxyObj_ResizeActionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateWebProxyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxy", Order=0)]
        public int ThreadId;
        
        public CreateWebProxyIn() {
        }
        
        public CreateWebProxyIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.HeaderInfo = HeaderInfo;
            this.ThreadId = ThreadId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateWebProxyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxy", Order=0)]
        public int @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxy", Order=1)]
        public int ThreadId;
        
        public CreateWebProxyOut() {
        }
        
        public CreateWebProxyOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return, int ThreadId) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.ThreadId = ThreadId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateWebProxyForThreadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxyForThread", Order=0)]
        public int ThreadID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxyForThread", Order=1)]
        public byte[] Description;
        
        public CreateWebProxyForThreadIn() {
        }
        
        public CreateWebProxyForThreadIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadID, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.ThreadID = ThreadID;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateWebProxyForThreadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxyForThread", Order=0)]
        public int @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CreateWebProxyForThread", Order=1)]
        public byte[] Description;
        
        public CreateWebProxyForThreadOut() {
        }
        
        public CreateWebProxyForThreadOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetThreadWindowsBinaryDescriptionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadWindowsBinaryDescription", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadWindowsBinaryDescription", Order=1)]
        public byte[] Description;
        
        public WebProxyObj_GetThreadWindowsBinaryDescriptionIn() {
        }
        
        public WebProxyObj_GetThreadWindowsBinaryDescriptionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetThreadWindowsBinaryDescriptionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetThreadWindowsBinaryDescription", Order=0)]
        public byte[] Description;
        
        public WebProxyObj_GetThreadWindowsBinaryDescriptionOut() {
        }
        
        public WebProxyObj_GetThreadWindowsBinaryDescriptionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, byte[] Description) {
            this.HeaderInfo = HeaderInfo;
            this.Description = Description;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SetUserInteractionModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetUserInteractionMode", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetUserInteractionMode", Order=1)]
        public int Mode;
        
        public WebProxyObj_SetUserInteractionModeIn() {
        }
        
        public WebProxyObj_SetUserInteractionModeIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int Mode) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.Mode = Mode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SetUserInteractionModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public WebProxyObj_SetUserInteractionModeOut() {
        }
        
        public WebProxyObj_SetUserInteractionModeOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetCommandLinkUrlIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetCommandLinkUrl", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetCommandLinkUrl", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetCommandLinkUrl", Order=2)]
        public int CommandId;
        
        public WebProxyObj_GetCommandLinkUrlIn() {
        }
        
        public WebProxyObj_GetCommandLinkUrlIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetCommandLinkUrlOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetCommandLinkUrl", Order=0)]
        public string @return;
        
        public WebProxyObj_GetCommandLinkUrlOut() {
        }
        
        public WebProxyObj_GetCommandLinkUrlOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_OpenDropdownBtnIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_OpenDropdownBtn", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_OpenDropdownBtn", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_OpenDropdownBtn", Order=2)]
        public int CommandId;
        
        public WebProxyObj_OpenDropdownBtnIn() {
        }
        
        public WebProxyObj_OpenDropdownBtnIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_OpenDropdownBtnOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public WebProxyObj_OpenDropdownBtnOut() {
        }
        
        public WebProxyObj_OpenDropdownBtnOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoContextMenuIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoContextMenu", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoContextMenu", Order=1)]
        public string WindowId;
        
        public WebProxyObj_DoContextMenuIn() {
        }
        
        public WebProxyObj_DoContextMenuIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoContextMenuOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public WebProxyObj_DoContextMenuOut() {
        }
        
        public WebProxyObj_DoContextMenuOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetTreeViewAdvContextMenuIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetTreeViewAdvContextMenu", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetTreeViewAdvContextMenu", Order=1)]
        public byte[] MenuDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetTreeViewAdvContextMenu", Order=2)]
        public string TreeId;
        
        public WebProxyObj_GetTreeViewAdvContextMenuIn() {
        }
        
        public WebProxyObj_GetTreeViewAdvContextMenuIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, string TreeId) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.MenuDescription = MenuDescription;
            this.TreeId = TreeId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetTreeViewAdvContextMenuOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetTreeViewAdvContextMenu", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetTreeViewAdvContextMenu", Order=1)]
        public byte[] MenuDescription;
        
        public WebProxyObj_GetTreeViewAdvContextMenuOut() {
        }
        
        public WebProxyObj_GetTreeViewAdvContextMenuOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, byte[] MenuDescription) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.MenuDescription = MenuDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetContextMenuIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetContextMenu", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetContextMenu", Order=1)]
        public byte[] MenuDescription;
        
        public WebProxyObj_GetContextMenuIn() {
        }
        
        public WebProxyObj_GetContextMenuIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.MenuDescription = MenuDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetContextMenuOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetContextMenu", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetContextMenu", Order=1)]
        public byte[] MenuDescription;
        
        public WebProxyObj_GetContextMenuOut() {
        }
        
        public WebProxyObj_GetContextMenuOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, byte[] MenuDescription) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.MenuDescription = MenuDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoKeyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=2)]
        public int keyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=3)]
        public bool bShift;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=4)]
        public bool bCtrl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=5)]
        public bool bAlt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=6)]
        public bool bKeyIsChar;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=7)]
        public int selStart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=8)]
        public int selEnd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=9)]
        public string windowText;
        
        public WebProxyObj_DoKeyIn() {
        }
        
        public WebProxyObj_DoKeyIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, bool bKeyIsChar, int selStart, int selEnd, string windowText) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.keyCode = keyCode;
            this.bShift = bShift;
            this.bCtrl = bCtrl;
            this.bAlt = bAlt;
            this.bKeyIsChar = bKeyIsChar;
            this.selStart = selStart;
            this.selEnd = selEnd;
            this.windowText = windowText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_DoKeyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=0)]
        public int selStart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=1)]
        public int selEnd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_DoKey", Order=2)]
        public string windowText;
        
        public WebProxyObj_DoKeyOut() {
        }
        
        public WebProxyObj_DoKeyOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int selStart, int selEnd, string windowText) {
            this.HeaderInfo = HeaderInfo;
            this.selStart = selStart;
            this.selEnd = selEnd;
            this.windowText = windowText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetComboItemsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetComboItems", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetComboItems", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetComboItems", Order=2)]
        public int SelectedIndex;
        
        public WebProxyObj_GetComboItemsIn() {
        }
        
        public WebProxyObj_GetComboItemsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int SelectedIndex) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.SelectedIndex = SelectedIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_GetComboItemsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetComboItems", Order=0)]
        public string[] @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_GetComboItems", Order=1)]
        public int SelectedIndex;
        
        public WebProxyObj_GetComboItemsOut() {
        }
        
        public WebProxyObj_GetComboItemsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string[] @return, int SelectedIndex) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.SelectedIndex = SelectedIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SetDateIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=1)]
        public string WindowId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=2)]
        public int Day;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=3)]
        public int Month;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=4)]
        public int Year;
        
        public WebProxyObj_SetDateIn() {
        }
        
        public WebProxyObj_SetDateIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Day, int Month, int Year) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.WindowId = WindowId;
            this.Day = Day;
            this.Month = Month;
            this.Year = Year;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class WebProxyObj_SetDateOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.WebProxyObj_SetDate", Order=0)]
        public string @return;
        
        public WebProxyObj_SetDateOut() {
        }
        
        public WebProxyObj_SetDateOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationDateIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetApplicationDateIn() {
        }
        
        public GetApplicationDateIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationDateOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationDate", Order=0)]
        public string @return;
        
        public GetApplicationDateOut() {
        }
        
        public GetApplicationDateOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationYearIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetApplicationYearIn() {
        }
        
        public GetApplicationYearIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationYearOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationYear", Order=0)]
        public int @return;
        
        public GetApplicationYearOut() {
        }
        
        public GetApplicationYearOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationMonthIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetApplicationMonthIn() {
        }
        
        public GetApplicationMonthIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationMonthOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationMonth", Order=0)]
        public int @return;
        
        public GetApplicationMonthOut() {
        }
        
        public GetApplicationMonthOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationDayIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetApplicationDayIn() {
        }
        
        public GetApplicationDayIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationDayOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationDay", Order=0)]
        public int @return;
        
        public GetApplicationDayOut() {
        }
        
        public GetApplicationDayOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnableSoapFunctionExecutionControlIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.EnableSoapFunctionExecutionControl", Order=0)]
        public bool enable;
        
        public EnableSoapFunctionExecutionControlIn() {
        }
        
        public EnableSoapFunctionExecutionControlIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool enable) {
            this.HeaderInfo = HeaderInfo;
            this.enable = enable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnableSoapFunctionExecutionControlOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.EnableSoapFunctionExecutionControl", Order=0)]
        public bool @return;
        
        public EnableSoapFunctionExecutionControlOut() {
        }
        
        public EnableSoapFunctionExecutionControlOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanChangeLoginIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanChangeLogin", Order=0)]
        public bool bLock;
        
        public CanChangeLoginIn() {
        }
        
        public CanChangeLoginIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool bLock) {
            this.HeaderInfo = HeaderInfo;
            this.bLock = bLock;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanChangeLoginOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanChangeLogin", Order=0)]
        public bool @return;
        
        public CanChangeLoginOut() {
        }
        
        public CanChangeLoginOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeLoginIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ChangeLogin", Order=0)]
        public string oldAuthenticationToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ChangeLogin", Order=1)]
        public string newAuthenticationToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ChangeLogin", Order=2)]
        public bool bUnLock;
        
        public ChangeLoginIn() {
        }
        
        public ChangeLoginIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string oldAuthenticationToken, string newAuthenticationToken, bool bUnLock) {
            this.HeaderInfo = HeaderInfo;
            this.oldAuthenticationToken = oldAuthenticationToken;
            this.newAuthenticationToken = newAuthenticationToken;
            this.bUnLock = bUnLock;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangeLoginOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ChangeLogin", Order=0)]
        public int @return;
        
        public ChangeLoginOut() {
        }
        
        public ChangeLoginOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsTBLockedIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public IsTBLockedIn() {
        }
        
        public IsTBLockedIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsTBLockedOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.IsTBLocked", Order=0)]
        public bool @return;
        
        public IsTBLockedOut() {
        }
        
        public IsTBLockedOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockTBIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.LockTB", Order=0)]
        public string authenticationToken;
        
        public LockTBIn() {
        }
        
        public LockTBIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.HeaderInfo = HeaderInfo;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LockTBOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.LockTB", Order=0)]
        public bool @return;
        
        public LockTBOut() {
        }
        
        public LockTBOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnLockTBIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.UnLockTB", Order=0)]
        public string authenticationToken;
        
        public UnLockTBIn() {
        }
        
        public UnLockTBIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.HeaderInfo = HeaderInfo;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnLockTBOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.UnLockTB", Order=0)]
        public bool @return;
        
        public UnLockTBOut() {
        }
        
        public UnLockTBOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ClearCacheIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public ClearCacheIn() {
        }
        
        public ClearCacheIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ClearCacheOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public ClearCacheOut() {
        }
        
        public ClearCacheOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DisconnectCompanyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DisconnectCompany", Order=0)]
        public string authenticationToken;
        
        public DisconnectCompanyIn() {
        }
        
        public DisconnectCompanyIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.HeaderInfo = HeaderInfo;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DisconnectCompanyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DisconnectCompany", Order=0)]
        public int @return;
        
        public DisconnectCompanyOut() {
        }
        
        public DisconnectCompanyOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReconnectCompanyIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ReconnectCompany", Order=0)]
        public string authenticationToken;
        
        public ReconnectCompanyIn() {
        }
        
        public ReconnectCompanyIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.HeaderInfo = HeaderInfo;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReconnectCompanyOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ReconnectCompany", Order=0)]
        public int @return;
        
        public ReconnectCompanyOut() {
        }
        
        public ReconnectCompanyOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseLoginIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CanCloseLoginIn() {
        }
        
        public CanCloseLoginIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseLoginOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanCloseLogin", Order=0)]
        public bool @return;
        
        public CanCloseLoginOut() {
        }
        
        public CanCloseLoginOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseLoginIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CloseLoginIn() {
        }
        
        public CloseLoginIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseLoginOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CloseLoginOut() {
        }
        
        public CloseLoginOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsLoginValidIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public IsLoginValidIn() {
        }
        
        public IsLoginValidIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IsLoginValidOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.IsLoginValid", Order=0)]
        public bool @return;
        
        public IsLoginValidOut() {
        }
        
        public IsLoginValidOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseTBIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CloseTBIn() {
        }
        
        public CloseTBIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseTBOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CloseTBOut() {
        }
        
        public CloseTBOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DestroyTBIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public DestroyTBIn() {
        }
        
        public DestroyTBIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DestroyTBOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public DestroyTBOut() {
        }
        
        public DestroyTBOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDocumentReportsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public AdminDocumentReportsIn() {
        }
        
        public AdminDocumentReportsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDocumentReportsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public AdminDocumentReportsOut() {
        }
        
        public AdminDocumentReportsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDocumentProfilesIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public AdminDocumentProfilesIn() {
        }
        
        public AdminDocumentProfilesIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AdminDocumentProfilesOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public AdminDocumentProfilesOut() {
        }
        
        public AdminDocumentProfilesOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHotlinkQueryIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetHotlinkQuery", Order=0)]
        public string hotLinkNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetHotlinkQuery", Order=1)]
        public string arguments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetHotlinkQuery", Order=2)]
        public int action;
        
        public GetHotlinkQueryIn() {
        }
        
        public GetHotlinkQueryIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string hotLinkNamespace, string arguments, int action) {
            this.HeaderInfo = HeaderInfo;
            this.hotLinkNamespace = hotLinkNamespace;
            this.arguments = arguments;
            this.action = action;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetHotlinkQueryOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetHotlinkQuery", Order=0)]
        public string @return;
        
        public GetHotlinkQueryOut() {
        }
        
        public GetHotlinkQueryOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentParametersIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentParameters", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentParameters", Order=1)]
        public string xmlParams;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "urn:Microarea.Web.Services.GetDocumentParameters", Order = 2)]
        public string code;

        public GetDocumentParametersIn() {
        }
        
        public GetDocumentParametersIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, string code) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.xmlParams = xmlParams;
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentParametersOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentParameters", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentParameters", Order=1)]
        public string xmlParams;
        
        public GetDocumentParametersOut() {
        }
        
        public GetDocumentParametersOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, string xmlParams) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.xmlParams = xmlParams;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportParametersIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportParameters", Order=0)]
        public string reportNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportParameters", Order=1)]
        public string xmlParams;

        [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "urn:Microarea.Web.Services.GetReportParameters", Order = 2)]
        public string code;
        public GetReportParametersIn() {  
        }
        
        public GetReportParametersIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string xmlParams, string code) {
            this.HeaderInfo = HeaderInfo;
            this.reportNamespace = reportNamespace;
            this.xmlParams = xmlParams;
            this.code = code;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReportParametersOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportParameters", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetReportParameters", Order=1)]
        public string xmlParams;
        
        public GetReportParametersOut() {
        }
        
        public GetReportParametersOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, string xmlParams) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.xmlParams = xmlParams;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunBatchInUnattendedModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=1)]
        public string xmlParams;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=2)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=3)]
        public string[] messages;
        
        public RunBatchInUnattendedModeIn() {
        }
        
        public RunBatchInUnattendedModeIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, int documentHandle, string[] messages) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.xmlParams = xmlParams;
            this.documentHandle = documentHandle;
            this.messages = messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunBatchInUnattendedModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=1)]
        public int documentHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunBatchInUnattendedMode", Order=2)]
        public string[] messages;
        
        public RunBatchInUnattendedModeOut() {
        }
        
        public RunBatchInUnattendedModeOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, int documentHandle, string[] messages) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.documentHandle = documentHandle;
            this.messages = messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportInUnattendedModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=0)]
        public int woormInfoHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=1)]
        public string xmlParams;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=2)]
        public int reportHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=3)]
        public string[] messages;
        
        public RunReportInUnattendedModeIn() {
        }
        
        public RunReportInUnattendedModeIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string xmlParams, int reportHandle, string[] messages) {
            this.HeaderInfo = HeaderInfo;
            this.woormInfoHandle = woormInfoHandle;
            this.xmlParams = xmlParams;
            this.reportHandle = reportHandle;
            this.messages = messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportInUnattendedModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=1)]
        public int reportHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportInUnattendedMode", Order=2)]
        public string[] messages;
        
        public RunReportInUnattendedModeOut() {
        }
        
        public RunReportInUnattendedModeOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, int reportHandle, string[] messages) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.reportHandle = reportHandle;
            this.messages = messages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunFunction", Order=0)]
        public string functionNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunFunction", Order=1)]
        public string arguments;
        
        public RunFunctionIn() {
        }
        
        public RunFunctionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            this.HeaderInfo = HeaderInfo;
            this.functionNamespace = functionNamespace;
            this.arguments = arguments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunFunction", Order=0)]
        public bool @return;
        
        public RunFunctionOut() {
        }
        
        public RunFunctionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionInNewThreadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunFunctionInNewThread", Order=0)]
        public string functionNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunFunctionInNewThread", Order=1)]
        public string arguments;
        
        public RunFunctionInNewThreadIn() {
        }
        
        public RunFunctionInNewThreadIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            this.HeaderInfo = HeaderInfo;
            this.functionNamespace = functionNamespace;
            this.arguments = arguments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunFunctionInNewThreadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public RunFunctionInNewThreadOut() {
        }
        
        public RunFunctionInNewThreadOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunEditorIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunEditor", Order=0)]
        public string functionNamespace;
        
        public RunEditorIn() {
        }
        
        public RunEditorIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace) {
            this.HeaderInfo = HeaderInfo;
            this.functionNamespace = functionNamespace;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunEditorOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunEditor", Order=0)]
        public bool @return;
        
        public RunEditorOut() {
        }
        
        public RunEditorOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CloseDocument", Order=0)]
        public int documentHandle;
        
        public CloseDocumentIn() {
        }
        
        public CloseDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CloseDocument", Order=0)]
        public bool @return;
        
        public CloseDocumentOut() {
        }
        
        public CloseDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunIconizedDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunIconizedDocument", Order=0)]
        public int documentHandle;
        
        public RunIconizedDocumentIn() {
        }
        
        public RunIconizedDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunIconizedDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunIconizedDocument", Order=0)]
        public bool @return;
        
        public RunIconizedDocumentOut() {
        }
        
        public RunIconizedDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanCloseDocument", Order=0)]
        public int documentHandle;
        
        public CanCloseDocumentIn() {
        }
        
        public CanCloseDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanCloseDocument", Order=0)]
        public bool @return;
        
        public CanCloseDocumentOut() {
        }
        
        public CanCloseDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExistDocument", Order=0)]
        public int documentHandle;
        
        public ExistDocumentIn() {
        }
        
        public ExistDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExistDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.ExistDocument", Order=0)]
        public bool @return;
        
        public ExistDocumentOut() {
        }
        
        public ExistDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DestroyDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DestroyDocument", Order=0)]
        public int documentHandle;
        
        public DestroyDocumentIn() {
        }
        
        public DestroyDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DestroyDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DestroyDocument", Order=0)]
        public bool @return;
        
        public DestroyDocumentOut() {
        }
        
        public DestroyDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseAllDocumentsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CloseAllDocumentsIn() {
        }
        
        public CloseAllDocumentsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CloseAllDocumentsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CloseAllDocuments", Order=0)]
        public bool @return;
        
        public CloseAllDocumentsOut() {
        }
        
        public CloseAllDocumentsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOpenDocumentsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetOpenDocumentsIn() {
        }
        
        public GetOpenDocumentsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOpenDocumentsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetOpenDocuments", Order=0)]
        public int[] @return;
        
        public GetOpenDocumentsOut() {
        }
        
        public GetOpenDocumentsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int[] @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationContextMessagesIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationContextMessages", Order=0)]
        public bool clearMessages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationContextMessages", Order=1)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationContextMessages", Order=2)]
        public int[] types;
        
        public GetApplicationContextMessagesIn() {
        }
        
        public GetApplicationContextMessagesIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.clearMessages = clearMessages;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetApplicationContextMessagesOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationContextMessages", Order=0)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetApplicationContextMessages", Order=1)]
        public int[] types;
        
        public GetApplicationContextMessagesOut() {
        }
        
        public GetApplicationContextMessagesOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginContextMessagesIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginContextMessages", Order=0)]
        public bool clearMessages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginContextMessages", Order=1)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginContextMessages", Order=2)]
        public int[] types;
        
        public GetLoginContextMessagesIn() {
        }
        
        public GetLoginContextMessagesIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.clearMessages = clearMessages;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginContextMessagesOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginContextMessages", Order=0)]
        public string[] messages;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginContextMessages", Order=1)]
        public int[] types;
        
        public GetLoginContextMessagesOut() {
        }
        
        public GetLoginContextMessagesOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string[] messages, int[] types) {
            this.HeaderInfo = HeaderInfo;
            this.messages = messages;
            this.types = types;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseTBIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CanCloseTBIn() {
        }
        
        public CanCloseTBIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanCloseTBOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanCloseTB", Order=0)]
        public bool @return;
        
        public CanCloseTBOut() {
        }
        
        public CanCloseTBOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillThreadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.KillThread", Order=0)]
        public int ThreadId;
        
        public KillThreadIn() {
        }
        
        public KillThreadIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.HeaderInfo = HeaderInfo;
            this.ThreadId = ThreadId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class KillThreadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public KillThreadOut() {
        }
        
        public KillThreadOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopThreadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.StopThread", Order=0)]
        public int ThreadId;
        
        public StopThreadIn() {
        }
        
        public StopThreadIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.HeaderInfo = HeaderInfo;
            this.ThreadId = ThreadId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopThreadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.StopThread", Order=0)]
        public bool @return;
        
        public StopThreadOut() {
        }
        
        public StopThreadOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanStopThreadIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanStopThread", Order=0)]
        public int ThreadId;
        
        public CanStopThreadIn() {
        }
        
        public CanStopThreadIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.HeaderInfo = HeaderInfo;
            this.ThreadId = ThreadId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CanStopThreadOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CanStopThread", Order=0)]
        public bool @return;
        
        public CanStopThreadOut() {
        }
        
        public CanStopThreadOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetActiveThreadsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetActiveThreadsIn() {
        }
        
        public GetActiveThreadsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetActiveThreadsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetActiveThreads", Order=0)]
        public string @return;
        
        public GetActiveThreadsOut() {
        }
        
        public GetActiveThreadsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginActiveThreadsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetLoginActiveThreadsIn() {
        }
        
        public GetLoginActiveThreadsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginActiveThreadsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLoginActiveThreads", Order=0)]
        public string @return;
        
        public GetLoginActiveThreadsOut() {
        }
        
        public GetLoginActiveThreadsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentThreadsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetDocumentThreadsIn() {
        }
        
        public GetDocumentThreadsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDocumentThreadsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetDocumentThreads", Order=0)]
        public int[] @return;
        
        public GetDocumentThreadsOut() {
        }
        
        public GetDocumentThreadsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int[] @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetMenuHandleIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SetMenuHandle", Order=0)]
        public int menuWindowHandle;
        
        public SetMenuHandleIn() {
        }
        
        public SetMenuHandleIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int menuWindowHandle) {
            this.HeaderInfo = HeaderInfo;
            this.menuWindowHandle = menuWindowHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetMenuHandleOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public SetMenuHandleOut() {
        }
        
        public SetMenuHandleOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetDocumentInForegroundIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SetDocumentInForeground", Order=0)]
        public int documentHandle;
        
        public SetDocumentInForegroundIn() {
        }
        
        public SetDocumentInForegroundIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.HeaderInfo = HeaderInfo;
            this.documentHandle = documentHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetDocumentInForegroundOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SetDocumentInForeground", Order=0)]
        public bool @return;
        
        public SetDocumentInForegroundOut() {
        }
        
        public SetDocumentInForegroundOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentUserIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentUser", Order=0)]
        public string strUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentUser", Order=1)]
        public string strCompany;
        
        public GetCurrentUserIn() {
        }
        
        public GetCurrentUserIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string strUser, string strCompany) {
            this.HeaderInfo = HeaderInfo;
            this.strUser = strUser;
            this.strCompany = strCompany;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCurrentUserOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentUser", Order=0)]
        public bool @return;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentUser", Order=1)]
        public string strUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetCurrentUser", Order=2)]
        public string strCompany;
        
        public GetCurrentUserOut() {
        }
        
        public GetCurrentUserOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return, string strUser, string strCompany) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
            this.strUser = strUser;
            this.strCompany = strCompany;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocument", Order=0)]
        public string documentNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocument", Order=1)]
        public string arguments;
        
        public RunDocumentIn() {
        }
        
        public RunDocumentIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string arguments) {
            this.HeaderInfo = HeaderInfo;
            this.documentNamespace = documentNamespace;
            this.arguments = arguments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunDocumentOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunDocument", Order=0)]
        public int @return;
        
        public RunDocumentOut() {
        }
        
        public RunDocumentOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReport", Order=0)]
        public string reportNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReport", Order=1)]
        public string arguments;
        
        public RunReportIn() {
        }
        
        public RunReportIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string arguments) {
            this.HeaderInfo = HeaderInfo;
            this.reportNamespace = reportNamespace;
            this.arguments = arguments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReport", Order=0)]
        public int @return;
        
        public RunReportOut() {
        }
        
        public RunReportOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportFromWoormInfoIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportFromWoormInfo", Order=0)]
        public int woormInfoHandle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportFromWoormInfo", Order=1)]
        public string arguments;
        
        public RunReportFromWoormInfoIn() {
        }
        
        public RunReportFromWoormInfoIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string arguments) {
            this.HeaderInfo = HeaderInfo;
            this.woormInfoHandle = woormInfoHandle;
            this.arguments = arguments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunReportFromWoormInfoOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.RunReportFromWoormInfo", Order=0)]
        public int @return;
        
        public RunReportFromWoormInfoOut() {
        }
        
        public RunReportFromWoormInfoOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_PressToolbarButtonIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_PressToolbarButton", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_PressToolbarButton", Order=1)]
        public string buttonName;
        
        public CAbstractFormDoc_PressToolbarButtonIn() {
        }
        
        public CAbstractFormDoc_PressToolbarButtonIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string buttonName) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.buttonName = buttonName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_PressToolbarButtonOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_PressToolbarButton", Order=0)]
        public bool @return;
        
        public CAbstractFormDoc_PressToolbarButtonOut() {
        }
        
        public CAbstractFormDoc_PressToolbarButtonOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetMasterIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetMaster", Order=0)]
        public int handle;
        
        public CAbstractFormDoc_GetMasterIn() {
        }
        
        public CAbstractFormDoc_GetMasterIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetMasterOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetMaster", Order=0)]
        public int @return;
        
        public CAbstractFormDoc_GetMasterOut() {
        }
        
        public CAbstractFormDoc_GetMasterOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetHotLinkValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetHotLinkValue", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetHotLinkValue", Order=1)]
        public string aCtrlNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetHotLinkValue", Order=2)]
        public string aHotLinkFieldName;
        
        public CAbstractFormDoc_GetHotLinkValueIn() {
        }
        
        public CAbstractFormDoc_GetHotLinkValueIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aCtrlNamespace, string aHotLinkFieldName) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.aCtrlNamespace = aCtrlNamespace;
            this.aHotLinkFieldName = aHotLinkFieldName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetHotLinkValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetHotLinkValue", Order=0)]
        public string @return;
        
        public CAbstractFormDoc_GetHotLinkValueOut() {
        }
        
        public CAbstractFormDoc_GetHotLinkValueOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetFieldDataIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldData", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldData", Order=1)]
        public string aDBTNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldData", Order=2)]
        public string aFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldData", Order=3)]
        public int nRow;
        
        public CAbstractFormDoc_GetFieldDataIn() {
        }
        
        public CAbstractFormDoc_GetFieldDataIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.aDBTNamespace = aDBTNamespace;
            this.aFieldName = aFieldName;
            this.nRow = nRow;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetFieldDataOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldData", Order=0)]
        public int @return;
        
        public CAbstractFormDoc_GetFieldDataOut() {
        }
        
        public CAbstractFormDoc_GetFieldDataOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetFieldValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldValue", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldValue", Order=1)]
        public string aDBTNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldValue", Order=2)]
        public string aFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldValue", Order=3)]
        public int nRow;
        
        public CAbstractFormDoc_GetFieldValueIn() {
        }
        
        public CAbstractFormDoc_GetFieldValueIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.aDBTNamespace = aDBTNamespace;
            this.aFieldName = aFieldName;
            this.nRow = nRow;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetFieldValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetFieldValue", Order=0)]
        public string @return;
        
        public CAbstractFormDoc_GetFieldValueOut() {
        }
        
        public CAbstractFormDoc_GetFieldValueOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_SetFieldValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_SetFieldValue", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_SetFieldValue", Order=1)]
        public string aDBTNamespace;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_SetFieldValue", Order=2)]
        public string aFieldName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_SetFieldValue", Order=3)]
        public int nRow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_SetFieldValue", Order=4)]
        public string aValue;
        
        public CAbstractFormDoc_SetFieldValueIn() {
        }
        
        public CAbstractFormDoc_SetFieldValueIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, string aValue) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.aDBTNamespace = aDBTNamespace;
            this.aFieldName = aFieldName;
            this.nRow = nRow;
            this.aValue = aValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_SetFieldValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public CAbstractFormDoc_SetFieldValueOut() {
        }
        
        public CAbstractFormDoc_SetFieldValueOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetConnectionIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetConnection", Order=0)]
        public int handle;
        
        public CAbstractFormDoc_GetConnectionIn() {
        }
        
        public CAbstractFormDoc_GetConnectionIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_GetConnectionOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_GetConnection", Order=0)]
        public int @return;
        
        public CAbstractFormDoc_GetConnectionOut() {
        }
        
        public CAbstractFormDoc_GetConnectionOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HotKeyLink_SetParamValueIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.HotKeyLink_SetParamValue", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.HotKeyLink_SetParamValue", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.HotKeyLink_SetParamValue", Order=2)]
        public int value;
        
        public HotKeyLink_SetParamValueIn() {
        }
        
        public HotKeyLink_SetParamValueIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string name, int value) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.name = name;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HotKeyLink_SetParamValueOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public HotKeyLink_SetParamValueOut() {
        }
        
        public HotKeyLink_SetParamValueOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginsIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetLoginsIn() {
        }
        
        public GetLoginsIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLoginsOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetLogins", Order=0)]
        public int @return;
        
        public GetLoginsOut() {
        }
        
        public GetLoginsOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetUserInteractionModeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.SetUserInteractionMode", Order=0)]
        public int mode;
        
        public SetUserInteractionModeIn() {
        }
        
        public SetUserInteractionModeIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int mode) {
            this.HeaderInfo = HeaderInfo;
            this.mode = mode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetUserInteractionModeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public SetUserInteractionModeOut() {
        }
        
        public SetUserInteractionModeOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UseRemoteInterfaceIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.UseRemoteInterface", Order=0)]
        public bool set;
        
        public UseRemoteInterfaceIn() {
        }
        
        public UseRemoteInterfaceIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool set) {
            this.HeaderInfo = HeaderInfo;
            this.set = set;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UseRemoteInterfaceOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public UseRemoteInterfaceOut() {
        }
        
        public UseRemoteInterfaceOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.Login", Order=0)]
        public string authenticationToken;
        
        public LoginIn() {
        }
        
        public LoginIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.HeaderInfo = HeaderInfo;
            this.authenticationToken = authenticationToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.Login", Order=0)]
        public bool @return;
        
        public LoginOut() {
        }
        
        public LoginOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProcessIDIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public GetProcessIDIn() {
        }
        
        public GetProcessIDIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProcessIDOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.GetProcessID", Order=0)]
        public int @return;
        
        public GetProcessIDOut() {
        }
        
        public GetProcessIDOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTObject_GetRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTObject_GetRecord", Order=0)]
        public int handle;
        
        public DBTObject_GetRecordIn() {
        }
        
        public DBTObject_GetRecordIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTObject_GetRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTObject_GetRecord", Order=0)]
        public int @return;
        
        public DBTObject_GetRecordOut() {
        }
        
        public DBTObject_GetRecordOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTObject_GetTableIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTObject_GetTable", Order=0)]
        public int handle;
        
        public DBTObject_GetTableIn() {
        }
        
        public DBTObject_GetTableIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTObject_GetTableOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTObject_GetTable", Order=0)]
        public int @return;
        
        public DBTObject_GetTableOut() {
        }
        
        public DBTObject_GetTableOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_AddRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_AddRecord", Order=0)]
        public int handle;
        
        public DBTSlaveBuffered_AddRecordIn() {
        }
        
        public DBTSlaveBuffered_AddRecordIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_AddRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_AddRecord", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_AddRecordOut() {
        }
        
        public DBTSlaveBuffered_AddRecordOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetRowIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetRow", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetRow", Order=1)]
        public int row;
        
        public DBTSlaveBuffered_GetRowIn() {
        }
        
        public DBTSlaveBuffered_GetRowIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.row = row;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetRowOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetRow", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_GetRowOut() {
        }
        
        public DBTSlaveBuffered_GetRowOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetCurrentRowIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetCurrentRow", Order=0)]
        public int handle;
        
        public DBTSlaveBuffered_GetCurrentRowIn() {
        }
        
        public DBTSlaveBuffered_GetCurrentRowIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetCurrentRowOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetCurrentRow", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_GetCurrentRowOut() {
        }
        
        public DBTSlaveBuffered_GetCurrentRowOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_SetCurrentRowIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_SetCurrentRow", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_SetCurrentRow", Order=1)]
        public int row;
        
        public DBTSlaveBuffered_SetCurrentRowIn() {
        }
        
        public DBTSlaveBuffered_SetCurrentRowIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.row = row;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_SetCurrentRowOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public DBTSlaveBuffered_SetCurrentRowOut() {
        }
        
        public DBTSlaveBuffered_SetCurrentRowOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetCurrentRowIndexIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetCurrentRowIndex", Order=0)]
        public int handle;
        
        public DBTSlaveBuffered_GetCurrentRowIndexIn() {
        }
        
        public DBTSlaveBuffered_GetCurrentRowIndexIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetCurrentRowIndexOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetCurrentRowIndex", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_GetCurrentRowIndexOut() {
        }
        
        public DBTSlaveBuffered_GetCurrentRowIndexOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetSizeIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetSize", Order=0)]
        public int handle;
        
        public DBTSlaveBuffered_GetSizeIn() {
        }
        
        public DBTSlaveBuffered_GetSizeIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_GetSizeOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_GetSize", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_GetSizeOut() {
        }
        
        public DBTSlaveBuffered_GetSizeOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_InsertRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_InsertRecord", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_InsertRecord", Order=1)]
        public int row;
        
        public DBTSlaveBuffered_InsertRecordIn() {
        }
        
        public DBTSlaveBuffered_InsertRecordIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.row = row;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_InsertRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_InsertRecord", Order=0)]
        public int @return;
        
        public DBTSlaveBuffered_InsertRecordOut() {
        }
        
        public DBTSlaveBuffered_InsertRecordOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_DeleteRecordIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_DeleteRecord", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_DeleteRecord", Order=1)]
        public int row;
        
        public DBTSlaveBuffered_DeleteRecordIn() {
        }
        
        public DBTSlaveBuffered_DeleteRecordIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.row = row;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_DeleteRecordOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public DBTSlaveBuffered_DeleteRecordOut() {
        }
        
        public DBTSlaveBuffered_DeleteRecordOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_RemoveAllIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.DBTSlaveBuffered_RemoveAll", Order=0)]
        public int handle;
        
        public DBTSlaveBuffered_RemoveAllIn() {
        }
        
        public DBTSlaveBuffered_RemoveAllIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DBTSlaveBuffered_RemoveAllOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        public DBTSlaveBuffered_RemoveAllOut() {
        }
        
        public DBTSlaveBuffered_RemoveAllOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.HeaderInfo = HeaderInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_ActivateTabIn {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_ActivateTab", Order=0)]
        public int handle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_ActivateTab", Order=1)]
        public string NsTab;
        
        public CAbstractFormDoc_ActivateTabIn() {
        }
        
        public CAbstractFormDoc_ActivateTabIn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string NsTab) {
            this.HeaderInfo = HeaderInfo;
            this.handle = handle;
            this.NsTab = NsTab;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CAbstractFormDoc_ActivateTabOut {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:Microarea.Web.Services")]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Microarea.Web.Services.CAbstractFormDoc_ActivateTab", Order=0)]
        public bool @return;
        
        public CAbstractFormDoc_ActivateTabOut() {
        }
        
        public CAbstractFormDoc_ActivateTabOut(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool @return) {
            this.HeaderInfo = HeaderInfo;
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TbGesChannel : Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_ResizeColumnActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_ResizeColumnActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_BETreeToggleExpandNodeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_BETreeToggleExpandNodeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoHotLinkActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoHotLinkActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoSpinActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoSpinActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_ActivateTabPageActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_ActivateTabPageActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SelectNodeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SelectNodeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_ToggleNodeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_ToggleNodeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SelectRadarActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SelectRadarActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_MoveRowRadarActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_MoveRowRadarActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_ClickContextMenuActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_ClickContextMenuActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int CommandType {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoMoveBodyPageActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoMoveBodyPageActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoLinkActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoLinkActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoHyperLinkActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoHyperLinkActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SelectRowActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SelectRowActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetThreadContextMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetThreadContextMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] messages {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public int[] types {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoKeyActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoKeyActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_RunDocumentActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_RunDocumentActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int DocHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_RunReportActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_RunReportActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int DocHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_RunFunctionActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_RunFunctionActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SelectIndexActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SelectIndexActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DblClickItemActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DblClickItemActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_NewRowActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_NewRowActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoCommandActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoCommandActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int CommandType {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoUploadFileActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoUploadFileActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int CommandType {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_MoveToActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_MoveToActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoCloseActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoCloseActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_ResizeActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_ResizeActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateWebProxyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateWebProxyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int ThreadId {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateWebProxyForThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateWebProxyForThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetThreadWindowsBinaryDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetThreadWindowsBinaryDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Description {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SetUserInteractionModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SetUserInteractionModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetCommandLinkUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetCommandLinkUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_OpenDropdownBtnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_OpenDropdownBtnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoContextMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoContextMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetTreeViewAdvContextMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetTreeViewAdvContextMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public byte[] MenuDescription {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetContextMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetContextMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public byte[] MenuDescription {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_DoKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_DoKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int selStart {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public int selEnd {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public string windowText {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_GetComboItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_GetComboItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public int SelectedIndex {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebProxyObj_SetDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WebProxyObj_SetDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnableSoapFunctionExecutionControlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnableSoapFunctionExecutionControlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanChangeLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanChangeLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsTBLockedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsTBLockedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LockTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LockTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnLockTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnLockTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisconnectCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisconnectCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReconnectCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReconnectCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanCloseLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanCloseLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsLoginValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsLoginValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DestroyTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DestroyTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminDocumentReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AdminDocumentReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminDocumentProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AdminDocumentProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHotlinkQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHotlinkQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public string xmlParams {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public string xmlParams {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunBatchInUnattendedModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunBatchInUnattendedModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public int documentHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public string[] messages {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunReportInUnattendedModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunReportInUnattendedModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public int reportHandle {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        public string[] messages {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunFunctionInNewThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunFunctionInNewThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunEditorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunEditorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunIconizedDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunIconizedDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanCloseDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanCloseDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExistDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExistDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DestroyDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DestroyDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CloseAllDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CloseAllDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOpenDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOpenDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationContextMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationContextMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] messages {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public int[] types {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginContextMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginContextMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] messages {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        public int[] types {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[1]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanCloseTBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanCloseTBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KillThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public KillThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StopThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StopThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanStopThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanStopThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActiveThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActiveThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginActiveThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginActiveThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentThreadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentThreadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetMenuHandleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetMenuHandleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDocumentInForegroundCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDocumentInForegroundCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public string strUser {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strCompany {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunReportFromWoormInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RunReportFromWoormInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_PressToolbarButtonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_PressToolbarButtonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_GetMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_GetMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_GetHotLinkValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_GetHotLinkValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_GetFieldDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_GetFieldDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_GetFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_GetFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_SetFieldValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_SetFieldValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_GetConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_GetConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HotKeyLink_SetParamValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HotKeyLink_SetParamValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetUserInteractionModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetUserInteractionModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UseRemoteInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UseRemoteInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProcessIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProcessIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTObject_GetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTObject_GetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTObject_GetTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTObject_GetTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_AddRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_AddRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_GetRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_GetRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_GetCurrentRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_GetCurrentRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_SetCurrentRowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_SetCurrentRowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_GetCurrentRowIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_GetCurrentRowIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_GetSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_GetSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_InsertRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_InsertRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_DeleteRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_DeleteRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBTSlaveBuffered_RemoveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DBTSlaveBuffered_RemoveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAbstractFormDoc_ActivateTabCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CAbstractFormDoc_ActivateTabCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool @return {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TbGesClient : System.ServiceModel.ClientBase<Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes>, Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes {
        
        private BeginOperationDelegate onBeginWebProxyObj_ResizeColumnActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_ResizeColumnActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_ResizeColumnActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_BETreeToggleExpandNodeActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_BETreeToggleExpandNodeActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_BETreeToggleExpandNodeActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoHotLinkActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoHotLinkActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoHotLinkActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoSpinActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoSpinActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoSpinActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_ActivateTabPageActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_ActivateTabPageActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_ActivateTabPageActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SelectNodeActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SelectNodeActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SelectNodeActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_ToggleNodeActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_ToggleNodeActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_ToggleNodeActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SelectRadarActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SelectRadarActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SelectRadarActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_MoveRowRadarActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_MoveRowRadarActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_MoveRowRadarActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_ClickContextMenuActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_ClickContextMenuActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_ClickContextMenuActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoMoveBodyPageActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoMoveBodyPageActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoMoveBodyPageActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoLinkActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoLinkActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoLinkActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoHyperLinkActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoHyperLinkActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoHyperLinkActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SelectRowActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SelectRowActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SelectRowActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetThreadContextMessagesDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetThreadContextMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetThreadContextMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoKeyActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoKeyActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoKeyActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_RunDocumentActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_RunDocumentActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_RunDocumentActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_RunReportActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_RunReportActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_RunReportActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_RunFunctionActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_RunFunctionActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_RunFunctionActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SelectIndexActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SelectIndexActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SelectIndexActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DblClickItemActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DblClickItemActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DblClickItemActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_NewRowActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_NewRowActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_NewRowActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoCommandActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoCommandActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoCommandActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoUploadFileActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoUploadFileActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoUploadFileActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_MoveToActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_MoveToActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_MoveToActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoCloseActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoCloseActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoCloseActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_ResizeActionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_ResizeActionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_ResizeActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateWebProxyDelegate;
        
        private EndOperationDelegate onEndCreateWebProxyDelegate;
        
        private System.Threading.SendOrPostCallback onCreateWebProxyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateWebProxyForThreadDelegate;
        
        private EndOperationDelegate onEndCreateWebProxyForThreadDelegate;
        
        private System.Threading.SendOrPostCallback onCreateWebProxyForThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetThreadWindowsBinaryDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SetUserInteractionModeDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SetUserInteractionModeDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SetUserInteractionModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetCommandLinkUrlDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetCommandLinkUrlDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetCommandLinkUrlCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_OpenDropdownBtnDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_OpenDropdownBtnDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_OpenDropdownBtnCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoContextMenuDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoContextMenuDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoContextMenuCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetTreeViewAdvContextMenuDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetTreeViewAdvContextMenuDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetTreeViewAdvContextMenuCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetContextMenuDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetContextMenuDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetContextMenuCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_DoKeyDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_DoKeyDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_DoKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_GetComboItemsDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_GetComboItemsDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_GetComboItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginWebProxyObj_SetDateDelegate;
        
        private EndOperationDelegate onEndWebProxyObj_SetDateDelegate;
        
        private System.Threading.SendOrPostCallback onWebProxyObj_SetDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationDateDelegate;
        
        private EndOperationDelegate onEndGetApplicationDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationYearDelegate;
        
        private EndOperationDelegate onEndGetApplicationYearDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationYearCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationMonthDelegate;
        
        private EndOperationDelegate onEndGetApplicationMonthDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationMonthCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationDayDelegate;
        
        private EndOperationDelegate onEndGetApplicationDayDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationDayCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnableSoapFunctionExecutionControlDelegate;
        
        private EndOperationDelegate onEndEnableSoapFunctionExecutionControlDelegate;
        
        private System.Threading.SendOrPostCallback onEnableSoapFunctionExecutionControlCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanChangeLoginDelegate;
        
        private EndOperationDelegate onEndCanChangeLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCanChangeLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeLoginDelegate;
        
        private EndOperationDelegate onEndChangeLoginDelegate;
        
        private System.Threading.SendOrPostCallback onChangeLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsTBLockedDelegate;
        
        private EndOperationDelegate onEndIsTBLockedDelegate;
        
        private System.Threading.SendOrPostCallback onIsTBLockedCompletedDelegate;
        
        private BeginOperationDelegate onBeginLockTBDelegate;
        
        private EndOperationDelegate onEndLockTBDelegate;
        
        private System.Threading.SendOrPostCallback onLockTBCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnLockTBDelegate;
        
        private EndOperationDelegate onEndUnLockTBDelegate;
        
        private System.Threading.SendOrPostCallback onUnLockTBCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearCacheDelegate;
        
        private EndOperationDelegate onEndClearCacheDelegate;
        
        private System.Threading.SendOrPostCallback onClearCacheCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectCompanyDelegate;
        
        private EndOperationDelegate onEndDisconnectCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginReconnectCompanyDelegate;
        
        private EndOperationDelegate onEndReconnectCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onReconnectCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanCloseLoginDelegate;
        
        private EndOperationDelegate onEndCanCloseLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCanCloseLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseLoginDelegate;
        
        private EndOperationDelegate onEndCloseLoginDelegate;
        
        private System.Threading.SendOrPostCallback onCloseLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsLoginValidDelegate;
        
        private EndOperationDelegate onEndIsLoginValidDelegate;
        
        private System.Threading.SendOrPostCallback onIsLoginValidCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseTBDelegate;
        
        private EndOperationDelegate onEndCloseTBDelegate;
        
        private System.Threading.SendOrPostCallback onCloseTBCompletedDelegate;
        
        private BeginOperationDelegate onBeginDestroyTBDelegate;
        
        private EndOperationDelegate onEndDestroyTBDelegate;
        
        private System.Threading.SendOrPostCallback onDestroyTBCompletedDelegate;
        
        private BeginOperationDelegate onBeginAdminDocumentReportsDelegate;
        
        private EndOperationDelegate onEndAdminDocumentReportsDelegate;
        
        private System.Threading.SendOrPostCallback onAdminDocumentReportsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAdminDocumentProfilesDelegate;
        
        private EndOperationDelegate onEndAdminDocumentProfilesDelegate;
        
        private System.Threading.SendOrPostCallback onAdminDocumentProfilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHotlinkQueryDelegate;
        
        private EndOperationDelegate onEndGetHotlinkQueryDelegate;
        
        private System.Threading.SendOrPostCallback onGetHotlinkQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentParametersDelegate;
        
        private EndOperationDelegate onEndGetDocumentParametersDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentParametersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportParametersDelegate;
        
        private EndOperationDelegate onEndGetReportParametersDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportParametersCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunBatchInUnattendedModeDelegate;
        
        private EndOperationDelegate onEndRunBatchInUnattendedModeDelegate;
        
        private System.Threading.SendOrPostCallback onRunBatchInUnattendedModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunReportInUnattendedModeDelegate;
        
        private EndOperationDelegate onEndRunReportInUnattendedModeDelegate;
        
        private System.Threading.SendOrPostCallback onRunReportInUnattendedModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunFunctionDelegate;
        
        private EndOperationDelegate onEndRunFunctionDelegate;
        
        private System.Threading.SendOrPostCallback onRunFunctionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunFunctionInNewThreadDelegate;
        
        private EndOperationDelegate onEndRunFunctionInNewThreadDelegate;
        
        private System.Threading.SendOrPostCallback onRunFunctionInNewThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunEditorDelegate;
        
        private EndOperationDelegate onEndRunEditorDelegate;
        
        private System.Threading.SendOrPostCallback onRunEditorCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDocumentDelegate;
        
        private EndOperationDelegate onEndCloseDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onCloseDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunIconizedDocumentDelegate;
        
        private EndOperationDelegate onEndRunIconizedDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onRunIconizedDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanCloseDocumentDelegate;
        
        private EndOperationDelegate onEndCanCloseDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onCanCloseDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginExistDocumentDelegate;
        
        private EndOperationDelegate onEndExistDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onExistDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDestroyDocumentDelegate;
        
        private EndOperationDelegate onEndDestroyDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onDestroyDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseAllDocumentsDelegate;
        
        private EndOperationDelegate onEndCloseAllDocumentsDelegate;
        
        private System.Threading.SendOrPostCallback onCloseAllDocumentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOpenDocumentsDelegate;
        
        private EndOperationDelegate onEndGetOpenDocumentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOpenDocumentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationContextMessagesDelegate;
        
        private EndOperationDelegate onEndGetApplicationContextMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationContextMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginContextMessagesDelegate;
        
        private EndOperationDelegate onEndGetLoginContextMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginContextMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanCloseTBDelegate;
        
        private EndOperationDelegate onEndCanCloseTBDelegate;
        
        private System.Threading.SendOrPostCallback onCanCloseTBCompletedDelegate;
        
        private BeginOperationDelegate onBeginKillThreadDelegate;
        
        private EndOperationDelegate onEndKillThreadDelegate;
        
        private System.Threading.SendOrPostCallback onKillThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopThreadDelegate;
        
        private EndOperationDelegate onEndStopThreadDelegate;
        
        private System.Threading.SendOrPostCallback onStopThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanStopThreadDelegate;
        
        private EndOperationDelegate onEndCanStopThreadDelegate;
        
        private System.Threading.SendOrPostCallback onCanStopThreadCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActiveThreadsDelegate;
        
        private EndOperationDelegate onEndGetActiveThreadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetActiveThreadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginActiveThreadsDelegate;
        
        private EndOperationDelegate onEndGetLoginActiveThreadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginActiveThreadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentThreadsDelegate;
        
        private EndOperationDelegate onEndGetDocumentThreadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentThreadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetMenuHandleDelegate;
        
        private EndOperationDelegate onEndSetMenuHandleDelegate;
        
        private System.Threading.SendOrPostCallback onSetMenuHandleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDocumentInForegroundDelegate;
        
        private EndOperationDelegate onEndSetDocumentInForegroundDelegate;
        
        private System.Threading.SendOrPostCallback onSetDocumentInForegroundCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentUserDelegate;
        
        private EndOperationDelegate onEndGetCurrentUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunDocumentDelegate;
        
        private EndOperationDelegate onEndRunDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onRunDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunReportDelegate;
        
        private EndOperationDelegate onEndRunReportDelegate;
        
        private System.Threading.SendOrPostCallback onRunReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunReportFromWoormInfoDelegate;
        
        private EndOperationDelegate onEndRunReportFromWoormInfoDelegate;
        
        private System.Threading.SendOrPostCallback onRunReportFromWoormInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_PressToolbarButtonDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_PressToolbarButtonDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_PressToolbarButtonCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_GetMasterDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_GetMasterDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_GetMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_GetHotLinkValueDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_GetHotLinkValueDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_GetHotLinkValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_GetFieldDataDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_GetFieldDataDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_GetFieldDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_GetFieldValueDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_GetFieldValueDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_GetFieldValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_SetFieldValueDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_SetFieldValueDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_SetFieldValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_GetConnectionDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_GetConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_GetConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginHotKeyLink_SetParamValueDelegate;
        
        private EndOperationDelegate onEndHotKeyLink_SetParamValueDelegate;
        
        private System.Threading.SendOrPostCallback onHotKeyLink_SetParamValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginsDelegate;
        
        private EndOperationDelegate onEndGetLoginsDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetUserInteractionModeDelegate;
        
        private EndOperationDelegate onEndSetUserInteractionModeDelegate;
        
        private System.Threading.SendOrPostCallback onSetUserInteractionModeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUseRemoteInterfaceDelegate;
        
        private EndOperationDelegate onEndUseRemoteInterfaceDelegate;
        
        private System.Threading.SendOrPostCallback onUseRemoteInterfaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProcessIDDelegate;
        
        private EndOperationDelegate onEndGetProcessIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetProcessIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTObject_GetRecordDelegate;
        
        private EndOperationDelegate onEndDBTObject_GetRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDBTObject_GetRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTObject_GetTableDelegate;
        
        private EndOperationDelegate onEndDBTObject_GetTableDelegate;
        
        private System.Threading.SendOrPostCallback onDBTObject_GetTableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_AddRecordDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_AddRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_AddRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_GetRowDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_GetRowDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_GetRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_GetCurrentRowDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_GetCurrentRowDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_GetCurrentRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_SetCurrentRowDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_SetCurrentRowDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_SetCurrentRowCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_GetCurrentRowIndexDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_GetCurrentRowIndexDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_GetCurrentRowIndexCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_GetSizeDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_GetSizeDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_GetSizeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_InsertRecordDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_InsertRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_InsertRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_DeleteRecordDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_DeleteRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_DeleteRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDBTSlaveBuffered_RemoveAllDelegate;
        
        private EndOperationDelegate onEndDBTSlaveBuffered_RemoveAllDelegate;
        
        private System.Threading.SendOrPostCallback onDBTSlaveBuffered_RemoveAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginCAbstractFormDoc_ActivateTabDelegate;
        
        private EndOperationDelegate onEndCAbstractFormDoc_ActivateTabDelegate;
        
        private System.Threading.SendOrPostCallback onCAbstractFormDoc_ActivateTabCompletedDelegate;
        
        public TbGesClient() {
        }
        
        public TbGesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TbGesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbGesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TbGesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<WebProxyObj_ResizeColumnActionCompletedEventArgs> WebProxyObj_ResizeColumnActionCompleted;
        
        public event System.EventHandler<WebProxyObj_BETreeToggleExpandNodeActionCompletedEventArgs> WebProxyObj_BETreeToggleExpandNodeActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoHotLinkActionCompletedEventArgs> WebProxyObj_DoHotLinkActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoSpinActionCompletedEventArgs> WebProxyObj_DoSpinActionCompleted;
        
        public event System.EventHandler<WebProxyObj_ActivateTabPageActionCompletedEventArgs> WebProxyObj_ActivateTabPageActionCompleted;
        
        public event System.EventHandler<WebProxyObj_SelectNodeActionCompletedEventArgs> WebProxyObj_SelectNodeActionCompleted;
        
        public event System.EventHandler<WebProxyObj_ToggleNodeActionCompletedEventArgs> WebProxyObj_ToggleNodeActionCompleted;
        
        public event System.EventHandler<WebProxyObj_SelectRadarActionCompletedEventArgs> WebProxyObj_SelectRadarActionCompleted;
        
        public event System.EventHandler<WebProxyObj_MoveRowRadarActionCompletedEventArgs> WebProxyObj_MoveRowRadarActionCompleted;
        
        public event System.EventHandler<WebProxyObj_ClickContextMenuActionCompletedEventArgs> WebProxyObj_ClickContextMenuActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoMoveBodyPageActionCompletedEventArgs> WebProxyObj_DoMoveBodyPageActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoLinkActionCompletedEventArgs> WebProxyObj_DoLinkActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoHyperLinkActionCompletedEventArgs> WebProxyObj_DoHyperLinkActionCompleted;
        
        public event System.EventHandler<WebProxyObj_SelectRowActionCompletedEventArgs> WebProxyObj_SelectRowActionCompleted;
        
        public event System.EventHandler<WebProxyObj_GetThreadContextMessagesCompletedEventArgs> WebProxyObj_GetThreadContextMessagesCompleted;
        
        public event System.EventHandler<WebProxyObj_DoKeyActionCompletedEventArgs> WebProxyObj_DoKeyActionCompleted;
        
        public event System.EventHandler<WebProxyObj_RunDocumentActionCompletedEventArgs> WebProxyObj_RunDocumentActionCompleted;
        
        public event System.EventHandler<WebProxyObj_RunReportActionCompletedEventArgs> WebProxyObj_RunReportActionCompleted;
        
        public event System.EventHandler<WebProxyObj_RunFunctionActionCompletedEventArgs> WebProxyObj_RunFunctionActionCompleted;
        
        public event System.EventHandler<WebProxyObj_SelectIndexActionCompletedEventArgs> WebProxyObj_SelectIndexActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DblClickItemActionCompletedEventArgs> WebProxyObj_DblClickItemActionCompleted;
        
        public event System.EventHandler<WebProxyObj_NewRowActionCompletedEventArgs> WebProxyObj_NewRowActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoCommandActionCompletedEventArgs> WebProxyObj_DoCommandActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoUploadFileActionCompletedEventArgs> WebProxyObj_DoUploadFileActionCompleted;
        
        public event System.EventHandler<WebProxyObj_MoveToActionCompletedEventArgs> WebProxyObj_MoveToActionCompleted;
        
        public event System.EventHandler<WebProxyObj_DoCloseActionCompletedEventArgs> WebProxyObj_DoCloseActionCompleted;
        
        public event System.EventHandler<WebProxyObj_ResizeActionCompletedEventArgs> WebProxyObj_ResizeActionCompleted;
        
        public event System.EventHandler<CreateWebProxyCompletedEventArgs> CreateWebProxyCompleted;
        
        public event System.EventHandler<CreateWebProxyForThreadCompletedEventArgs> CreateWebProxyForThreadCompleted;
        
        public event System.EventHandler<WebProxyObj_GetThreadWindowsBinaryDescriptionCompletedEventArgs> WebProxyObj_GetThreadWindowsBinaryDescriptionCompleted;
        
        public event System.EventHandler<WebProxyObj_SetUserInteractionModeCompletedEventArgs> WebProxyObj_SetUserInteractionModeCompleted;
        
        public event System.EventHandler<WebProxyObj_GetCommandLinkUrlCompletedEventArgs> WebProxyObj_GetCommandLinkUrlCompleted;
        
        public event System.EventHandler<WebProxyObj_OpenDropdownBtnCompletedEventArgs> WebProxyObj_OpenDropdownBtnCompleted;
        
        public event System.EventHandler<WebProxyObj_DoContextMenuCompletedEventArgs> WebProxyObj_DoContextMenuCompleted;
        
        public event System.EventHandler<WebProxyObj_GetTreeViewAdvContextMenuCompletedEventArgs> WebProxyObj_GetTreeViewAdvContextMenuCompleted;
        
        public event System.EventHandler<WebProxyObj_GetContextMenuCompletedEventArgs> WebProxyObj_GetContextMenuCompleted;
        
        public event System.EventHandler<WebProxyObj_DoKeyCompletedEventArgs> WebProxyObj_DoKeyCompleted;
        
        public event System.EventHandler<WebProxyObj_GetComboItemsCompletedEventArgs> WebProxyObj_GetComboItemsCompleted;
        
        public event System.EventHandler<WebProxyObj_SetDateCompletedEventArgs> WebProxyObj_SetDateCompleted;
        
        public event System.EventHandler<GetApplicationDateCompletedEventArgs> GetApplicationDateCompleted;
        
        public event System.EventHandler<GetApplicationYearCompletedEventArgs> GetApplicationYearCompleted;
        
        public event System.EventHandler<GetApplicationMonthCompletedEventArgs> GetApplicationMonthCompleted;
        
        public event System.EventHandler<GetApplicationDayCompletedEventArgs> GetApplicationDayCompleted;
        
        public event System.EventHandler<EnableSoapFunctionExecutionControlCompletedEventArgs> EnableSoapFunctionExecutionControlCompleted;
        
        public event System.EventHandler<CanChangeLoginCompletedEventArgs> CanChangeLoginCompleted;
        
        public event System.EventHandler<ChangeLoginCompletedEventArgs> ChangeLoginCompleted;
        
        public event System.EventHandler<IsTBLockedCompletedEventArgs> IsTBLockedCompleted;
        
        public event System.EventHandler<LockTBCompletedEventArgs> LockTBCompleted;
        
        public event System.EventHandler<UnLockTBCompletedEventArgs> UnLockTBCompleted;
        
        public event System.EventHandler<ClearCacheCompletedEventArgs> ClearCacheCompleted;
        
        public event System.EventHandler<DisconnectCompanyCompletedEventArgs> DisconnectCompanyCompleted;
        
        public event System.EventHandler<ReconnectCompanyCompletedEventArgs> ReconnectCompanyCompleted;
        
        public event System.EventHandler<CanCloseLoginCompletedEventArgs> CanCloseLoginCompleted;
        
        public event System.EventHandler<CloseLoginCompletedEventArgs> CloseLoginCompleted;
        
        public event System.EventHandler<IsLoginValidCompletedEventArgs> IsLoginValidCompleted;
        
        public event System.EventHandler<CloseTBCompletedEventArgs> CloseTBCompleted;
        
        public event System.EventHandler<DestroyTBCompletedEventArgs> DestroyTBCompleted;
        
        public event System.EventHandler<AdminDocumentReportsCompletedEventArgs> AdminDocumentReportsCompleted;
        
        public event System.EventHandler<AdminDocumentProfilesCompletedEventArgs> AdminDocumentProfilesCompleted;
        
        public event System.EventHandler<GetHotlinkQueryCompletedEventArgs> GetHotlinkQueryCompleted;
        
        public event System.EventHandler<GetDocumentParametersCompletedEventArgs> GetDocumentParametersCompleted;
        
        public event System.EventHandler<GetReportParametersCompletedEventArgs> GetReportParametersCompleted;
        
        public event System.EventHandler<RunBatchInUnattendedModeCompletedEventArgs> RunBatchInUnattendedModeCompleted;
        
        public event System.EventHandler<RunReportInUnattendedModeCompletedEventArgs> RunReportInUnattendedModeCompleted;
        
        public event System.EventHandler<RunFunctionCompletedEventArgs> RunFunctionCompleted;
        
        public event System.EventHandler<RunFunctionInNewThreadCompletedEventArgs> RunFunctionInNewThreadCompleted;
        
        public event System.EventHandler<RunEditorCompletedEventArgs> RunEditorCompleted;
        
        public event System.EventHandler<CloseDocumentCompletedEventArgs> CloseDocumentCompleted;
        
        public event System.EventHandler<RunIconizedDocumentCompletedEventArgs> RunIconizedDocumentCompleted;
        
        public event System.EventHandler<CanCloseDocumentCompletedEventArgs> CanCloseDocumentCompleted;
        
        public event System.EventHandler<ExistDocumentCompletedEventArgs> ExistDocumentCompleted;
        
        public event System.EventHandler<DestroyDocumentCompletedEventArgs> DestroyDocumentCompleted;
        
        public event System.EventHandler<CloseAllDocumentsCompletedEventArgs> CloseAllDocumentsCompleted;
        
        public event System.EventHandler<GetOpenDocumentsCompletedEventArgs> GetOpenDocumentsCompleted;
        
        public event System.EventHandler<GetApplicationContextMessagesCompletedEventArgs> GetApplicationContextMessagesCompleted;
        
        public event System.EventHandler<GetLoginContextMessagesCompletedEventArgs> GetLoginContextMessagesCompleted;
        
        public event System.EventHandler<CanCloseTBCompletedEventArgs> CanCloseTBCompleted;
        
        public event System.EventHandler<KillThreadCompletedEventArgs> KillThreadCompleted;
        
        public event System.EventHandler<StopThreadCompletedEventArgs> StopThreadCompleted;
        
        public event System.EventHandler<CanStopThreadCompletedEventArgs> CanStopThreadCompleted;
        
        public event System.EventHandler<GetActiveThreadsCompletedEventArgs> GetActiveThreadsCompleted;
        
        public event System.EventHandler<GetLoginActiveThreadsCompletedEventArgs> GetLoginActiveThreadsCompleted;
        
        public event System.EventHandler<GetDocumentThreadsCompletedEventArgs> GetDocumentThreadsCompleted;
        
        public event System.EventHandler<SetMenuHandleCompletedEventArgs> SetMenuHandleCompleted;
        
        public event System.EventHandler<SetDocumentInForegroundCompletedEventArgs> SetDocumentInForegroundCompleted;
        
        public event System.EventHandler<GetCurrentUserCompletedEventArgs> GetCurrentUserCompleted;
        
        public event System.EventHandler<RunDocumentCompletedEventArgs> RunDocumentCompleted;
        
        public event System.EventHandler<RunReportCompletedEventArgs> RunReportCompleted;
        
        public event System.EventHandler<RunReportFromWoormInfoCompletedEventArgs> RunReportFromWoormInfoCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_PressToolbarButtonCompletedEventArgs> CAbstractFormDoc_PressToolbarButtonCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_GetMasterCompletedEventArgs> CAbstractFormDoc_GetMasterCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_GetHotLinkValueCompletedEventArgs> CAbstractFormDoc_GetHotLinkValueCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_GetFieldDataCompletedEventArgs> CAbstractFormDoc_GetFieldDataCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_GetFieldValueCompletedEventArgs> CAbstractFormDoc_GetFieldValueCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_SetFieldValueCompletedEventArgs> CAbstractFormDoc_SetFieldValueCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_GetConnectionCompletedEventArgs> CAbstractFormDoc_GetConnectionCompleted;
        
        public event System.EventHandler<HotKeyLink_SetParamValueCompletedEventArgs> HotKeyLink_SetParamValueCompleted;
        
        public event System.EventHandler<GetLoginsCompletedEventArgs> GetLoginsCompleted;
        
        public event System.EventHandler<SetUserInteractionModeCompletedEventArgs> SetUserInteractionModeCompleted;
        
        public event System.EventHandler<UseRemoteInterfaceCompletedEventArgs> UseRemoteInterfaceCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetProcessIDCompletedEventArgs> GetProcessIDCompleted;
        
        public event System.EventHandler<DBTObject_GetRecordCompletedEventArgs> DBTObject_GetRecordCompleted;
        
        public event System.EventHandler<DBTObject_GetTableCompletedEventArgs> DBTObject_GetTableCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_AddRecordCompletedEventArgs> DBTSlaveBuffered_AddRecordCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_GetRowCompletedEventArgs> DBTSlaveBuffered_GetRowCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_GetCurrentRowCompletedEventArgs> DBTSlaveBuffered_GetCurrentRowCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_SetCurrentRowCompletedEventArgs> DBTSlaveBuffered_SetCurrentRowCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_GetCurrentRowIndexCompletedEventArgs> DBTSlaveBuffered_GetCurrentRowIndexCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_GetSizeCompletedEventArgs> DBTSlaveBuffered_GetSizeCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_InsertRecordCompletedEventArgs> DBTSlaveBuffered_InsertRecordCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_DeleteRecordCompletedEventArgs> DBTSlaveBuffered_DeleteRecordCompleted;
        
        public event System.EventHandler<DBTSlaveBuffered_RemoveAllCompletedEventArgs> DBTSlaveBuffered_RemoveAllCompleted;
        
        public event System.EventHandler<CAbstractFormDoc_ActivateTabCompletedEventArgs> CAbstractFormDoc_ActivateTabCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_ResizeColumnAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn request) {
            return base.Channel.WebProxyObj_ResizeColumnAction(request);
        }
        
        public void WebProxyObj_ResizeColumnAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Width = Width;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_ResizeColumnAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_ResizeColumnAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_ResizeColumnAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_ResizeColumnAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Width = Width;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_ResizeColumnAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_ResizeColumnAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_ResizeColumnAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_ResizeColumnAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeColumnActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_ResizeColumnAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_ResizeColumnAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int Width = ((int)(inValues[3]));
            byte[] Description = ((byte[])(inValues[4]));
            return this.BeginWebProxyObj_ResizeColumnAction(HeaderInfo, handle, WindowId, Width, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_ResizeColumnAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_ResizeColumnAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_ResizeColumnActionCompleted(object state) {
            if ((this.WebProxyObj_ResizeColumnActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_ResizeColumnActionCompleted(this, new WebProxyObj_ResizeColumnActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_ResizeColumnActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, byte[] Description) {
            this.WebProxyObj_ResizeColumnActionAsync(HeaderInfo, handle, WindowId, Width, Description, null);
        }
        
        public void WebProxyObj_ResizeColumnActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_ResizeColumnActionDelegate == null)) {
                this.onBeginWebProxyObj_ResizeColumnActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_ResizeColumnAction);
            }
            if ((this.onEndWebProxyObj_ResizeColumnActionDelegate == null)) {
                this.onEndWebProxyObj_ResizeColumnActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_ResizeColumnAction);
            }
            if ((this.onWebProxyObj_ResizeColumnActionCompletedDelegate == null)) {
                this.onWebProxyObj_ResizeColumnActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_ResizeColumnActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_ResizeColumnActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Width,
                        Description}, this.onEndWebProxyObj_ResizeColumnActionDelegate, this.onWebProxyObj_ResizeColumnActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_BETreeToggleExpandNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn request) {
            return base.Channel.WebProxyObj_BETreeToggleExpandNodeAction(request);
        }
        
        public void WebProxyObj_BETreeToggleExpandNodeAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_BETreeToggleExpandNodeAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_BETreeToggleExpandNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_BETreeToggleExpandNodeAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_BETreeToggleExpandNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_BETreeToggleExpandNodeAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_BETreeToggleExpandNodeAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_BETreeToggleExpandNodeAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_BETreeToggleExpandNodeAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_BETreeToggleExpandNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_BETreeToggleExpandNodeAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_BETreeToggleExpandNodeAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            byte[] Description = ((byte[])(inValues[3]));
            return this.BeginWebProxyObj_BETreeToggleExpandNodeAction(HeaderInfo, handle, WindowId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_BETreeToggleExpandNodeAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_BETreeToggleExpandNodeAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_BETreeToggleExpandNodeActionCompleted(object state) {
            if ((this.WebProxyObj_BETreeToggleExpandNodeActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_BETreeToggleExpandNodeActionCompleted(this, new WebProxyObj_BETreeToggleExpandNodeActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_BETreeToggleExpandNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.WebProxyObj_BETreeToggleExpandNodeActionAsync(HeaderInfo, handle, WindowId, Description, null);
        }
        
        public void WebProxyObj_BETreeToggleExpandNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_BETreeToggleExpandNodeActionDelegate == null)) {
                this.onBeginWebProxyObj_BETreeToggleExpandNodeActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_BETreeToggleExpandNodeAction);
            }
            if ((this.onEndWebProxyObj_BETreeToggleExpandNodeActionDelegate == null)) {
                this.onEndWebProxyObj_BETreeToggleExpandNodeActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_BETreeToggleExpandNodeAction);
            }
            if ((this.onWebProxyObj_BETreeToggleExpandNodeActionCompletedDelegate == null)) {
                this.onWebProxyObj_BETreeToggleExpandNodeActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_BETreeToggleExpandNodeActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_BETreeToggleExpandNodeActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Description}, this.onEndWebProxyObj_BETreeToggleExpandNodeActionDelegate, this.onWebProxyObj_BETreeToggleExpandNodeActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoHotLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn request) {
            return base.Channel.WebProxyObj_DoHotLinkAction(request);
        }
        
        public void WebProxyObj_DoHotLinkAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool Lower, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Lower = Lower;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoHotLinkAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoHotLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoHotLinkAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoHotLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool Lower, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Lower = Lower;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoHotLinkAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoHotLinkAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoHotLinkAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoHotLinkAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHotLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoHotLinkAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoHotLinkAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            bool Lower = ((bool)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_DoHotLinkAction(HeaderInfo, handle, FromWindow, Value, WindowId, Lower, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoHotLinkAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoHotLinkAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoHotLinkActionCompleted(object state) {
            if ((this.WebProxyObj_DoHotLinkActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoHotLinkActionCompleted(this, new WebProxyObj_DoHotLinkActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoHotLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool Lower, byte[] Description) {
            this.WebProxyObj_DoHotLinkActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, Lower, Description, null);
        }
        
        public void WebProxyObj_DoHotLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool Lower, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoHotLinkActionDelegate == null)) {
                this.onBeginWebProxyObj_DoHotLinkActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoHotLinkAction);
            }
            if ((this.onEndWebProxyObj_DoHotLinkActionDelegate == null)) {
                this.onEndWebProxyObj_DoHotLinkActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoHotLinkAction);
            }
            if ((this.onWebProxyObj_DoHotLinkActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoHotLinkActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoHotLinkActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoHotLinkActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        Lower,
                        Description}, this.onEndWebProxyObj_DoHotLinkActionDelegate, this.onWebProxyObj_DoHotLinkActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoSpinAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn request) {
            return base.Channel.WebProxyObj_DoSpinAction(request);
        }
        
        public void WebProxyObj_DoSpinAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool clickDown, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.clickDown = clickDown;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoSpinAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoSpinAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoSpinAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoSpinAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool clickDown, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.clickDown = clickDown;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoSpinAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoSpinAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoSpinAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoSpinAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoSpinActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoSpinAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoSpinAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            bool clickDown = ((bool)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_DoSpinAction(HeaderInfo, handle, FromWindow, Value, WindowId, clickDown, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoSpinAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoSpinAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoSpinActionCompleted(object state) {
            if ((this.WebProxyObj_DoSpinActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoSpinActionCompleted(this, new WebProxyObj_DoSpinActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoSpinActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool clickDown, byte[] Description) {
            this.WebProxyObj_DoSpinActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, clickDown, Description, null);
        }
        
        public void WebProxyObj_DoSpinActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, bool clickDown, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoSpinActionDelegate == null)) {
                this.onBeginWebProxyObj_DoSpinActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoSpinAction);
            }
            if ((this.onEndWebProxyObj_DoSpinActionDelegate == null)) {
                this.onEndWebProxyObj_DoSpinActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoSpinAction);
            }
            if ((this.onWebProxyObj_DoSpinActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoSpinActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoSpinActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoSpinActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        clickDown,
                        Description}, this.onEndWebProxyObj_DoSpinActionDelegate, this.onWebProxyObj_DoSpinActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_ActivateTabPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn request) {
            return base.Channel.WebProxyObj_ActivateTabPageAction(request);
        }
        
        public void WebProxyObj_ActivateTabPageAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string TabId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.TabId = TabId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_ActivateTabPageAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_ActivateTabPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_ActivateTabPageAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_ActivateTabPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string TabId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.TabId = TabId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_ActivateTabPageAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_ActivateTabPageAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_ActivateTabPageAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_ActivateTabPageAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ActivateTabPageActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_ActivateTabPageAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_ActivateTabPageAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            string TabId = ((string)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_ActivateTabPageAction(HeaderInfo, handle, FromWindow, Value, WindowId, TabId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_ActivateTabPageAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_ActivateTabPageAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_ActivateTabPageActionCompleted(object state) {
            if ((this.WebProxyObj_ActivateTabPageActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_ActivateTabPageActionCompleted(this, new WebProxyObj_ActivateTabPageActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_ActivateTabPageActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string TabId, byte[] Description) {
            this.WebProxyObj_ActivateTabPageActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, TabId, Description, null);
        }
        
        public void WebProxyObj_ActivateTabPageActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string TabId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_ActivateTabPageActionDelegate == null)) {
                this.onBeginWebProxyObj_ActivateTabPageActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_ActivateTabPageAction);
            }
            if ((this.onEndWebProxyObj_ActivateTabPageActionDelegate == null)) {
                this.onEndWebProxyObj_ActivateTabPageActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_ActivateTabPageAction);
            }
            if ((this.onWebProxyObj_ActivateTabPageActionCompletedDelegate == null)) {
                this.onWebProxyObj_ActivateTabPageActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_ActivateTabPageActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_ActivateTabPageActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        TabId,
                        Description}, this.onEndWebProxyObj_ActivateTabPageActionDelegate, this.onWebProxyObj_ActivateTabPageActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SelectNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn request) {
            return base.Channel.WebProxyObj_SelectNodeAction(request);
        }
        
        public void WebProxyObj_SelectNodeAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.sItem = sItem;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SelectNodeAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SelectNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SelectNodeAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SelectNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.sItem = sItem;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SelectNodeAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SelectNodeAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SelectNodeAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SelectNodeAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SelectNodeAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SelectNodeAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            string sItem = ((string)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_SelectNodeAction(HeaderInfo, handle, FromWindow, Value, WindowId, sItem, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SelectNodeAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SelectNodeAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_SelectNodeActionCompleted(object state) {
            if ((this.WebProxyObj_SelectNodeActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SelectNodeActionCompleted(this, new WebProxyObj_SelectNodeActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SelectNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description) {
            this.WebProxyObj_SelectNodeActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, sItem, Description, null);
        }
        
        public void WebProxyObj_SelectNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_SelectNodeActionDelegate == null)) {
                this.onBeginWebProxyObj_SelectNodeActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SelectNodeAction);
            }
            if ((this.onEndWebProxyObj_SelectNodeActionDelegate == null)) {
                this.onEndWebProxyObj_SelectNodeActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SelectNodeAction);
            }
            if ((this.onWebProxyObj_SelectNodeActionCompletedDelegate == null)) {
                this.onWebProxyObj_SelectNodeActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SelectNodeActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SelectNodeActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        sItem,
                        Description}, this.onEndWebProxyObj_SelectNodeActionDelegate, this.onWebProxyObj_SelectNodeActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_ToggleNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn request) {
            return base.Channel.WebProxyObj_ToggleNodeAction(request);
        }
        
        public void WebProxyObj_ToggleNodeAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.sItem = sItem;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_ToggleNodeAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_ToggleNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_ToggleNodeAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_ToggleNodeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.sItem = sItem;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_ToggleNodeAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_ToggleNodeAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_ToggleNodeAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_ToggleNodeAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ToggleNodeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_ToggleNodeAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_ToggleNodeAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            string sItem = ((string)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_ToggleNodeAction(HeaderInfo, handle, FromWindow, Value, WindowId, sItem, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_ToggleNodeAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_ToggleNodeAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_ToggleNodeActionCompleted(object state) {
            if ((this.WebProxyObj_ToggleNodeActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_ToggleNodeActionCompleted(this, new WebProxyObj_ToggleNodeActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_ToggleNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description) {
            this.WebProxyObj_ToggleNodeActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, sItem, Description, null);
        }
        
        public void WebProxyObj_ToggleNodeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, string sItem, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_ToggleNodeActionDelegate == null)) {
                this.onBeginWebProxyObj_ToggleNodeActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_ToggleNodeAction);
            }
            if ((this.onEndWebProxyObj_ToggleNodeActionDelegate == null)) {
                this.onEndWebProxyObj_ToggleNodeActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_ToggleNodeAction);
            }
            if ((this.onWebProxyObj_ToggleNodeActionCompletedDelegate == null)) {
                this.onWebProxyObj_ToggleNodeActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_ToggleNodeActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_ToggleNodeActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        sItem,
                        Description}, this.onEndWebProxyObj_ToggleNodeActionDelegate, this.onWebProxyObj_ToggleNodeActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SelectRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn request) {
            return base.Channel.WebProxyObj_SelectRadarAction(request);
        }
        
        public void WebProxyObj_SelectRadarAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SelectRadarAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SelectRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SelectRadarAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SelectRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SelectRadarAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SelectRadarAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SelectRadarAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SelectRadarAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRadarActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SelectRadarAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SelectRadarAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int Index = ((int)(inValues[3]));
            byte[] Description = ((byte[])(inValues[4]));
            return this.BeginWebProxyObj_SelectRadarAction(HeaderInfo, handle, WindowId, Index, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SelectRadarAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SelectRadarAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_SelectRadarActionCompleted(object state) {
            if ((this.WebProxyObj_SelectRadarActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SelectRadarActionCompleted(this, new WebProxyObj_SelectRadarActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SelectRadarActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description) {
            this.WebProxyObj_SelectRadarActionAsync(HeaderInfo, handle, WindowId, Index, Description, null);
        }
        
        public void WebProxyObj_SelectRadarActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_SelectRadarActionDelegate == null)) {
                this.onBeginWebProxyObj_SelectRadarActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SelectRadarAction);
            }
            if ((this.onEndWebProxyObj_SelectRadarActionDelegate == null)) {
                this.onEndWebProxyObj_SelectRadarActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SelectRadarAction);
            }
            if ((this.onWebProxyObj_SelectRadarActionCompletedDelegate == null)) {
                this.onWebProxyObj_SelectRadarActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SelectRadarActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SelectRadarActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Index,
                        Description}, this.onEndWebProxyObj_SelectRadarActionDelegate, this.onWebProxyObj_SelectRadarActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_MoveRowRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn request) {
            return base.Channel.WebProxyObj_MoveRowRadarAction(request);
        }
        
        public void WebProxyObj_MoveRowRadarAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_MoveRowRadarAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_MoveRowRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_MoveRowRadarAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_MoveRowRadarAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_MoveRowRadarAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_MoveRowRadarAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_MoveRowRadarAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_MoveRowRadarAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveRowRadarActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_MoveRowRadarAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_MoveRowRadarAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int Index = ((int)(inValues[3]));
            byte[] Description = ((byte[])(inValues[4]));
            return this.BeginWebProxyObj_MoveRowRadarAction(HeaderInfo, handle, WindowId, Index, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_MoveRowRadarAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_MoveRowRadarAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_MoveRowRadarActionCompleted(object state) {
            if ((this.WebProxyObj_MoveRowRadarActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_MoveRowRadarActionCompleted(this, new WebProxyObj_MoveRowRadarActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_MoveRowRadarActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description) {
            this.WebProxyObj_MoveRowRadarActionAsync(HeaderInfo, handle, WindowId, Index, Description, null);
        }
        
        public void WebProxyObj_MoveRowRadarActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Index, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_MoveRowRadarActionDelegate == null)) {
                this.onBeginWebProxyObj_MoveRowRadarActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_MoveRowRadarAction);
            }
            if ((this.onEndWebProxyObj_MoveRowRadarActionDelegate == null)) {
                this.onEndWebProxyObj_MoveRowRadarActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_MoveRowRadarAction);
            }
            if ((this.onWebProxyObj_MoveRowRadarActionCompletedDelegate == null)) {
                this.onWebProxyObj_MoveRowRadarActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_MoveRowRadarActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_MoveRowRadarActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Index,
                        Description}, this.onEndWebProxyObj_MoveRowRadarActionDelegate, this.onWebProxyObj_MoveRowRadarActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_ClickContextMenuAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn request) {
            return base.Channel.WebProxyObj_ClickContextMenuAction(request);
        }
        
        public void WebProxyObj_ClickContextMenuAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int ItemID, ref int CommandType, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.ItemID = ItemID;
            inValue.CommandType = CommandType;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_ClickContextMenuAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            CommandType = retVal.CommandType;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_ClickContextMenuAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_ClickContextMenuAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_ClickContextMenuAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int ItemID, int CommandType, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.ItemID = ItemID;
            inValue.CommandType = CommandType;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_ClickContextMenuAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_ClickContextMenuAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_ClickContextMenuAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_ClickContextMenuAction(System.IAsyncResult result, out int CommandType, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ClickContextMenuActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_ClickContextMenuAction(result);
            CommandType = retVal.CommandType;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_ClickContextMenuAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int ItemID = ((int)(inValues[3]));
            int CommandType = ((int)(inValues[4]));
            byte[] Description = ((byte[])(inValues[5]));
            return this.BeginWebProxyObj_ClickContextMenuAction(HeaderInfo, handle, WindowId, ItemID, CommandType, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_ClickContextMenuAction(System.IAsyncResult result) {
            int CommandType = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_ClickContextMenuAction(result, out CommandType, out Description);
            return new object[] {
                    CommandType,
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_ClickContextMenuActionCompleted(object state) {
            if ((this.WebProxyObj_ClickContextMenuActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_ClickContextMenuActionCompleted(this, new WebProxyObj_ClickContextMenuActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_ClickContextMenuActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int ItemID, int CommandType, byte[] Description) {
            this.WebProxyObj_ClickContextMenuActionAsync(HeaderInfo, handle, WindowId, ItemID, CommandType, Description, null);
        }
        
        public void WebProxyObj_ClickContextMenuActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int ItemID, int CommandType, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_ClickContextMenuActionDelegate == null)) {
                this.onBeginWebProxyObj_ClickContextMenuActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_ClickContextMenuAction);
            }
            if ((this.onEndWebProxyObj_ClickContextMenuActionDelegate == null)) {
                this.onEndWebProxyObj_ClickContextMenuActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_ClickContextMenuAction);
            }
            if ((this.onWebProxyObj_ClickContextMenuActionCompletedDelegate == null)) {
                this.onWebProxyObj_ClickContextMenuActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_ClickContextMenuActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_ClickContextMenuActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        ItemID,
                        CommandType,
                        Description}, this.onEndWebProxyObj_ClickContextMenuActionDelegate, this.onWebProxyObj_ClickContextMenuActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoMoveBodyPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn request) {
            return base.Channel.WebProxyObj_DoMoveBodyPageAction(request);
        }
        
        public void WebProxyObj_DoMoveBodyPageAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool Next, string FromWindow, string Value, string WindowId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Next = Next;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoMoveBodyPageAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoMoveBodyPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoMoveBodyPageAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoMoveBodyPageAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool Next, string FromWindow, string Value, string WindowId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Next = Next;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoMoveBodyPageAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoMoveBodyPageAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoMoveBodyPageAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoMoveBodyPageAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoMoveBodyPageActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoMoveBodyPageAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoMoveBodyPageAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool Next = ((bool)(inValues[2]));
            string FromWindow = ((string)(inValues[3]));
            string Value = ((string)(inValues[4]));
            string WindowId = ((string)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_DoMoveBodyPageAction(HeaderInfo, handle, Next, FromWindow, Value, WindowId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoMoveBodyPageAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoMoveBodyPageAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoMoveBodyPageActionCompleted(object state) {
            if ((this.WebProxyObj_DoMoveBodyPageActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoMoveBodyPageActionCompleted(this, new WebProxyObj_DoMoveBodyPageActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoMoveBodyPageActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool Next, string FromWindow, string Value, string WindowId, byte[] Description) {
            this.WebProxyObj_DoMoveBodyPageActionAsync(HeaderInfo, handle, Next, FromWindow, Value, WindowId, Description, null);
        }
        
        public void WebProxyObj_DoMoveBodyPageActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool Next, string FromWindow, string Value, string WindowId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoMoveBodyPageActionDelegate == null)) {
                this.onBeginWebProxyObj_DoMoveBodyPageActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoMoveBodyPageAction);
            }
            if ((this.onEndWebProxyObj_DoMoveBodyPageActionDelegate == null)) {
                this.onEndWebProxyObj_DoMoveBodyPageActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoMoveBodyPageAction);
            }
            if ((this.onWebProxyObj_DoMoveBodyPageActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoMoveBodyPageActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoMoveBodyPageActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoMoveBodyPageActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        Next,
                        FromWindow,
                        Value,
                        WindowId,
                        Description}, this.onEndWebProxyObj_DoMoveBodyPageActionDelegate, this.onWebProxyObj_DoMoveBodyPageActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn request) {
            return base.Channel.WebProxyObj_DoLinkAction(request);
        }
        
        public void WebProxyObj_DoLinkAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nAlias, int nRow, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.nAlias = nAlias;
            inValue.nRow = nRow;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoLinkAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoLinkAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nAlias, int nRow, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.nAlias = nAlias;
            inValue.nRow = nRow;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoLinkAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoLinkAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoLinkAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoLinkAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoLinkAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoLinkAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int nAlias = ((int)(inValues[5]));
            int nRow = ((int)(inValues[6]));
            byte[] Description = ((byte[])(inValues[7]));
            return this.BeginWebProxyObj_DoLinkAction(HeaderInfo, handle, FromWindow, Value, WindowId, nAlias, nRow, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoLinkAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoLinkAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoLinkActionCompleted(object state) {
            if ((this.WebProxyObj_DoLinkActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoLinkActionCompleted(this, new WebProxyObj_DoLinkActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nAlias, int nRow, byte[] Description) {
            this.WebProxyObj_DoLinkActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, nAlias, nRow, Description, null);
        }
        
        public void WebProxyObj_DoLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nAlias, int nRow, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoLinkActionDelegate == null)) {
                this.onBeginWebProxyObj_DoLinkActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoLinkAction);
            }
            if ((this.onEndWebProxyObj_DoLinkActionDelegate == null)) {
                this.onEndWebProxyObj_DoLinkActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoLinkAction);
            }
            if ((this.onWebProxyObj_DoLinkActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoLinkActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoLinkActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoLinkActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        nAlias,
                        nRow,
                        Description}, this.onEndWebProxyObj_DoLinkActionDelegate, this.onWebProxyObj_DoLinkActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoHyperLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn request) {
            return base.Channel.WebProxyObj_DoHyperLinkAction(request);
        }
        
        public void WebProxyObj_DoHyperLinkAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoHyperLinkAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoHyperLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoHyperLinkAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoHyperLinkAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoHyperLinkAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoHyperLinkAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoHyperLinkAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoHyperLinkAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoHyperLinkActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoHyperLinkAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoHyperLinkAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            byte[] Description = ((byte[])(inValues[3]));
            return this.BeginWebProxyObj_DoHyperLinkAction(HeaderInfo, handle, WindowId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoHyperLinkAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoHyperLinkAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoHyperLinkActionCompleted(object state) {
            if ((this.WebProxyObj_DoHyperLinkActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoHyperLinkActionCompleted(this, new WebProxyObj_DoHyperLinkActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoHyperLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.WebProxyObj_DoHyperLinkActionAsync(HeaderInfo, handle, WindowId, Description, null);
        }
        
        public void WebProxyObj_DoHyperLinkActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoHyperLinkActionDelegate == null)) {
                this.onBeginWebProxyObj_DoHyperLinkActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoHyperLinkAction);
            }
            if ((this.onEndWebProxyObj_DoHyperLinkActionDelegate == null)) {
                this.onEndWebProxyObj_DoHyperLinkActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoHyperLinkAction);
            }
            if ((this.onWebProxyObj_DoHyperLinkActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoHyperLinkActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoHyperLinkActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoHyperLinkActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Description}, this.onEndWebProxyObj_DoHyperLinkActionDelegate, this.onWebProxyObj_DoHyperLinkActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SelectRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn request) {
            return base.Channel.WebProxyObj_SelectRowAction(request);
        }
        
        public void WebProxyObj_SelectRowAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SelectRowAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SelectRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SelectRowAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SelectRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SelectRowAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SelectRowAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SelectRowAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SelectRowAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectRowActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SelectRowAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SelectRowAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            byte[] Description = ((byte[])(inValues[3]));
            return this.BeginWebProxyObj_SelectRowAction(HeaderInfo, handle, WindowId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SelectRowAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SelectRowAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_SelectRowActionCompleted(object state) {
            if ((this.WebProxyObj_SelectRowActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SelectRowActionCompleted(this, new WebProxyObj_SelectRowActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SelectRowActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description) {
            this.WebProxyObj_SelectRowActionAsync(HeaderInfo, handle, WindowId, Description, null);
        }
        
        public void WebProxyObj_SelectRowActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_SelectRowActionDelegate == null)) {
                this.onBeginWebProxyObj_SelectRowActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SelectRowAction);
            }
            if ((this.onEndWebProxyObj_SelectRowActionDelegate == null)) {
                this.onEndWebProxyObj_SelectRowActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SelectRowAction);
            }
            if ((this.onWebProxyObj_SelectRowActionCompletedDelegate == null)) {
                this.onWebProxyObj_SelectRowActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SelectRowActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SelectRowActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Description}, this.onEndWebProxyObj_SelectRowActionDelegate, this.onWebProxyObj_SelectRowActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetThreadContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn request) {
            return base.Channel.WebProxyObj_GetThreadContextMessages(request);
        }
        
        public void WebProxyObj_GetThreadContextMessages(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool clearMessages, ref string[] messages, ref int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetThreadContextMessages(inValue);
            HeaderInfo = retVal.HeaderInfo;
            messages = retVal.messages;
            types = retVal.types;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetThreadContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetThreadContextMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetThreadContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool clearMessages, string[] messages, int[] types, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetThreadContextMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetThreadContextMessages(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetThreadContextMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetThreadContextMessages(System.IAsyncResult result, out string[] messages, out int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetThreadContextMessages(result);
            messages = retVal.messages;
            types = retVal.types;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetThreadContextMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            bool clearMessages = ((bool)(inValues[2]));
            string[] messages = ((string[])(inValues[3]));
            int[] types = ((int[])(inValues[4]));
            return this.BeginWebProxyObj_GetThreadContextMessages(HeaderInfo, handle, clearMessages, messages, types, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetThreadContextMessages(System.IAsyncResult result) {
            string[] messages = this.GetDefaultValueForInitialization<string[]>();
            int[] types = this.GetDefaultValueForInitialization<int[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetThreadContextMessages(result, out messages, out types);
            return new object[] {
                    messages,
                    types,
                    retVal};
        }
        
        private void OnWebProxyObj_GetThreadContextMessagesCompleted(object state) {
            if ((this.WebProxyObj_GetThreadContextMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetThreadContextMessagesCompleted(this, new WebProxyObj_GetThreadContextMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetThreadContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool clearMessages, string[] messages, int[] types) {
            this.WebProxyObj_GetThreadContextMessagesAsync(HeaderInfo, handle, clearMessages, messages, types, null);
        }
        
        public void WebProxyObj_GetThreadContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, bool clearMessages, string[] messages, int[] types, object userState) {
            if ((this.onBeginWebProxyObj_GetThreadContextMessagesDelegate == null)) {
                this.onBeginWebProxyObj_GetThreadContextMessagesDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetThreadContextMessages);
            }
            if ((this.onEndWebProxyObj_GetThreadContextMessagesDelegate == null)) {
                this.onEndWebProxyObj_GetThreadContextMessagesDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetThreadContextMessages);
            }
            if ((this.onWebProxyObj_GetThreadContextMessagesCompletedDelegate == null)) {
                this.onWebProxyObj_GetThreadContextMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetThreadContextMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetThreadContextMessagesDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        clearMessages,
                        messages,
                        types}, this.onEndWebProxyObj_GetThreadContextMessagesDelegate, this.onWebProxyObj_GetThreadContextMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoKeyAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn request) {
            return base.Channel.WebProxyObj_DoKeyAction(request);
        }
        
        public void WebProxyObj_DoKeyAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.keyCode = keyCode;
            inValue.bShift = bShift;
            inValue.bCtrl = bCtrl;
            inValue.bAlt = bAlt;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoKeyAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoKeyAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoKeyAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoKeyAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.keyCode = keyCode;
            inValue.bShift = bShift;
            inValue.bCtrl = bCtrl;
            inValue.bAlt = bAlt;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoKeyAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoKeyAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoKeyAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoKeyAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoKeyAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoKeyAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int keyCode = ((int)(inValues[3]));
            bool bShift = ((bool)(inValues[4]));
            bool bCtrl = ((bool)(inValues[5]));
            bool bAlt = ((bool)(inValues[6]));
            byte[] Description = ((byte[])(inValues[7]));
            return this.BeginWebProxyObj_DoKeyAction(HeaderInfo, handle, WindowId, keyCode, bShift, bCtrl, bAlt, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoKeyAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoKeyAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoKeyActionCompleted(object state) {
            if ((this.WebProxyObj_DoKeyActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoKeyActionCompleted(this, new WebProxyObj_DoKeyActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoKeyActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, byte[] Description) {
            this.WebProxyObj_DoKeyActionAsync(HeaderInfo, handle, WindowId, keyCode, bShift, bCtrl, bAlt, Description, null);
        }
        
        public void WebProxyObj_DoKeyActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoKeyActionDelegate == null)) {
                this.onBeginWebProxyObj_DoKeyActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoKeyAction);
            }
            if ((this.onEndWebProxyObj_DoKeyActionDelegate == null)) {
                this.onEndWebProxyObj_DoKeyActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoKeyAction);
            }
            if ((this.onWebProxyObj_DoKeyActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoKeyActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoKeyActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoKeyActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        keyCode,
                        bShift,
                        bCtrl,
                        bAlt,
                        Description}, this.onEndWebProxyObj_DoKeyActionDelegate, this.onWebProxyObj_DoKeyActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_RunDocumentAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn request) {
            return base.Channel.WebProxyObj_RunDocumentAction(request);
        }
        
        public void WebProxyObj_RunDocumentAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string documentNamespace, ref int DocHandle, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.documentNamespace = documentNamespace;
            inValue.DocHandle = DocHandle;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_RunDocumentAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            DocHandle = retVal.DocHandle;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_RunDocumentAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_RunDocumentAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_RunDocumentAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string documentNamespace, int DocHandle, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.documentNamespace = documentNamespace;
            inValue.DocHandle = DocHandle;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_RunDocumentAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_RunDocumentAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_RunDocumentAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_RunDocumentAction(System.IAsyncResult result, out int DocHandle, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunDocumentActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_RunDocumentAction(result);
            DocHandle = retVal.DocHandle;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_RunDocumentAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string documentNamespace = ((string)(inValues[2]));
            int DocHandle = ((int)(inValues[3]));
            byte[] Description = ((byte[])(inValues[4]));
            return this.BeginWebProxyObj_RunDocumentAction(HeaderInfo, handle, documentNamespace, DocHandle, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_RunDocumentAction(System.IAsyncResult result) {
            int DocHandle = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_RunDocumentAction(result, out DocHandle, out Description);
            return new object[] {
                    DocHandle,
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_RunDocumentActionCompleted(object state) {
            if ((this.WebProxyObj_RunDocumentActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_RunDocumentActionCompleted(this, new WebProxyObj_RunDocumentActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_RunDocumentActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string documentNamespace, int DocHandle, byte[] Description) {
            this.WebProxyObj_RunDocumentActionAsync(HeaderInfo, handle, documentNamespace, DocHandle, Description, null);
        }
        
        public void WebProxyObj_RunDocumentActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string documentNamespace, int DocHandle, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_RunDocumentActionDelegate == null)) {
                this.onBeginWebProxyObj_RunDocumentActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_RunDocumentAction);
            }
            if ((this.onEndWebProxyObj_RunDocumentActionDelegate == null)) {
                this.onEndWebProxyObj_RunDocumentActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_RunDocumentAction);
            }
            if ((this.onWebProxyObj_RunDocumentActionCompletedDelegate == null)) {
                this.onWebProxyObj_RunDocumentActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_RunDocumentActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_RunDocumentActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        documentNamespace,
                        DocHandle,
                        Description}, this.onEndWebProxyObj_RunDocumentActionDelegate, this.onWebProxyObj_RunDocumentActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_RunReportAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn request) {
            return base.Channel.WebProxyObj_RunReportAction(request);
        }
        
        public void WebProxyObj_RunReportAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, ref int DocHandle, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.reportNamespace = reportNamespace;
            inValue.DocHandle = DocHandle;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_RunReportAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            DocHandle = retVal.DocHandle;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_RunReportAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_RunReportAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_RunReportAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, int DocHandle, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.reportNamespace = reportNamespace;
            inValue.DocHandle = DocHandle;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_RunReportAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_RunReportAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_RunReportAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_RunReportAction(System.IAsyncResult result, out int DocHandle, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunReportActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_RunReportAction(result);
            DocHandle = retVal.DocHandle;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_RunReportAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string reportNamespace = ((string)(inValues[2]));
            int DocHandle = ((int)(inValues[3]));
            byte[] Description = ((byte[])(inValues[4]));
            return this.BeginWebProxyObj_RunReportAction(HeaderInfo, handle, reportNamespace, DocHandle, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_RunReportAction(System.IAsyncResult result) {
            int DocHandle = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_RunReportAction(result, out DocHandle, out Description);
            return new object[] {
                    DocHandle,
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_RunReportActionCompleted(object state) {
            if ((this.WebProxyObj_RunReportActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_RunReportActionCompleted(this, new WebProxyObj_RunReportActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_RunReportActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, int DocHandle, byte[] Description) {
            this.WebProxyObj_RunReportActionAsync(HeaderInfo, handle, reportNamespace, DocHandle, Description, null);
        }
        
        public void WebProxyObj_RunReportActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string reportNamespace, int DocHandle, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_RunReportActionDelegate == null)) {
                this.onBeginWebProxyObj_RunReportActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_RunReportAction);
            }
            if ((this.onEndWebProxyObj_RunReportActionDelegate == null)) {
                this.onEndWebProxyObj_RunReportActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_RunReportAction);
            }
            if ((this.onWebProxyObj_RunReportActionCompletedDelegate == null)) {
                this.onWebProxyObj_RunReportActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_RunReportActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_RunReportActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        reportNamespace,
                        DocHandle,
                        Description}, this.onEndWebProxyObj_RunReportActionDelegate, this.onWebProxyObj_RunReportActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_RunFunctionAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn request) {
            return base.Channel.WebProxyObj_RunFunctionAction(request);
        }
        
        public void WebProxyObj_RunFunctionAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string functionNamespace, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.functionNamespace = functionNamespace;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_RunFunctionAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_RunFunctionAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_RunFunctionAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_RunFunctionAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string functionNamespace, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.functionNamespace = functionNamespace;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_RunFunctionAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_RunFunctionAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_RunFunctionAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_RunFunctionAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_RunFunctionActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_RunFunctionAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_RunFunctionAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string functionNamespace = ((string)(inValues[2]));
            byte[] Description = ((byte[])(inValues[3]));
            return this.BeginWebProxyObj_RunFunctionAction(HeaderInfo, handle, functionNamespace, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_RunFunctionAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_RunFunctionAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_RunFunctionActionCompleted(object state) {
            if ((this.WebProxyObj_RunFunctionActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_RunFunctionActionCompleted(this, new WebProxyObj_RunFunctionActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_RunFunctionActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string functionNamespace, byte[] Description) {
            this.WebProxyObj_RunFunctionActionAsync(HeaderInfo, handle, functionNamespace, Description, null);
        }
        
        public void WebProxyObj_RunFunctionActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string functionNamespace, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_RunFunctionActionDelegate == null)) {
                this.onBeginWebProxyObj_RunFunctionActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_RunFunctionAction);
            }
            if ((this.onEndWebProxyObj_RunFunctionActionDelegate == null)) {
                this.onEndWebProxyObj_RunFunctionActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_RunFunctionAction);
            }
            if ((this.onWebProxyObj_RunFunctionActionCompletedDelegate == null)) {
                this.onWebProxyObj_RunFunctionActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_RunFunctionActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_RunFunctionActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        functionNamespace,
                        Description}, this.onEndWebProxyObj_RunFunctionActionDelegate, this.onWebProxyObj_RunFunctionActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SelectIndexAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn request) {
            return base.Channel.WebProxyObj_SelectIndexAction(request);
        }
        
        public void WebProxyObj_SelectIndexAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SelectIndexAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SelectIndexAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SelectIndexAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SelectIndexAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SelectIndexAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SelectIndexAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SelectIndexAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SelectIndexAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SelectIndexActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SelectIndexAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SelectIndexAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int Index = ((int)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_SelectIndexAction(HeaderInfo, handle, FromWindow, Value, WindowId, Index, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SelectIndexAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SelectIndexAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_SelectIndexActionCompleted(object state) {
            if ((this.WebProxyObj_SelectIndexActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SelectIndexActionCompleted(this, new WebProxyObj_SelectIndexActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SelectIndexActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description) {
            this.WebProxyObj_SelectIndexActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, Index, Description, null);
        }
        
        public void WebProxyObj_SelectIndexActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_SelectIndexActionDelegate == null)) {
                this.onBeginWebProxyObj_SelectIndexActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SelectIndexAction);
            }
            if ((this.onEndWebProxyObj_SelectIndexActionDelegate == null)) {
                this.onEndWebProxyObj_SelectIndexActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SelectIndexAction);
            }
            if ((this.onWebProxyObj_SelectIndexActionCompletedDelegate == null)) {
                this.onWebProxyObj_SelectIndexActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SelectIndexActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SelectIndexActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        Index,
                        Description}, this.onEndWebProxyObj_SelectIndexActionDelegate, this.onWebProxyObj_SelectIndexActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DblClickItemAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn request) {
            return base.Channel.WebProxyObj_DblClickItemAction(request);
        }
        
        public void WebProxyObj_DblClickItemAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DblClickItemAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DblClickItemAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DblClickItemAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DblClickItemAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Index = Index;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DblClickItemAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DblClickItemAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DblClickItemAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DblClickItemAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DblClickItemActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DblClickItemAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DblClickItemAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int Index = ((int)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_DblClickItemAction(HeaderInfo, handle, FromWindow, Value, WindowId, Index, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DblClickItemAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DblClickItemAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DblClickItemActionCompleted(object state) {
            if ((this.WebProxyObj_DblClickItemActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DblClickItemActionCompleted(this, new WebProxyObj_DblClickItemActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DblClickItemActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description) {
            this.WebProxyObj_DblClickItemActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, Index, Description, null);
        }
        
        public void WebProxyObj_DblClickItemActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int Index, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DblClickItemActionDelegate == null)) {
                this.onBeginWebProxyObj_DblClickItemActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DblClickItemAction);
            }
            if ((this.onEndWebProxyObj_DblClickItemActionDelegate == null)) {
                this.onEndWebProxyObj_DblClickItemActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DblClickItemAction);
            }
            if ((this.onWebProxyObj_DblClickItemActionCompletedDelegate == null)) {
                this.onWebProxyObj_DblClickItemActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DblClickItemActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DblClickItemActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        Index,
                        Description}, this.onEndWebProxyObj_DblClickItemActionDelegate, this.onWebProxyObj_DblClickItemActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_NewRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn request) {
            return base.Channel.WebProxyObj_NewRowAction(request);
        }
        
        public void WebProxyObj_NewRowAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nCol, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.nCol = nCol;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_NewRowAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_NewRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_NewRowAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_NewRowAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nCol, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.nCol = nCol;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_NewRowAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_NewRowAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_NewRowAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_NewRowAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_NewRowActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_NewRowAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_NewRowAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int nCol = ((int)(inValues[5]));
            byte[] Description = ((byte[])(inValues[6]));
            return this.BeginWebProxyObj_NewRowAction(HeaderInfo, handle, FromWindow, Value, WindowId, nCol, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_NewRowAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_NewRowAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_NewRowActionCompleted(object state) {
            if ((this.WebProxyObj_NewRowActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_NewRowActionCompleted(this, new WebProxyObj_NewRowActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_NewRowActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nCol, byte[] Description) {
            this.WebProxyObj_NewRowActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, nCol, Description, null);
        }
        
        public void WebProxyObj_NewRowActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int nCol, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_NewRowActionDelegate == null)) {
                this.onBeginWebProxyObj_NewRowActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_NewRowAction);
            }
            if ((this.onEndWebProxyObj_NewRowActionDelegate == null)) {
                this.onEndWebProxyObj_NewRowActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_NewRowAction);
            }
            if ((this.onWebProxyObj_NewRowActionCompletedDelegate == null)) {
                this.onWebProxyObj_NewRowActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_NewRowActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_NewRowActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        nCol,
                        Description}, this.onEndWebProxyObj_NewRowActionDelegate, this.onWebProxyObj_NewRowActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoCommandAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn request) {
            return base.Channel.WebProxyObj_DoCommandAction(request);
        }
        
        public void WebProxyObj_DoCommandAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, ref int CommandType, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            inValue.CommandType = CommandType;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoCommandAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            CommandType = retVal.CommandType;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoCommandAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoCommandAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoCommandAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            inValue.CommandType = CommandType;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoCommandAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoCommandAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoCommandAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoCommandAction(System.IAsyncResult result, out int CommandType, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCommandActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoCommandAction(result);
            CommandType = retVal.CommandType;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoCommandAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int CommandId = ((int)(inValues[5]));
            int CommandType = ((int)(inValues[6]));
            byte[] Description = ((byte[])(inValues[7]));
            return this.BeginWebProxyObj_DoCommandAction(HeaderInfo, handle, FromWindow, Value, WindowId, CommandId, CommandType, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoCommandAction(System.IAsyncResult result) {
            int CommandType = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoCommandAction(result, out CommandType, out Description);
            return new object[] {
                    CommandType,
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoCommandActionCompleted(object state) {
            if ((this.WebProxyObj_DoCommandActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoCommandActionCompleted(this, new WebProxyObj_DoCommandActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoCommandActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, byte[] Description) {
            this.WebProxyObj_DoCommandActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, CommandId, CommandType, Description, null);
        }
        
        public void WebProxyObj_DoCommandActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoCommandActionDelegate == null)) {
                this.onBeginWebProxyObj_DoCommandActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoCommandAction);
            }
            if ((this.onEndWebProxyObj_DoCommandActionDelegate == null)) {
                this.onEndWebProxyObj_DoCommandActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoCommandAction);
            }
            if ((this.onWebProxyObj_DoCommandActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoCommandActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoCommandActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoCommandActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        CommandId,
                        CommandType,
                        Description}, this.onEndWebProxyObj_DoCommandActionDelegate, this.onWebProxyObj_DoCommandActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoUploadFileAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn request) {
            return base.Channel.WebProxyObj_DoUploadFileAction(request);
        }
        
        public void WebProxyObj_DoUploadFileAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, ref int CommandType, string FilePath, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            inValue.CommandType = CommandType;
            inValue.FilePath = FilePath;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoUploadFileAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            CommandType = retVal.CommandType;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoUploadFileAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoUploadFileAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoUploadFileAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, string FilePath, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            inValue.CommandType = CommandType;
            inValue.FilePath = FilePath;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoUploadFileAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoUploadFileAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoUploadFileAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoUploadFileAction(System.IAsyncResult result, out int CommandType, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoUploadFileActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoUploadFileAction(result);
            CommandType = retVal.CommandType;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoUploadFileAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            int CommandId = ((int)(inValues[5]));
            int CommandType = ((int)(inValues[6]));
            string FilePath = ((string)(inValues[7]));
            byte[] Description = ((byte[])(inValues[8]));
            return this.BeginWebProxyObj_DoUploadFileAction(HeaderInfo, handle, FromWindow, Value, WindowId, CommandId, CommandType, FilePath, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoUploadFileAction(System.IAsyncResult result) {
            int CommandType = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoUploadFileAction(result, out CommandType, out Description);
            return new object[] {
                    CommandType,
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoUploadFileActionCompleted(object state) {
            if ((this.WebProxyObj_DoUploadFileActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoUploadFileActionCompleted(this, new WebProxyObj_DoUploadFileActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoUploadFileActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, string FilePath, byte[] Description) {
            this.WebProxyObj_DoUploadFileActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, CommandId, CommandType, FilePath, Description, null);
        }
        
        public void WebProxyObj_DoUploadFileActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, int CommandId, int CommandType, string FilePath, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoUploadFileActionDelegate == null)) {
                this.onBeginWebProxyObj_DoUploadFileActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoUploadFileAction);
            }
            if ((this.onEndWebProxyObj_DoUploadFileActionDelegate == null)) {
                this.onEndWebProxyObj_DoUploadFileActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoUploadFileAction);
            }
            if ((this.onWebProxyObj_DoUploadFileActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoUploadFileActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoUploadFileActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoUploadFileActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        CommandId,
                        CommandType,
                        FilePath,
                        Description}, this.onEndWebProxyObj_DoUploadFileActionDelegate, this.onWebProxyObj_DoUploadFileActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_MoveToAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn request) {
            return base.Channel.WebProxyObj_MoveToAction(request);
        }
        
        public void WebProxyObj_MoveToAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string ToWindow, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.ToWindow = ToWindow;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_MoveToAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_MoveToAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_MoveToAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_MoveToAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string ToWindow, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.ToWindow = ToWindow;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_MoveToAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_MoveToAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_MoveToAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_MoveToAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_MoveToActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_MoveToAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_MoveToAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string ToWindow = ((string)(inValues[4]));
            byte[] Description = ((byte[])(inValues[5]));
            return this.BeginWebProxyObj_MoveToAction(HeaderInfo, handle, FromWindow, Value, ToWindow, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_MoveToAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_MoveToAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_MoveToActionCompleted(object state) {
            if ((this.WebProxyObj_MoveToActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_MoveToActionCompleted(this, new WebProxyObj_MoveToActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_MoveToActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string ToWindow, byte[] Description) {
            this.WebProxyObj_MoveToActionAsync(HeaderInfo, handle, FromWindow, Value, ToWindow, Description, null);
        }
        
        public void WebProxyObj_MoveToActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string ToWindow, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_MoveToActionDelegate == null)) {
                this.onBeginWebProxyObj_MoveToActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_MoveToAction);
            }
            if ((this.onEndWebProxyObj_MoveToActionDelegate == null)) {
                this.onEndWebProxyObj_MoveToActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_MoveToAction);
            }
            if ((this.onWebProxyObj_MoveToActionCompletedDelegate == null)) {
                this.onWebProxyObj_MoveToActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_MoveToActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_MoveToActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        ToWindow,
                        Description}, this.onEndWebProxyObj_MoveToActionDelegate, this.onWebProxyObj_MoveToActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoCloseAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn request) {
            return base.Channel.WebProxyObj_DoCloseAction(request);
        }
        
        public void WebProxyObj_DoCloseAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoCloseAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoCloseAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoCloseAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoCloseAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.FromWindow = FromWindow;
            inValue.Value = Value;
            inValue.WindowId = WindowId;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoCloseAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoCloseAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoCloseAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoCloseAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoCloseActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoCloseAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoCloseAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string FromWindow = ((string)(inValues[2]));
            string Value = ((string)(inValues[3]));
            string WindowId = ((string)(inValues[4]));
            byte[] Description = ((byte[])(inValues[5]));
            return this.BeginWebProxyObj_DoCloseAction(HeaderInfo, handle, FromWindow, Value, WindowId, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoCloseAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoCloseAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_DoCloseActionCompleted(object state) {
            if ((this.WebProxyObj_DoCloseActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoCloseActionCompleted(this, new WebProxyObj_DoCloseActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoCloseActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, byte[] Description) {
            this.WebProxyObj_DoCloseActionAsync(HeaderInfo, handle, FromWindow, Value, WindowId, Description, null);
        }
        
        public void WebProxyObj_DoCloseActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string FromWindow, string Value, string WindowId, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_DoCloseActionDelegate == null)) {
                this.onBeginWebProxyObj_DoCloseActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoCloseAction);
            }
            if ((this.onEndWebProxyObj_DoCloseActionDelegate == null)) {
                this.onEndWebProxyObj_DoCloseActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoCloseAction);
            }
            if ((this.onWebProxyObj_DoCloseActionCompletedDelegate == null)) {
                this.onWebProxyObj_DoCloseActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoCloseActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoCloseActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        FromWindow,
                        Value,
                        WindowId,
                        Description}, this.onEndWebProxyObj_DoCloseActionDelegate, this.onWebProxyObj_DoCloseActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_ResizeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn request) {
            return base.Channel.WebProxyObj_ResizeAction(request);
        }
        
        public void WebProxyObj_ResizeAction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, int Height, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_ResizeAction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_ResizeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_ResizeAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_ResizeAction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, int Height, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_ResizeAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_ResizeAction(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_ResizeAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_ResizeAction(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_ResizeActionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_ResizeAction(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_ResizeAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int Width = ((int)(inValues[3]));
            int Height = ((int)(inValues[4]));
            byte[] Description = ((byte[])(inValues[5]));
            return this.BeginWebProxyObj_ResizeAction(HeaderInfo, handle, WindowId, Width, Height, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_ResizeAction(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_ResizeAction(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_ResizeActionCompleted(object state) {
            if ((this.WebProxyObj_ResizeActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_ResizeActionCompleted(this, new WebProxyObj_ResizeActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_ResizeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, int Height, byte[] Description) {
            this.WebProxyObj_ResizeActionAsync(HeaderInfo, handle, WindowId, Width, Height, Description, null);
        }
        
        public void WebProxyObj_ResizeActionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Width, int Height, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_ResizeActionDelegate == null)) {
                this.onBeginWebProxyObj_ResizeActionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_ResizeAction);
            }
            if ((this.onEndWebProxyObj_ResizeActionDelegate == null)) {
                this.onEndWebProxyObj_ResizeActionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_ResizeAction);
            }
            if ((this.onWebProxyObj_ResizeActionCompletedDelegate == null)) {
                this.onWebProxyObj_ResizeActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_ResizeActionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_ResizeActionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Width,
                        Height,
                        Description}, this.onEndWebProxyObj_ResizeActionDelegate, this.onWebProxyObj_ResizeActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CreateWebProxy(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn request) {
            return base.Channel.CreateWebProxy(request);
        }
        
        public int CreateWebProxy(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, ref int ThreadId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CreateWebProxy(inValue);
            HeaderInfo = retVal.HeaderInfo;
            ThreadId = retVal.ThreadId;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCreateWebProxy(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateWebProxy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateWebProxy(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCreateWebProxy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCreateWebProxy(System.IAsyncResult result) {
            return base.Channel.EndCreateWebProxy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCreateWebProxy(System.IAsyncResult result, out int @return, out int ThreadId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCreateWebProxy(result);
            @return = retVal.@return;
            ThreadId = retVal.ThreadId;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCreateWebProxy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int ThreadId = ((int)(inValues[1]));
            return this.BeginCreateWebProxy(HeaderInfo, ThreadId, callback, asyncState);
        }
        
        private object[] OnEndCreateWebProxy(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            int ThreadId = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCreateWebProxy(result, out @return, out ThreadId);
            return new object[] {
                    @return,
                    ThreadId,
                    retVal};
        }
        
        private void OnCreateWebProxyCompleted(object state) {
            if ((this.CreateWebProxyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateWebProxyCompleted(this, new CreateWebProxyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateWebProxyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.CreateWebProxyAsync(HeaderInfo, ThreadId, null);
        }
        
        public void CreateWebProxyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, object userState) {
            if ((this.onBeginCreateWebProxyDelegate == null)) {
                this.onBeginCreateWebProxyDelegate = new BeginOperationDelegate(this.OnBeginCreateWebProxy);
            }
            if ((this.onEndCreateWebProxyDelegate == null)) {
                this.onEndCreateWebProxyDelegate = new EndOperationDelegate(this.OnEndCreateWebProxy);
            }
            if ((this.onCreateWebProxyCompletedDelegate == null)) {
                this.onCreateWebProxyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateWebProxyCompleted);
            }
            base.InvokeAsync(this.onBeginCreateWebProxyDelegate, new object[] {
                        HeaderInfo,
                        ThreadId}, this.onEndCreateWebProxyDelegate, this.onCreateWebProxyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CreateWebProxyForThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn request) {
            return base.Channel.CreateWebProxyForThread(request);
        }
        
        public int CreateWebProxyForThread(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadID, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadID = ThreadID;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CreateWebProxyForThread(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCreateWebProxyForThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateWebProxyForThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateWebProxyForThread(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadID, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadID = ThreadID;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCreateWebProxyForThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCreateWebProxyForThread(System.IAsyncResult result) {
            return base.Channel.EndCreateWebProxyForThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCreateWebProxyForThread(System.IAsyncResult result, out int @return, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CreateWebProxyForThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCreateWebProxyForThread(result);
            @return = retVal.@return;
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCreateWebProxyForThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int ThreadID = ((int)(inValues[1]));
            byte[] Description = ((byte[])(inValues[2]));
            return this.BeginCreateWebProxyForThread(HeaderInfo, ThreadID, Description, callback, asyncState);
        }
        
        private object[] OnEndCreateWebProxyForThread(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCreateWebProxyForThread(result, out @return, out Description);
            return new object[] {
                    @return,
                    Description,
                    retVal};
        }
        
        private void OnCreateWebProxyForThreadCompleted(object state) {
            if ((this.CreateWebProxyForThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateWebProxyForThreadCompleted(this, new CreateWebProxyForThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateWebProxyForThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadID, byte[] Description) {
            this.CreateWebProxyForThreadAsync(HeaderInfo, ThreadID, Description, null);
        }
        
        public void CreateWebProxyForThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadID, byte[] Description, object userState) {
            if ((this.onBeginCreateWebProxyForThreadDelegate == null)) {
                this.onBeginCreateWebProxyForThreadDelegate = new BeginOperationDelegate(this.OnBeginCreateWebProxyForThread);
            }
            if ((this.onEndCreateWebProxyForThreadDelegate == null)) {
                this.onEndCreateWebProxyForThreadDelegate = new EndOperationDelegate(this.OnEndCreateWebProxyForThread);
            }
            if ((this.onCreateWebProxyForThreadCompletedDelegate == null)) {
                this.onCreateWebProxyForThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateWebProxyForThreadCompleted);
            }
            base.InvokeAsync(this.onBeginCreateWebProxyForThreadDelegate, new object[] {
                        HeaderInfo,
                        ThreadID,
                        Description}, this.onEndCreateWebProxyForThreadDelegate, this.onCreateWebProxyForThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetThreadWindowsBinaryDescription(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn request) {
            return base.Channel.WebProxyObj_GetThreadWindowsBinaryDescription(request);
        }
        
        public void WebProxyObj_GetThreadWindowsBinaryDescription(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, ref byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Description = Description;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetThreadWindowsBinaryDescription(inValue);
            HeaderInfo = retVal.HeaderInfo;
            Description = retVal.Description;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetThreadWindowsBinaryDescription(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetThreadWindowsBinaryDescription(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetThreadWindowsBinaryDescription(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] Description, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Description = Description;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetThreadWindowsBinaryDescription(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetThreadWindowsBinaryDescription(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetThreadWindowsBinaryDescription(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetThreadWindowsBinaryDescription(System.IAsyncResult result, out byte[] Description) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetThreadWindowsBinaryDescriptionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetThreadWindowsBinaryDescription(result);
            Description = retVal.Description;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetThreadWindowsBinaryDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            byte[] Description = ((byte[])(inValues[2]));
            return this.BeginWebProxyObj_GetThreadWindowsBinaryDescription(HeaderInfo, handle, Description, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetThreadWindowsBinaryDescription(System.IAsyncResult result) {
            byte[] Description = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetThreadWindowsBinaryDescription(result, out Description);
            return new object[] {
                    Description,
                    retVal};
        }
        
        private void OnWebProxyObj_GetThreadWindowsBinaryDescriptionCompleted(object state) {
            if ((this.WebProxyObj_GetThreadWindowsBinaryDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetThreadWindowsBinaryDescriptionCompleted(this, new WebProxyObj_GetThreadWindowsBinaryDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetThreadWindowsBinaryDescriptionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] Description) {
            this.WebProxyObj_GetThreadWindowsBinaryDescriptionAsync(HeaderInfo, handle, Description, null);
        }
        
        public void WebProxyObj_GetThreadWindowsBinaryDescriptionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] Description, object userState) {
            if ((this.onBeginWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate == null)) {
                this.onBeginWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetThreadWindowsBinaryDescription);
            }
            if ((this.onEndWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate == null)) {
                this.onEndWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetThreadWindowsBinaryDescription);
            }
            if ((this.onWebProxyObj_GetThreadWindowsBinaryDescriptionCompletedDelegate == null)) {
                this.onWebProxyObj_GetThreadWindowsBinaryDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetThreadWindowsBinaryDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        Description}, this.onEndWebProxyObj_GetThreadWindowsBinaryDescriptionDelegate, this.onWebProxyObj_GetThreadWindowsBinaryDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn request) {
            return base.Channel.WebProxyObj_SetUserInteractionMode(request);
        }
        
        public void WebProxyObj_SetUserInteractionMode(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int Mode) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Mode = Mode;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SetUserInteractionMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SetUserInteractionMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int Mode, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.Mode = Mode;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SetUserInteractionMode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SetUserInteractionMode(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SetUserInteractionMode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SetUserInteractionMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetUserInteractionModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SetUserInteractionMode(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SetUserInteractionMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            int Mode = ((int)(inValues[2]));
            return this.BeginWebProxyObj_SetUserInteractionMode(HeaderInfo, handle, Mode, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SetUserInteractionMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SetUserInteractionMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebProxyObj_SetUserInteractionModeCompleted(object state) {
            if ((this.WebProxyObj_SetUserInteractionModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SetUserInteractionModeCompleted(this, new WebProxyObj_SetUserInteractionModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SetUserInteractionModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int Mode) {
            this.WebProxyObj_SetUserInteractionModeAsync(HeaderInfo, handle, Mode, null);
        }
        
        public void WebProxyObj_SetUserInteractionModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int Mode, object userState) {
            if ((this.onBeginWebProxyObj_SetUserInteractionModeDelegate == null)) {
                this.onBeginWebProxyObj_SetUserInteractionModeDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SetUserInteractionMode);
            }
            if ((this.onEndWebProxyObj_SetUserInteractionModeDelegate == null)) {
                this.onEndWebProxyObj_SetUserInteractionModeDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SetUserInteractionMode);
            }
            if ((this.onWebProxyObj_SetUserInteractionModeCompletedDelegate == null)) {
                this.onWebProxyObj_SetUserInteractionModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SetUserInteractionModeCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SetUserInteractionModeDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        Mode}, this.onEndWebProxyObj_SetUserInteractionModeDelegate, this.onWebProxyObj_SetUserInteractionModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetCommandLinkUrl(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn request) {
            return base.Channel.WebProxyObj_GetCommandLinkUrl(request);
        }
        
        public string WebProxyObj_GetCommandLinkUrl(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetCommandLinkUrl(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetCommandLinkUrl(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetCommandLinkUrl(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetCommandLinkUrl(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetCommandLinkUrl(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetCommandLinkUrl(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetCommandLinkUrl(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetCommandLinkUrl(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetCommandLinkUrlOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetCommandLinkUrl(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetCommandLinkUrl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int CommandId = ((int)(inValues[3]));
            return this.BeginWebProxyObj_GetCommandLinkUrl(HeaderInfo, handle, WindowId, CommandId, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetCommandLinkUrl(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetCommandLinkUrl(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnWebProxyObj_GetCommandLinkUrlCompleted(object state) {
            if ((this.WebProxyObj_GetCommandLinkUrlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetCommandLinkUrlCompleted(this, new WebProxyObj_GetCommandLinkUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetCommandLinkUrlAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            this.WebProxyObj_GetCommandLinkUrlAsync(HeaderInfo, handle, WindowId, CommandId, null);
        }
        
        public void WebProxyObj_GetCommandLinkUrlAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId, object userState) {
            if ((this.onBeginWebProxyObj_GetCommandLinkUrlDelegate == null)) {
                this.onBeginWebProxyObj_GetCommandLinkUrlDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetCommandLinkUrl);
            }
            if ((this.onEndWebProxyObj_GetCommandLinkUrlDelegate == null)) {
                this.onEndWebProxyObj_GetCommandLinkUrlDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetCommandLinkUrl);
            }
            if ((this.onWebProxyObj_GetCommandLinkUrlCompletedDelegate == null)) {
                this.onWebProxyObj_GetCommandLinkUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetCommandLinkUrlCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetCommandLinkUrlDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        CommandId}, this.onEndWebProxyObj_GetCommandLinkUrlDelegate, this.onWebProxyObj_GetCommandLinkUrlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_OpenDropdownBtn(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn request) {
            return base.Channel.WebProxyObj_OpenDropdownBtn(request);
        }
        
        public void WebProxyObj_OpenDropdownBtn(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_OpenDropdownBtn(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_OpenDropdownBtn(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_OpenDropdownBtn(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_OpenDropdownBtn(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.CommandId = CommandId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_OpenDropdownBtn(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_OpenDropdownBtn(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_OpenDropdownBtn(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_OpenDropdownBtn(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_OpenDropdownBtnOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_OpenDropdownBtn(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_OpenDropdownBtn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int CommandId = ((int)(inValues[3]));
            return this.BeginWebProxyObj_OpenDropdownBtn(HeaderInfo, handle, WindowId, CommandId, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_OpenDropdownBtn(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_OpenDropdownBtn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebProxyObj_OpenDropdownBtnCompleted(object state) {
            if ((this.WebProxyObj_OpenDropdownBtnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_OpenDropdownBtnCompleted(this, new WebProxyObj_OpenDropdownBtnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_OpenDropdownBtnAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId) {
            this.WebProxyObj_OpenDropdownBtnAsync(HeaderInfo, handle, WindowId, CommandId, null);
        }
        
        public void WebProxyObj_OpenDropdownBtnAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int CommandId, object userState) {
            if ((this.onBeginWebProxyObj_OpenDropdownBtnDelegate == null)) {
                this.onBeginWebProxyObj_OpenDropdownBtnDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_OpenDropdownBtn);
            }
            if ((this.onEndWebProxyObj_OpenDropdownBtnDelegate == null)) {
                this.onEndWebProxyObj_OpenDropdownBtnDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_OpenDropdownBtn);
            }
            if ((this.onWebProxyObj_OpenDropdownBtnCompletedDelegate == null)) {
                this.onWebProxyObj_OpenDropdownBtnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_OpenDropdownBtnCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_OpenDropdownBtnDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        CommandId}, this.onEndWebProxyObj_OpenDropdownBtnDelegate, this.onWebProxyObj_OpenDropdownBtnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn request) {
            return base.Channel.WebProxyObj_DoContextMenu(request);
        }
        
        public void WebProxyObj_DoContextMenu(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoContextMenu(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoContextMenu(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoContextMenu(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoContextMenu(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoContextMenu(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoContextMenu(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoContextMenu(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoContextMenu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            return this.BeginWebProxyObj_DoContextMenu(HeaderInfo, handle, WindowId, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoContextMenu(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoContextMenu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnWebProxyObj_DoContextMenuCompleted(object state) {
            if ((this.WebProxyObj_DoContextMenuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoContextMenuCompleted(this, new WebProxyObj_DoContextMenuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId) {
            this.WebProxyObj_DoContextMenuAsync(HeaderInfo, handle, WindowId, null);
        }
        
        public void WebProxyObj_DoContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, object userState) {
            if ((this.onBeginWebProxyObj_DoContextMenuDelegate == null)) {
                this.onBeginWebProxyObj_DoContextMenuDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoContextMenu);
            }
            if ((this.onEndWebProxyObj_DoContextMenuDelegate == null)) {
                this.onEndWebProxyObj_DoContextMenuDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoContextMenu);
            }
            if ((this.onWebProxyObj_DoContextMenuCompletedDelegate == null)) {
                this.onWebProxyObj_DoContextMenuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoContextMenuCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoContextMenuDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId}, this.onEndWebProxyObj_DoContextMenuDelegate, this.onWebProxyObj_DoContextMenuCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetTreeViewAdvContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn request) {
            return base.Channel.WebProxyObj_GetTreeViewAdvContextMenu(request);
        }
        
        public bool WebProxyObj_GetTreeViewAdvContextMenu(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, ref byte[] MenuDescription, string TreeId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.MenuDescription = MenuDescription;
            inValue.TreeId = TreeId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetTreeViewAdvContextMenu(inValue);
            HeaderInfo = retVal.HeaderInfo;
            MenuDescription = retVal.MenuDescription;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetTreeViewAdvContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetTreeViewAdvContextMenu(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetTreeViewAdvContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, string TreeId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.MenuDescription = MenuDescription;
            inValue.TreeId = TreeId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetTreeViewAdvContextMenu(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetTreeViewAdvContextMenu(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetTreeViewAdvContextMenu(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetTreeViewAdvContextMenu(System.IAsyncResult result, out bool @return, out byte[] MenuDescription) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetTreeViewAdvContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetTreeViewAdvContextMenu(result);
            @return = retVal.@return;
            MenuDescription = retVal.MenuDescription;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetTreeViewAdvContextMenu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            byte[] MenuDescription = ((byte[])(inValues[2]));
            string TreeId = ((string)(inValues[3]));
            return this.BeginWebProxyObj_GetTreeViewAdvContextMenu(HeaderInfo, handle, MenuDescription, TreeId, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetTreeViewAdvContextMenu(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            byte[] MenuDescription = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetTreeViewAdvContextMenu(result, out @return, out MenuDescription);
            return new object[] {
                    @return,
                    MenuDescription,
                    retVal};
        }
        
        private void OnWebProxyObj_GetTreeViewAdvContextMenuCompleted(object state) {
            if ((this.WebProxyObj_GetTreeViewAdvContextMenuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetTreeViewAdvContextMenuCompleted(this, new WebProxyObj_GetTreeViewAdvContextMenuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetTreeViewAdvContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, string TreeId) {
            this.WebProxyObj_GetTreeViewAdvContextMenuAsync(HeaderInfo, handle, MenuDescription, TreeId, null);
        }
        
        public void WebProxyObj_GetTreeViewAdvContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, string TreeId, object userState) {
            if ((this.onBeginWebProxyObj_GetTreeViewAdvContextMenuDelegate == null)) {
                this.onBeginWebProxyObj_GetTreeViewAdvContextMenuDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetTreeViewAdvContextMenu);
            }
            if ((this.onEndWebProxyObj_GetTreeViewAdvContextMenuDelegate == null)) {
                this.onEndWebProxyObj_GetTreeViewAdvContextMenuDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetTreeViewAdvContextMenu);
            }
            if ((this.onWebProxyObj_GetTreeViewAdvContextMenuCompletedDelegate == null)) {
                this.onWebProxyObj_GetTreeViewAdvContextMenuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetTreeViewAdvContextMenuCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetTreeViewAdvContextMenuDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        MenuDescription,
                        TreeId}, this.onEndWebProxyObj_GetTreeViewAdvContextMenuDelegate, this.onWebProxyObj_GetTreeViewAdvContextMenuCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn request) {
            return base.Channel.WebProxyObj_GetContextMenu(request);
        }
        
        public bool WebProxyObj_GetContextMenu(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, ref byte[] MenuDescription) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.MenuDescription = MenuDescription;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetContextMenu(inValue);
            HeaderInfo = retVal.HeaderInfo;
            MenuDescription = retVal.MenuDescription;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetContextMenu(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetContextMenu(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.MenuDescription = MenuDescription;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetContextMenu(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetContextMenu(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetContextMenu(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetContextMenu(System.IAsyncResult result, out bool @return, out byte[] MenuDescription) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetContextMenuOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetContextMenu(result);
            @return = retVal.@return;
            MenuDescription = retVal.MenuDescription;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetContextMenu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            byte[] MenuDescription = ((byte[])(inValues[2]));
            return this.BeginWebProxyObj_GetContextMenu(HeaderInfo, handle, MenuDescription, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetContextMenu(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            byte[] MenuDescription = this.GetDefaultValueForInitialization<byte[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetContextMenu(result, out @return, out MenuDescription);
            return new object[] {
                    @return,
                    MenuDescription,
                    retVal};
        }
        
        private void OnWebProxyObj_GetContextMenuCompleted(object state) {
            if ((this.WebProxyObj_GetContextMenuCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetContextMenuCompleted(this, new WebProxyObj_GetContextMenuCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription) {
            this.WebProxyObj_GetContextMenuAsync(HeaderInfo, handle, MenuDescription, null);
        }
        
        public void WebProxyObj_GetContextMenuAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, byte[] MenuDescription, object userState) {
            if ((this.onBeginWebProxyObj_GetContextMenuDelegate == null)) {
                this.onBeginWebProxyObj_GetContextMenuDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetContextMenu);
            }
            if ((this.onEndWebProxyObj_GetContextMenuDelegate == null)) {
                this.onEndWebProxyObj_GetContextMenuDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetContextMenu);
            }
            if ((this.onWebProxyObj_GetContextMenuCompletedDelegate == null)) {
                this.onWebProxyObj_GetContextMenuCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetContextMenuCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetContextMenuDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        MenuDescription}, this.onEndWebProxyObj_GetContextMenuDelegate, this.onWebProxyObj_GetContextMenuCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_DoKey(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn request) {
            return base.Channel.WebProxyObj_DoKey(request);
        }
        
        public void WebProxyObj_DoKey(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, bool bKeyIsChar, ref int selStart, ref int selEnd, ref string windowText) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.keyCode = keyCode;
            inValue.bShift = bShift;
            inValue.bCtrl = bCtrl;
            inValue.bAlt = bAlt;
            inValue.bKeyIsChar = bKeyIsChar;
            inValue.selStart = selStart;
            inValue.selEnd = selEnd;
            inValue.windowText = windowText;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_DoKey(inValue);
            HeaderInfo = retVal.HeaderInfo;
            selStart = retVal.selStart;
            selEnd = retVal.selEnd;
            windowText = retVal.windowText;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_DoKey(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_DoKey(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_DoKey(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, bool bKeyIsChar, int selStart, int selEnd, string windowText, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.keyCode = keyCode;
            inValue.bShift = bShift;
            inValue.bCtrl = bCtrl;
            inValue.bAlt = bAlt;
            inValue.bKeyIsChar = bKeyIsChar;
            inValue.selStart = selStart;
            inValue.selEnd = selEnd;
            inValue.windowText = windowText;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_DoKey(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_DoKey(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_DoKey(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_DoKey(System.IAsyncResult result, out int selStart, out int selEnd, out string windowText) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_DoKeyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_DoKey(result);
            selStart = retVal.selStart;
            selEnd = retVal.selEnd;
            windowText = retVal.windowText;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_DoKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int keyCode = ((int)(inValues[3]));
            bool bShift = ((bool)(inValues[4]));
            bool bCtrl = ((bool)(inValues[5]));
            bool bAlt = ((bool)(inValues[6]));
            bool bKeyIsChar = ((bool)(inValues[7]));
            int selStart = ((int)(inValues[8]));
            int selEnd = ((int)(inValues[9]));
            string windowText = ((string)(inValues[10]));
            return this.BeginWebProxyObj_DoKey(HeaderInfo, handle, WindowId, keyCode, bShift, bCtrl, bAlt, bKeyIsChar, selStart, selEnd, windowText, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_DoKey(System.IAsyncResult result) {
            int selStart = this.GetDefaultValueForInitialization<int>();
            int selEnd = this.GetDefaultValueForInitialization<int>();
            string windowText = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_DoKey(result, out selStart, out selEnd, out windowText);
            return new object[] {
                    selStart,
                    selEnd,
                    windowText,
                    retVal};
        }
        
        private void OnWebProxyObj_DoKeyCompleted(object state) {
            if ((this.WebProxyObj_DoKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_DoKeyCompleted(this, new WebProxyObj_DoKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_DoKeyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, bool bKeyIsChar, int selStart, int selEnd, string windowText) {
            this.WebProxyObj_DoKeyAsync(HeaderInfo, handle, WindowId, keyCode, bShift, bCtrl, bAlt, bKeyIsChar, selStart, selEnd, windowText, null);
        }
        
        public void WebProxyObj_DoKeyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int keyCode, bool bShift, bool bCtrl, bool bAlt, bool bKeyIsChar, int selStart, int selEnd, string windowText, object userState) {
            if ((this.onBeginWebProxyObj_DoKeyDelegate == null)) {
                this.onBeginWebProxyObj_DoKeyDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_DoKey);
            }
            if ((this.onEndWebProxyObj_DoKeyDelegate == null)) {
                this.onEndWebProxyObj_DoKeyDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_DoKey);
            }
            if ((this.onWebProxyObj_DoKeyCompletedDelegate == null)) {
                this.onWebProxyObj_DoKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_DoKeyCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_DoKeyDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        keyCode,
                        bShift,
                        bCtrl,
                        bAlt,
                        bKeyIsChar,
                        selStart,
                        selEnd,
                        windowText}, this.onEndWebProxyObj_DoKeyDelegate, this.onWebProxyObj_DoKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_GetComboItems(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn request) {
            return base.Channel.WebProxyObj_GetComboItems(request);
        }
        
        public string[] WebProxyObj_GetComboItems(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, ref int SelectedIndex) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.SelectedIndex = SelectedIndex;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_GetComboItems(inValue);
            HeaderInfo = retVal.HeaderInfo;
            SelectedIndex = retVal.SelectedIndex;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_GetComboItems(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_GetComboItems(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_GetComboItems(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int SelectedIndex, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.SelectedIndex = SelectedIndex;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_GetComboItems(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_GetComboItems(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_GetComboItems(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_GetComboItems(System.IAsyncResult result, out string[] @return, out int SelectedIndex) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_GetComboItemsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_GetComboItems(result);
            @return = retVal.@return;
            SelectedIndex = retVal.SelectedIndex;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_GetComboItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int SelectedIndex = ((int)(inValues[3]));
            return this.BeginWebProxyObj_GetComboItems(HeaderInfo, handle, WindowId, SelectedIndex, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_GetComboItems(System.IAsyncResult result) {
            string[] @return = this.GetDefaultValueForInitialization<string[]>();
            int SelectedIndex = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_GetComboItems(result, out @return, out SelectedIndex);
            return new object[] {
                    @return,
                    SelectedIndex,
                    retVal};
        }
        
        private void OnWebProxyObj_GetComboItemsCompleted(object state) {
            if ((this.WebProxyObj_GetComboItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_GetComboItemsCompleted(this, new WebProxyObj_GetComboItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_GetComboItemsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int SelectedIndex) {
            this.WebProxyObj_GetComboItemsAsync(HeaderInfo, handle, WindowId, SelectedIndex, null);
        }
        
        public void WebProxyObj_GetComboItemsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int SelectedIndex, object userState) {
            if ((this.onBeginWebProxyObj_GetComboItemsDelegate == null)) {
                this.onBeginWebProxyObj_GetComboItemsDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_GetComboItems);
            }
            if ((this.onEndWebProxyObj_GetComboItemsDelegate == null)) {
                this.onEndWebProxyObj_GetComboItemsDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_GetComboItems);
            }
            if ((this.onWebProxyObj_GetComboItemsCompletedDelegate == null)) {
                this.onWebProxyObj_GetComboItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_GetComboItemsCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_GetComboItemsDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        SelectedIndex}, this.onEndWebProxyObj_GetComboItemsDelegate, this.onWebProxyObj_GetComboItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.WebProxyObj_SetDate(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn request) {
            return base.Channel.WebProxyObj_SetDate(request);
        }
        
        public string WebProxyObj_SetDate(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Day, int Month, int Year) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Day = Day;
            inValue.Month = Month;
            inValue.Year = Year;
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).WebProxyObj_SetDate(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginWebProxyObj_SetDate(Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWebProxyObj_SetDate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWebProxyObj_SetDate(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Day, int Month, int Year, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.WindowId = WindowId;
            inValue.Day = Day;
            inValue.Month = Month;
            inValue.Year = Year;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginWebProxyObj_SetDate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndWebProxyObj_SetDate(System.IAsyncResult result) {
            return base.Channel.EndWebProxyObj_SetDate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndWebProxyObj_SetDate(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.WebProxyObj_SetDateOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndWebProxyObj_SetDate(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginWebProxyObj_SetDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string WindowId = ((string)(inValues[2]));
            int Day = ((int)(inValues[3]));
            int Month = ((int)(inValues[4]));
            int Year = ((int)(inValues[5]));
            return this.BeginWebProxyObj_SetDate(HeaderInfo, handle, WindowId, Day, Month, Year, callback, asyncState);
        }
        
        private object[] OnEndWebProxyObj_SetDate(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndWebProxyObj_SetDate(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnWebProxyObj_SetDateCompleted(object state) {
            if ((this.WebProxyObj_SetDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WebProxyObj_SetDateCompleted(this, new WebProxyObj_SetDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WebProxyObj_SetDateAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Day, int Month, int Year) {
            this.WebProxyObj_SetDateAsync(HeaderInfo, handle, WindowId, Day, Month, Year, null);
        }
        
        public void WebProxyObj_SetDateAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string WindowId, int Day, int Month, int Year, object userState) {
            if ((this.onBeginWebProxyObj_SetDateDelegate == null)) {
                this.onBeginWebProxyObj_SetDateDelegate = new BeginOperationDelegate(this.OnBeginWebProxyObj_SetDate);
            }
            if ((this.onEndWebProxyObj_SetDateDelegate == null)) {
                this.onEndWebProxyObj_SetDateDelegate = new EndOperationDelegate(this.OnEndWebProxyObj_SetDate);
            }
            if ((this.onWebProxyObj_SetDateCompletedDelegate == null)) {
                this.onWebProxyObj_SetDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWebProxyObj_SetDateCompleted);
            }
            base.InvokeAsync(this.onBeginWebProxyObj_SetDateDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        WindowId,
                        Day,
                        Month,
                        Year}, this.onEndWebProxyObj_SetDateDelegate, this.onWebProxyObj_SetDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetApplicationDate(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn request) {
            return base.Channel.GetApplicationDate(request);
        }
        
        public string GetApplicationDate(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetApplicationDate(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetApplicationDate(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationDate(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationDate(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetApplicationDate(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetApplicationDate(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationDate(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetApplicationDate(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDateOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetApplicationDate(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetApplicationDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetApplicationDate(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationDate(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetApplicationDate(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetApplicationDateCompleted(object state) {
            if ((this.GetApplicationDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationDateCompleted(this, new GetApplicationDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationDateAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetApplicationDateAsync(HeaderInfo, null);
        }
        
        public void GetApplicationDateAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetApplicationDateDelegate == null)) {
                this.onBeginGetApplicationDateDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationDate);
            }
            if ((this.onEndGetApplicationDateDelegate == null)) {
                this.onEndGetApplicationDateDelegate = new EndOperationDelegate(this.OnEndGetApplicationDate);
            }
            if ((this.onGetApplicationDateCompletedDelegate == null)) {
                this.onGetApplicationDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationDateDelegate, new object[] {
                        HeaderInfo}, this.onEndGetApplicationDateDelegate, this.onGetApplicationDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetApplicationYear(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn request) {
            return base.Channel.GetApplicationYear(request);
        }
        
        public int GetApplicationYear(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetApplicationYear(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetApplicationYear(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationYear(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationYear(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetApplicationYear(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetApplicationYear(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationYear(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetApplicationYear(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationYearOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetApplicationYear(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetApplicationYear(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetApplicationYear(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationYear(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetApplicationYear(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetApplicationYearCompleted(object state) {
            if ((this.GetApplicationYearCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationYearCompleted(this, new GetApplicationYearCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationYearAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetApplicationYearAsync(HeaderInfo, null);
        }
        
        public void GetApplicationYearAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetApplicationYearDelegate == null)) {
                this.onBeginGetApplicationYearDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationYear);
            }
            if ((this.onEndGetApplicationYearDelegate == null)) {
                this.onEndGetApplicationYearDelegate = new EndOperationDelegate(this.OnEndGetApplicationYear);
            }
            if ((this.onGetApplicationYearCompletedDelegate == null)) {
                this.onGetApplicationYearCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationYearCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationYearDelegate, new object[] {
                        HeaderInfo}, this.onEndGetApplicationYearDelegate, this.onGetApplicationYearCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetApplicationMonth(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn request) {
            return base.Channel.GetApplicationMonth(request);
        }
        
        public int GetApplicationMonth(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetApplicationMonth(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetApplicationMonth(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationMonth(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationMonth(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetApplicationMonth(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetApplicationMonth(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationMonth(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetApplicationMonth(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationMonthOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetApplicationMonth(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetApplicationMonth(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetApplicationMonth(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationMonth(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetApplicationMonth(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetApplicationMonthCompleted(object state) {
            if ((this.GetApplicationMonthCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationMonthCompleted(this, new GetApplicationMonthCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationMonthAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetApplicationMonthAsync(HeaderInfo, null);
        }
        
        public void GetApplicationMonthAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetApplicationMonthDelegate == null)) {
                this.onBeginGetApplicationMonthDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationMonth);
            }
            if ((this.onEndGetApplicationMonthDelegate == null)) {
                this.onEndGetApplicationMonthDelegate = new EndOperationDelegate(this.OnEndGetApplicationMonth);
            }
            if ((this.onGetApplicationMonthCompletedDelegate == null)) {
                this.onGetApplicationMonthCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationMonthCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationMonthDelegate, new object[] {
                        HeaderInfo}, this.onEndGetApplicationMonthDelegate, this.onGetApplicationMonthCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetApplicationDay(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn request) {
            return base.Channel.GetApplicationDay(request);
        }
        
        public int GetApplicationDay(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetApplicationDay(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetApplicationDay(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationDay(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationDay(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetApplicationDay(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetApplicationDay(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationDay(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetApplicationDay(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationDayOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetApplicationDay(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetApplicationDay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetApplicationDay(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationDay(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetApplicationDay(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetApplicationDayCompleted(object state) {
            if ((this.GetApplicationDayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationDayCompleted(this, new GetApplicationDayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationDayAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetApplicationDayAsync(HeaderInfo, null);
        }
        
        public void GetApplicationDayAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetApplicationDayDelegate == null)) {
                this.onBeginGetApplicationDayDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationDay);
            }
            if ((this.onEndGetApplicationDayDelegate == null)) {
                this.onEndGetApplicationDayDelegate = new EndOperationDelegate(this.OnEndGetApplicationDay);
            }
            if ((this.onGetApplicationDayCompletedDelegate == null)) {
                this.onGetApplicationDayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationDayCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationDayDelegate, new object[] {
                        HeaderInfo}, this.onEndGetApplicationDayDelegate, this.onGetApplicationDayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EnableSoapFunctionExecutionControl(Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn request) {
            return base.Channel.EnableSoapFunctionExecutionControl(request);
        }
        
        public bool EnableSoapFunctionExecutionControl(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool enable) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.enable = enable;
            Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EnableSoapFunctionExecutionControl(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginEnableSoapFunctionExecutionControl(Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnableSoapFunctionExecutionControl(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnableSoapFunctionExecutionControl(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool enable, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.enable = enable;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginEnableSoapFunctionExecutionControl(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndEnableSoapFunctionExecutionControl(System.IAsyncResult result) {
            return base.Channel.EndEnableSoapFunctionExecutionControl(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndEnableSoapFunctionExecutionControl(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.EnableSoapFunctionExecutionControlOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndEnableSoapFunctionExecutionControl(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginEnableSoapFunctionExecutionControl(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            bool enable = ((bool)(inValues[1]));
            return this.BeginEnableSoapFunctionExecutionControl(HeaderInfo, enable, callback, asyncState);
        }
        
        private object[] OnEndEnableSoapFunctionExecutionControl(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndEnableSoapFunctionExecutionControl(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnEnableSoapFunctionExecutionControlCompleted(object state) {
            if ((this.EnableSoapFunctionExecutionControlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnableSoapFunctionExecutionControlCompleted(this, new EnableSoapFunctionExecutionControlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnableSoapFunctionExecutionControlAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool enable) {
            this.EnableSoapFunctionExecutionControlAsync(HeaderInfo, enable, null);
        }
        
        public void EnableSoapFunctionExecutionControlAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool enable, object userState) {
            if ((this.onBeginEnableSoapFunctionExecutionControlDelegate == null)) {
                this.onBeginEnableSoapFunctionExecutionControlDelegate = new BeginOperationDelegate(this.OnBeginEnableSoapFunctionExecutionControl);
            }
            if ((this.onEndEnableSoapFunctionExecutionControlDelegate == null)) {
                this.onEndEnableSoapFunctionExecutionControlDelegate = new EndOperationDelegate(this.OnEndEnableSoapFunctionExecutionControl);
            }
            if ((this.onEnableSoapFunctionExecutionControlCompletedDelegate == null)) {
                this.onEnableSoapFunctionExecutionControlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnableSoapFunctionExecutionControlCompleted);
            }
            base.InvokeAsync(this.onBeginEnableSoapFunctionExecutionControlDelegate, new object[] {
                        HeaderInfo,
                        enable}, this.onEndEnableSoapFunctionExecutionControlDelegate, this.onEnableSoapFunctionExecutionControlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CanChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn request) {
            return base.Channel.CanChangeLogin(request);
        }
        
        public bool CanChangeLogin(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool bLock) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.bLock = bLock;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CanChangeLogin(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCanChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanChangeLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool bLock, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.bLock = bLock;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCanChangeLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCanChangeLogin(System.IAsyncResult result) {
            return base.Channel.EndCanChangeLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCanChangeLogin(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanChangeLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCanChangeLogin(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCanChangeLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            bool bLock = ((bool)(inValues[1]));
            return this.BeginCanChangeLogin(HeaderInfo, bLock, callback, asyncState);
        }
        
        private object[] OnEndCanChangeLogin(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCanChangeLogin(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCanChangeLoginCompleted(object state) {
            if ((this.CanChangeLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanChangeLoginCompleted(this, new CanChangeLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanChangeLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool bLock) {
            this.CanChangeLoginAsync(HeaderInfo, bLock, null);
        }
        
        public void CanChangeLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool bLock, object userState) {
            if ((this.onBeginCanChangeLoginDelegate == null)) {
                this.onBeginCanChangeLoginDelegate = new BeginOperationDelegate(this.OnBeginCanChangeLogin);
            }
            if ((this.onEndCanChangeLoginDelegate == null)) {
                this.onEndCanChangeLoginDelegate = new EndOperationDelegate(this.OnEndCanChangeLogin);
            }
            if ((this.onCanChangeLoginCompletedDelegate == null)) {
                this.onCanChangeLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanChangeLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCanChangeLoginDelegate, new object[] {
                        HeaderInfo,
                        bLock}, this.onEndCanChangeLoginDelegate, this.onCanChangeLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.ChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn request) {
            return base.Channel.ChangeLogin(request);
        }
        
        public int ChangeLogin(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string oldAuthenticationToken, string newAuthenticationToken, bool bUnLock) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.oldAuthenticationToken = oldAuthenticationToken;
            inValue.newAuthenticationToken = newAuthenticationToken;
            inValue.bUnLock = bUnLock;
            Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).ChangeLogin(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string oldAuthenticationToken, string newAuthenticationToken, bool bUnLock, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.oldAuthenticationToken = oldAuthenticationToken;
            inValue.newAuthenticationToken = newAuthenticationToken;
            inValue.bUnLock = bUnLock;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginChangeLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndChangeLogin(System.IAsyncResult result) {
            return base.Channel.EndChangeLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndChangeLogin(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ChangeLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndChangeLogin(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginChangeLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string oldAuthenticationToken = ((string)(inValues[1]));
            string newAuthenticationToken = ((string)(inValues[2]));
            bool bUnLock = ((bool)(inValues[3]));
            return this.BeginChangeLogin(HeaderInfo, oldAuthenticationToken, newAuthenticationToken, bUnLock, callback, asyncState);
        }
        
        private object[] OnEndChangeLogin(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndChangeLogin(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnChangeLoginCompleted(object state) {
            if ((this.ChangeLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeLoginCompleted(this, new ChangeLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string oldAuthenticationToken, string newAuthenticationToken, bool bUnLock) {
            this.ChangeLoginAsync(HeaderInfo, oldAuthenticationToken, newAuthenticationToken, bUnLock, null);
        }
        
        public void ChangeLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string oldAuthenticationToken, string newAuthenticationToken, bool bUnLock, object userState) {
            if ((this.onBeginChangeLoginDelegate == null)) {
                this.onBeginChangeLoginDelegate = new BeginOperationDelegate(this.OnBeginChangeLogin);
            }
            if ((this.onEndChangeLoginDelegate == null)) {
                this.onEndChangeLoginDelegate = new EndOperationDelegate(this.OnEndChangeLogin);
            }
            if ((this.onChangeLoginCompletedDelegate == null)) {
                this.onChangeLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeLoginCompleted);
            }
            base.InvokeAsync(this.onBeginChangeLoginDelegate, new object[] {
                        HeaderInfo,
                        oldAuthenticationToken,
                        newAuthenticationToken,
                        bUnLock}, this.onEndChangeLoginDelegate, this.onChangeLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.IsTBLocked(Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn request) {
            return base.Channel.IsTBLocked(request);
        }
        
        public bool IsTBLocked(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).IsTBLocked(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginIsTBLocked(Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsTBLocked(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsTBLocked(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginIsTBLocked(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndIsTBLocked(System.IAsyncResult result) {
            return base.Channel.EndIsTBLocked(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndIsTBLocked(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsTBLockedOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndIsTBLocked(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginIsTBLocked(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginIsTBLocked(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndIsTBLocked(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndIsTBLocked(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnIsTBLockedCompleted(object state) {
            if ((this.IsTBLockedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsTBLockedCompleted(this, new IsTBLockedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsTBLockedAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.IsTBLockedAsync(HeaderInfo, null);
        }
        
        public void IsTBLockedAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginIsTBLockedDelegate == null)) {
                this.onBeginIsTBLockedDelegate = new BeginOperationDelegate(this.OnBeginIsTBLocked);
            }
            if ((this.onEndIsTBLockedDelegate == null)) {
                this.onEndIsTBLockedDelegate = new EndOperationDelegate(this.OnEndIsTBLocked);
            }
            if ((this.onIsTBLockedCompletedDelegate == null)) {
                this.onIsTBLockedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsTBLockedCompleted);
            }
            base.InvokeAsync(this.onBeginIsTBLockedDelegate, new object[] {
                        HeaderInfo}, this.onEndIsTBLockedDelegate, this.onIsTBLockedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.LockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn request) {
            return base.Channel.LockTB(request);
        }
        
        public bool LockTB(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).LockTB(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLockTB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginLockTB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndLockTB(System.IAsyncResult result) {
            return base.Channel.EndLockTB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndLockTB(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LockTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndLockTB(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginLockTB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string authenticationToken = ((string)(inValues[1]));
            return this.BeginLockTB(HeaderInfo, authenticationToken, callback, asyncState);
        }
        
        private object[] OnEndLockTB(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndLockTB(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnLockTBCompleted(object state) {
            if ((this.LockTBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LockTBCompleted(this, new LockTBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LockTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.LockTBAsync(HeaderInfo, authenticationToken, null);
        }
        
        public void LockTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, object userState) {
            if ((this.onBeginLockTBDelegate == null)) {
                this.onBeginLockTBDelegate = new BeginOperationDelegate(this.OnBeginLockTB);
            }
            if ((this.onEndLockTBDelegate == null)) {
                this.onEndLockTBDelegate = new EndOperationDelegate(this.OnEndLockTB);
            }
            if ((this.onLockTBCompletedDelegate == null)) {
                this.onLockTBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLockTBCompleted);
            }
            base.InvokeAsync(this.onBeginLockTBDelegate, new object[] {
                        HeaderInfo,
                        authenticationToken}, this.onEndLockTBDelegate, this.onLockTBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.UnLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn request) {
            return base.Channel.UnLockTB(request);
        }
        
        public bool UnLockTB(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).UnLockTB(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginUnLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnLockTB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnLockTB(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginUnLockTB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndUnLockTB(System.IAsyncResult result) {
            return base.Channel.EndUnLockTB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndUnLockTB(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UnLockTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndUnLockTB(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginUnLockTB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string authenticationToken = ((string)(inValues[1]));
            return this.BeginUnLockTB(HeaderInfo, authenticationToken, callback, asyncState);
        }
        
        private object[] OnEndUnLockTB(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndUnLockTB(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnUnLockTBCompleted(object state) {
            if ((this.UnLockTBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnLockTBCompleted(this, new UnLockTBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnLockTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.UnLockTBAsync(HeaderInfo, authenticationToken, null);
        }
        
        public void UnLockTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, object userState) {
            if ((this.onBeginUnLockTBDelegate == null)) {
                this.onBeginUnLockTBDelegate = new BeginOperationDelegate(this.OnBeginUnLockTB);
            }
            if ((this.onEndUnLockTBDelegate == null)) {
                this.onEndUnLockTBDelegate = new EndOperationDelegate(this.OnEndUnLockTB);
            }
            if ((this.onUnLockTBCompletedDelegate == null)) {
                this.onUnLockTBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnLockTBCompleted);
            }
            base.InvokeAsync(this.onBeginUnLockTBDelegate, new object[] {
                        HeaderInfo,
                        authenticationToken}, this.onEndUnLockTBDelegate, this.onUnLockTBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.ClearCache(Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn request) {
            return base.Channel.ClearCache(request);
        }
        
        public void ClearCache(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).ClearCache(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginClearCache(Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearCache(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginClearCache(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginClearCache(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndClearCache(System.IAsyncResult result) {
            return base.Channel.EndClearCache(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndClearCache(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ClearCacheOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndClearCache(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginClearCache(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginClearCache(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndClearCache(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndClearCache(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearCacheCompleted(object state) {
            if ((this.ClearCacheCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearCacheCompleted(this, new ClearCacheCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearCacheAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.ClearCacheAsync(HeaderInfo, null);
        }
        
        public void ClearCacheAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginClearCacheDelegate == null)) {
                this.onBeginClearCacheDelegate = new BeginOperationDelegate(this.OnBeginClearCache);
            }
            if ((this.onEndClearCacheDelegate == null)) {
                this.onEndClearCacheDelegate = new EndOperationDelegate(this.OnEndClearCache);
            }
            if ((this.onClearCacheCompletedDelegate == null)) {
                this.onClearCacheCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearCacheCompleted);
            }
            base.InvokeAsync(this.onBeginClearCacheDelegate, new object[] {
                        HeaderInfo}, this.onEndClearCacheDelegate, this.onClearCacheCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DisconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn request) {
            return base.Channel.DisconnectCompany(request);
        }
        
        public int DisconnectCompany(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DisconnectCompany(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDisconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnectCompany(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDisconnectCompany(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDisconnectCompany(System.IAsyncResult result) {
            return base.Channel.EndDisconnectCompany(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDisconnectCompany(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DisconnectCompanyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDisconnectCompany(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDisconnectCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string authenticationToken = ((string)(inValues[1]));
            return this.BeginDisconnectCompany(HeaderInfo, authenticationToken, callback, asyncState);
        }
        
        private object[] OnEndDisconnectCompany(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDisconnectCompany(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDisconnectCompanyCompleted(object state) {
            if ((this.DisconnectCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompanyCompleted(this, new DisconnectCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectCompanyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.DisconnectCompanyAsync(HeaderInfo, authenticationToken, null);
        }
        
        public void DisconnectCompanyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, object userState) {
            if ((this.onBeginDisconnectCompanyDelegate == null)) {
                this.onBeginDisconnectCompanyDelegate = new BeginOperationDelegate(this.OnBeginDisconnectCompany);
            }
            if ((this.onEndDisconnectCompanyDelegate == null)) {
                this.onEndDisconnectCompanyDelegate = new EndOperationDelegate(this.OnEndDisconnectCompany);
            }
            if ((this.onDisconnectCompanyCompletedDelegate == null)) {
                this.onDisconnectCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectCompanyDelegate, new object[] {
                        HeaderInfo,
                        authenticationToken}, this.onEndDisconnectCompanyDelegate, this.onDisconnectCompanyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.ReconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn request) {
            return base.Channel.ReconnectCompany(request);
        }
        
        public int ReconnectCompany(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).ReconnectCompany(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginReconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReconnectCompany(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReconnectCompany(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginReconnectCompany(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndReconnectCompany(System.IAsyncResult result) {
            return base.Channel.EndReconnectCompany(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndReconnectCompany(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ReconnectCompanyOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndReconnectCompany(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginReconnectCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string authenticationToken = ((string)(inValues[1]));
            return this.BeginReconnectCompany(HeaderInfo, authenticationToken, callback, asyncState);
        }
        
        private object[] OnEndReconnectCompany(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndReconnectCompany(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnReconnectCompanyCompleted(object state) {
            if ((this.ReconnectCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReconnectCompanyCompleted(this, new ReconnectCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReconnectCompanyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.ReconnectCompanyAsync(HeaderInfo, authenticationToken, null);
        }
        
        public void ReconnectCompanyAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, object userState) {
            if ((this.onBeginReconnectCompanyDelegate == null)) {
                this.onBeginReconnectCompanyDelegate = new BeginOperationDelegate(this.OnBeginReconnectCompany);
            }
            if ((this.onEndReconnectCompanyDelegate == null)) {
                this.onEndReconnectCompanyDelegate = new EndOperationDelegate(this.OnEndReconnectCompany);
            }
            if ((this.onReconnectCompanyCompletedDelegate == null)) {
                this.onReconnectCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReconnectCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginReconnectCompanyDelegate, new object[] {
                        HeaderInfo,
                        authenticationToken}, this.onEndReconnectCompanyDelegate, this.onReconnectCompanyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CanCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn request) {
            return base.Channel.CanCloseLogin(request);
        }
        
        public bool CanCloseLogin(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CanCloseLogin(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCanCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanCloseLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCanCloseLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCanCloseLogin(System.IAsyncResult result) {
            return base.Channel.EndCanCloseLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCanCloseLogin(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCanCloseLogin(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCanCloseLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginCanCloseLogin(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndCanCloseLogin(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCanCloseLogin(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCanCloseLoginCompleted(object state) {
            if ((this.CanCloseLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanCloseLoginCompleted(this, new CanCloseLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanCloseLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.CanCloseLoginAsync(HeaderInfo, null);
        }
        
        public void CanCloseLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginCanCloseLoginDelegate == null)) {
                this.onBeginCanCloseLoginDelegate = new BeginOperationDelegate(this.OnBeginCanCloseLogin);
            }
            if ((this.onEndCanCloseLoginDelegate == null)) {
                this.onEndCanCloseLoginDelegate = new EndOperationDelegate(this.OnEndCanCloseLogin);
            }
            if ((this.onCanCloseLoginCompletedDelegate == null)) {
                this.onCanCloseLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanCloseLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCanCloseLoginDelegate, new object[] {
                        HeaderInfo}, this.onEndCanCloseLoginDelegate, this.onCanCloseLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn request) {
            return base.Channel.CloseLogin(request);
        }
        
        public void CloseLogin(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CloseLogin(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCloseLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCloseLogin(System.IAsyncResult result) {
            return base.Channel.EndCloseLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCloseLogin(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseLoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCloseLogin(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCloseLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginCloseLogin(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndCloseLogin(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCloseLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseLoginCompleted(object state) {
            if ((this.CloseLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseLoginCompleted(this, new CloseLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.CloseLoginAsync(HeaderInfo, null);
        }
        
        public void CloseLoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginCloseLoginDelegate == null)) {
                this.onBeginCloseLoginDelegate = new BeginOperationDelegate(this.OnBeginCloseLogin);
            }
            if ((this.onEndCloseLoginDelegate == null)) {
                this.onEndCloseLoginDelegate = new EndOperationDelegate(this.OnEndCloseLogin);
            }
            if ((this.onCloseLoginCompletedDelegate == null)) {
                this.onCloseLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseLoginCompleted);
            }
            base.InvokeAsync(this.onBeginCloseLoginDelegate, new object[] {
                        HeaderInfo}, this.onEndCloseLoginDelegate, this.onCloseLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.IsLoginValid(Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn request) {
            return base.Channel.IsLoginValid(request);
        }
        
        public bool IsLoginValid(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).IsLoginValid(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginIsLoginValid(Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsLoginValid(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsLoginValid(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginIsLoginValid(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndIsLoginValid(System.IAsyncResult result) {
            return base.Channel.EndIsLoginValid(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndIsLoginValid(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.IsLoginValidOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndIsLoginValid(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginIsLoginValid(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginIsLoginValid(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndIsLoginValid(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndIsLoginValid(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnIsLoginValidCompleted(object state) {
            if ((this.IsLoginValidCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsLoginValidCompleted(this, new IsLoginValidCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsLoginValidAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.IsLoginValidAsync(HeaderInfo, null);
        }
        
        public void IsLoginValidAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginIsLoginValidDelegate == null)) {
                this.onBeginIsLoginValidDelegate = new BeginOperationDelegate(this.OnBeginIsLoginValid);
            }
            if ((this.onEndIsLoginValidDelegate == null)) {
                this.onEndIsLoginValidDelegate = new EndOperationDelegate(this.OnEndIsLoginValid);
            }
            if ((this.onIsLoginValidCompletedDelegate == null)) {
                this.onIsLoginValidCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsLoginValidCompleted);
            }
            base.InvokeAsync(this.onBeginIsLoginValidDelegate, new object[] {
                        HeaderInfo}, this.onEndIsLoginValidDelegate, this.onIsLoginValidCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn request) {
            return base.Channel.CloseTB(request);
        }
        
        public void CloseTB(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CloseTB(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseTB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCloseTB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCloseTB(System.IAsyncResult result) {
            return base.Channel.EndCloseTB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCloseTB(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCloseTB(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCloseTB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginCloseTB(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndCloseTB(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCloseTB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCloseTBCompleted(object state) {
            if ((this.CloseTBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseTBCompleted(this, new CloseTBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.CloseTBAsync(HeaderInfo, null);
        }
        
        public void CloseTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginCloseTBDelegate == null)) {
                this.onBeginCloseTBDelegate = new BeginOperationDelegate(this.OnBeginCloseTB);
            }
            if ((this.onEndCloseTBDelegate == null)) {
                this.onEndCloseTBDelegate = new EndOperationDelegate(this.OnEndCloseTB);
            }
            if ((this.onCloseTBCompletedDelegate == null)) {
                this.onCloseTBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseTBCompleted);
            }
            base.InvokeAsync(this.onBeginCloseTBDelegate, new object[] {
                        HeaderInfo}, this.onEndCloseTBDelegate, this.onCloseTBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DestroyTB(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn request) {
            return base.Channel.DestroyTB(request);
        }
        
        public void DestroyTB(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DestroyTB(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDestroyTB(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDestroyTB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDestroyTB(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDestroyTB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDestroyTB(System.IAsyncResult result) {
            return base.Channel.EndDestroyTB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDestroyTB(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDestroyTB(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDestroyTB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginDestroyTB(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndDestroyTB(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDestroyTB(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDestroyTBCompleted(object state) {
            if ((this.DestroyTBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DestroyTBCompleted(this, new DestroyTBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DestroyTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.DestroyTBAsync(HeaderInfo, null);
        }
        
        public void DestroyTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginDestroyTBDelegate == null)) {
                this.onBeginDestroyTBDelegate = new BeginOperationDelegate(this.OnBeginDestroyTB);
            }
            if ((this.onEndDestroyTBDelegate == null)) {
                this.onEndDestroyTBDelegate = new EndOperationDelegate(this.OnEndDestroyTB);
            }
            if ((this.onDestroyTBCompletedDelegate == null)) {
                this.onDestroyTBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDestroyTBCompleted);
            }
            base.InvokeAsync(this.onBeginDestroyTBDelegate, new object[] {
                        HeaderInfo}, this.onEndDestroyTBDelegate, this.onDestroyTBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.AdminDocumentReports(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn request) {
            return base.Channel.AdminDocumentReports(request);
        }
        
        public void AdminDocumentReports(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).AdminDocumentReports(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginAdminDocumentReports(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdminDocumentReports(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAdminDocumentReports(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginAdminDocumentReports(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndAdminDocumentReports(System.IAsyncResult result) {
            return base.Channel.EndAdminDocumentReports(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndAdminDocumentReports(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentReportsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndAdminDocumentReports(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginAdminDocumentReports(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginAdminDocumentReports(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndAdminDocumentReports(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndAdminDocumentReports(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAdminDocumentReportsCompleted(object state) {
            if ((this.AdminDocumentReportsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AdminDocumentReportsCompleted(this, new AdminDocumentReportsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AdminDocumentReportsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.AdminDocumentReportsAsync(HeaderInfo, null);
        }
        
        public void AdminDocumentReportsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginAdminDocumentReportsDelegate == null)) {
                this.onBeginAdminDocumentReportsDelegate = new BeginOperationDelegate(this.OnBeginAdminDocumentReports);
            }
            if ((this.onEndAdminDocumentReportsDelegate == null)) {
                this.onEndAdminDocumentReportsDelegate = new EndOperationDelegate(this.OnEndAdminDocumentReports);
            }
            if ((this.onAdminDocumentReportsCompletedDelegate == null)) {
                this.onAdminDocumentReportsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAdminDocumentReportsCompleted);
            }
            base.InvokeAsync(this.onBeginAdminDocumentReportsDelegate, new object[] {
                        HeaderInfo}, this.onEndAdminDocumentReportsDelegate, this.onAdminDocumentReportsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.AdminDocumentProfiles(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn request) {
            return base.Channel.AdminDocumentProfiles(request);
        }
        
        public void AdminDocumentProfiles(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).AdminDocumentProfiles(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginAdminDocumentProfiles(Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAdminDocumentProfiles(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAdminDocumentProfiles(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginAdminDocumentProfiles(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndAdminDocumentProfiles(System.IAsyncResult result) {
            return base.Channel.EndAdminDocumentProfiles(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndAdminDocumentProfiles(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.AdminDocumentProfilesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndAdminDocumentProfiles(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginAdminDocumentProfiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginAdminDocumentProfiles(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndAdminDocumentProfiles(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndAdminDocumentProfiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAdminDocumentProfilesCompleted(object state) {
            if ((this.AdminDocumentProfilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AdminDocumentProfilesCompleted(this, new AdminDocumentProfilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AdminDocumentProfilesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.AdminDocumentProfilesAsync(HeaderInfo, null);
        }
        
        public void AdminDocumentProfilesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginAdminDocumentProfilesDelegate == null)) {
                this.onBeginAdminDocumentProfilesDelegate = new BeginOperationDelegate(this.OnBeginAdminDocumentProfiles);
            }
            if ((this.onEndAdminDocumentProfilesDelegate == null)) {
                this.onEndAdminDocumentProfilesDelegate = new EndOperationDelegate(this.OnEndAdminDocumentProfiles);
            }
            if ((this.onAdminDocumentProfilesCompletedDelegate == null)) {
                this.onAdminDocumentProfilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAdminDocumentProfilesCompleted);
            }
            base.InvokeAsync(this.onBeginAdminDocumentProfilesDelegate, new object[] {
                        HeaderInfo}, this.onEndAdminDocumentProfilesDelegate, this.onAdminDocumentProfilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetHotlinkQuery(Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn request) {
            return base.Channel.GetHotlinkQuery(request);
        }
        
        public string GetHotlinkQuery(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string hotLinkNamespace, string arguments, int action) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.hotLinkNamespace = hotLinkNamespace;
            inValue.arguments = arguments;
            inValue.action = action;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetHotlinkQuery(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetHotlinkQuery(Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHotlinkQuery(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHotlinkQuery(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string hotLinkNamespace, string arguments, int action, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.hotLinkNamespace = hotLinkNamespace;
            inValue.arguments = arguments;
            inValue.action = action;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetHotlinkQuery(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetHotlinkQuery(System.IAsyncResult result) {
            return base.Channel.EndGetHotlinkQuery(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetHotlinkQuery(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetHotlinkQueryOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetHotlinkQuery(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetHotlinkQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string hotLinkNamespace = ((string)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            int action = ((int)(inValues[3]));
            return this.BeginGetHotlinkQuery(HeaderInfo, hotLinkNamespace, arguments, action, callback, asyncState);
        }
        
        private object[] OnEndGetHotlinkQuery(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetHotlinkQuery(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetHotlinkQueryCompleted(object state) {
            if ((this.GetHotlinkQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHotlinkQueryCompleted(this, new GetHotlinkQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHotlinkQueryAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string hotLinkNamespace, string arguments, int action) {
            this.GetHotlinkQueryAsync(HeaderInfo, hotLinkNamespace, arguments, action, null);
        }
        
        public void GetHotlinkQueryAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string hotLinkNamespace, string arguments, int action, object userState) {
            if ((this.onBeginGetHotlinkQueryDelegate == null)) {
                this.onBeginGetHotlinkQueryDelegate = new BeginOperationDelegate(this.OnBeginGetHotlinkQuery);
            }
            if ((this.onEndGetHotlinkQueryDelegate == null)) {
                this.onEndGetHotlinkQueryDelegate = new EndOperationDelegate(this.OnEndGetHotlinkQuery);
            }
            if ((this.onGetHotlinkQueryCompletedDelegate == null)) {
                this.onGetHotlinkQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHotlinkQueryCompleted);
            }
            base.InvokeAsync(this.onBeginGetHotlinkQueryDelegate, new object[] {
                        HeaderInfo,
                        hotLinkNamespace,
                        arguments,
                        action}, this.onEndGetHotlinkQueryDelegate, this.onGetHotlinkQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetDocumentParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn request) {
            return base.Channel.GetDocumentParameters(request);
        }
        
        public bool GetDocumentParameters(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, ref string xmlParams, string code) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.xmlParams = xmlParams;
            inValue.code = code;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetDocumentParameters(inValue);
            HeaderInfo = retVal.HeaderInfo;
            xmlParams = retVal.xmlParams;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetDocumentParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentParameters(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.xmlParams = xmlParams;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetDocumentParameters(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetDocumentParameters(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentParameters(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetDocumentParameters(System.IAsyncResult result, out bool @return, out string xmlParams) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentParametersOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetDocumentParameters(result);
            @return = retVal.@return;
            xmlParams = retVal.xmlParams;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetDocumentParameters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string documentNamespace = ((string)(inValues[1]));
            string xmlParams = ((string)(inValues[2]));
            return this.BeginGetDocumentParameters(HeaderInfo, documentNamespace, xmlParams, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentParameters(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            string xmlParams = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetDocumentParameters(result, out @return, out xmlParams);
            return new object[] {
                    @return,
                    xmlParams,
                    retVal};
        }
        
        private void OnGetDocumentParametersCompleted(object state) {
            if ((this.GetDocumentParametersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentParametersCompleted(this, new GetDocumentParametersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentParametersAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams) {
            this.GetDocumentParametersAsync(HeaderInfo, documentNamespace, xmlParams, null);
        }
        
        public void GetDocumentParametersAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, object userState) {
            if ((this.onBeginGetDocumentParametersDelegate == null)) {
                this.onBeginGetDocumentParametersDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentParameters);
            }
            if ((this.onEndGetDocumentParametersDelegate == null)) {
                this.onEndGetDocumentParametersDelegate = new EndOperationDelegate(this.OnEndGetDocumentParameters);
            }
            if ((this.onGetDocumentParametersCompletedDelegate == null)) {
                this.onGetDocumentParametersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentParametersCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentParametersDelegate, new object[] {
                        HeaderInfo,
                        documentNamespace,
                        xmlParams}, this.onEndGetDocumentParametersDelegate, this.onGetDocumentParametersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetReportParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn request) {
            return base.Channel.GetReportParameters(request);
        }
        
        public bool GetReportParameters(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, ref string xmlParams, string code) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            inValue.xmlParams = xmlParams;
            inValue.code = code;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetReportParameters(inValue);
            HeaderInfo = retVal.HeaderInfo;
            xmlParams = retVal.xmlParams;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetReportParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportParameters(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReportParameters(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string xmlParams, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            inValue.xmlParams = xmlParams;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetReportParameters(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetReportParameters(System.IAsyncResult result) {
            return base.Channel.EndGetReportParameters(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetReportParameters(System.IAsyncResult result, out bool @return, out string xmlParams) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetReportParametersOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetReportParameters(result);
            @return = retVal.@return;
            xmlParams = retVal.xmlParams;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetReportParameters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string reportNamespace = ((string)(inValues[1]));
            string xmlParams = ((string)(inValues[2]));
            return this.BeginGetReportParameters(HeaderInfo, reportNamespace, xmlParams, callback, asyncState);
        }
        
        private object[] OnEndGetReportParameters(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            string xmlParams = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetReportParameters(result, out @return, out xmlParams);
            return new object[] {
                    @return,
                    xmlParams,
                    retVal};
        }
        
        private void OnGetReportParametersCompleted(object state) {
            if ((this.GetReportParametersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportParametersCompleted(this, new GetReportParametersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportParametersAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string xmlParams) {
            this.GetReportParametersAsync(HeaderInfo, reportNamespace, xmlParams, null);
        }
        
        public void GetReportParametersAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string xmlParams, object userState) {
            if ((this.onBeginGetReportParametersDelegate == null)) {
                this.onBeginGetReportParametersDelegate = new BeginOperationDelegate(this.OnBeginGetReportParameters);
            }
            if ((this.onEndGetReportParametersDelegate == null)) {
                this.onEndGetReportParametersDelegate = new EndOperationDelegate(this.OnEndGetReportParameters);
            }
            if ((this.onGetReportParametersCompletedDelegate == null)) {
                this.onGetReportParametersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportParametersCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportParametersDelegate, new object[] {
                        HeaderInfo,
                        reportNamespace,
                        xmlParams}, this.onEndGetReportParametersDelegate, this.onGetReportParametersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunBatchInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn request) {
            return base.Channel.RunBatchInUnattendedMode(request);
        }
        
        public bool RunBatchInUnattendedMode(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, ref int documentHandle, ref string[] messages) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.xmlParams = xmlParams;
            inValue.documentHandle = documentHandle;
            inValue.messages = messages;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunBatchInUnattendedMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            documentHandle = retVal.documentHandle;
            messages = retVal.messages;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunBatchInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunBatchInUnattendedMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunBatchInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, int documentHandle, string[] messages, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.xmlParams = xmlParams;
            inValue.documentHandle = documentHandle;
            inValue.messages = messages;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunBatchInUnattendedMode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunBatchInUnattendedMode(System.IAsyncResult result) {
            return base.Channel.EndRunBatchInUnattendedMode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunBatchInUnattendedMode(System.IAsyncResult result, out bool @return, out int documentHandle, out string[] messages) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunBatchInUnattendedModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunBatchInUnattendedMode(result);
            @return = retVal.@return;
            documentHandle = retVal.documentHandle;
            messages = retVal.messages;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunBatchInUnattendedMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string documentNamespace = ((string)(inValues[1]));
            string xmlParams = ((string)(inValues[2]));
            int documentHandle = ((int)(inValues[3]));
            string[] messages = ((string[])(inValues[4]));
            return this.BeginRunBatchInUnattendedMode(HeaderInfo, documentNamespace, xmlParams, documentHandle, messages, callback, asyncState);
        }
        
        private object[] OnEndRunBatchInUnattendedMode(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            int documentHandle = this.GetDefaultValueForInitialization<int>();
            string[] messages = this.GetDefaultValueForInitialization<string[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunBatchInUnattendedMode(result, out @return, out documentHandle, out messages);
            return new object[] {
                    @return,
                    documentHandle,
                    messages,
                    retVal};
        }
        
        private void OnRunBatchInUnattendedModeCompleted(object state) {
            if ((this.RunBatchInUnattendedModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunBatchInUnattendedModeCompleted(this, new RunBatchInUnattendedModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunBatchInUnattendedModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, int documentHandle, string[] messages) {
            this.RunBatchInUnattendedModeAsync(HeaderInfo, documentNamespace, xmlParams, documentHandle, messages, null);
        }
        
        public void RunBatchInUnattendedModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string xmlParams, int documentHandle, string[] messages, object userState) {
            if ((this.onBeginRunBatchInUnattendedModeDelegate == null)) {
                this.onBeginRunBatchInUnattendedModeDelegate = new BeginOperationDelegate(this.OnBeginRunBatchInUnattendedMode);
            }
            if ((this.onEndRunBatchInUnattendedModeDelegate == null)) {
                this.onEndRunBatchInUnattendedModeDelegate = new EndOperationDelegate(this.OnEndRunBatchInUnattendedMode);
            }
            if ((this.onRunBatchInUnattendedModeCompletedDelegate == null)) {
                this.onRunBatchInUnattendedModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunBatchInUnattendedModeCompleted);
            }
            base.InvokeAsync(this.onBeginRunBatchInUnattendedModeDelegate, new object[] {
                        HeaderInfo,
                        documentNamespace,
                        xmlParams,
                        documentHandle,
                        messages}, this.onEndRunBatchInUnattendedModeDelegate, this.onRunBatchInUnattendedModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunReportInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn request) {
            return base.Channel.RunReportInUnattendedMode(request);
        }
        
        public bool RunReportInUnattendedMode(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string xmlParams, ref int reportHandle, ref string[] messages) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.woormInfoHandle = woormInfoHandle;
            inValue.xmlParams = xmlParams;
            inValue.reportHandle = reportHandle;
            inValue.messages = messages;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunReportInUnattendedMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
            reportHandle = retVal.reportHandle;
            messages = retVal.messages;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunReportInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunReportInUnattendedMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunReportInUnattendedMode(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string xmlParams, int reportHandle, string[] messages, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.woormInfoHandle = woormInfoHandle;
            inValue.xmlParams = xmlParams;
            inValue.reportHandle = reportHandle;
            inValue.messages = messages;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunReportInUnattendedMode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunReportInUnattendedMode(System.IAsyncResult result) {
            return base.Channel.EndRunReportInUnattendedMode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunReportInUnattendedMode(System.IAsyncResult result, out bool @return, out int reportHandle, out string[] messages) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportInUnattendedModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunReportInUnattendedMode(result);
            @return = retVal.@return;
            reportHandle = retVal.reportHandle;
            messages = retVal.messages;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunReportInUnattendedMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int woormInfoHandle = ((int)(inValues[1]));
            string xmlParams = ((string)(inValues[2]));
            int reportHandle = ((int)(inValues[3]));
            string[] messages = ((string[])(inValues[4]));
            return this.BeginRunReportInUnattendedMode(HeaderInfo, woormInfoHandle, xmlParams, reportHandle, messages, callback, asyncState);
        }
        
        private object[] OnEndRunReportInUnattendedMode(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            int reportHandle = this.GetDefaultValueForInitialization<int>();
            string[] messages = this.GetDefaultValueForInitialization<string[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunReportInUnattendedMode(result, out @return, out reportHandle, out messages);
            return new object[] {
                    @return,
                    reportHandle,
                    messages,
                    retVal};
        }
        
        private void OnRunReportInUnattendedModeCompleted(object state) {
            if ((this.RunReportInUnattendedModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunReportInUnattendedModeCompleted(this, new RunReportInUnattendedModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunReportInUnattendedModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string xmlParams, int reportHandle, string[] messages) {
            this.RunReportInUnattendedModeAsync(HeaderInfo, woormInfoHandle, xmlParams, reportHandle, messages, null);
        }
        
        public void RunReportInUnattendedModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string xmlParams, int reportHandle, string[] messages, object userState) {
            if ((this.onBeginRunReportInUnattendedModeDelegate == null)) {
                this.onBeginRunReportInUnattendedModeDelegate = new BeginOperationDelegate(this.OnBeginRunReportInUnattendedMode);
            }
            if ((this.onEndRunReportInUnattendedModeDelegate == null)) {
                this.onEndRunReportInUnattendedModeDelegate = new EndOperationDelegate(this.OnEndRunReportInUnattendedMode);
            }
            if ((this.onRunReportInUnattendedModeCompletedDelegate == null)) {
                this.onRunReportInUnattendedModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunReportInUnattendedModeCompleted);
            }
            base.InvokeAsync(this.onBeginRunReportInUnattendedModeDelegate, new object[] {
                        HeaderInfo,
                        woormInfoHandle,
                        xmlParams,
                        reportHandle,
                        messages}, this.onEndRunReportInUnattendedModeDelegate, this.onRunReportInUnattendedModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunFunction(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn request) {
            return base.Channel.RunFunction(request);
        }
        
        public bool RunFunction(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            inValue.arguments = arguments;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunFunction(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunFunction(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunFunction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunFunction(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            inValue.arguments = arguments;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunFunction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunFunction(System.IAsyncResult result) {
            return base.Channel.EndRunFunction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunFunction(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunFunction(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunFunction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string functionNamespace = ((string)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            return this.BeginRunFunction(HeaderInfo, functionNamespace, arguments, callback, asyncState);
        }
        
        private object[] OnEndRunFunction(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunFunction(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunFunctionCompleted(object state) {
            if ((this.RunFunctionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunFunctionCompleted(this, new RunFunctionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunFunctionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            this.RunFunctionAsync(HeaderInfo, functionNamespace, arguments, null);
        }
        
        public void RunFunctionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments, object userState) {
            if ((this.onBeginRunFunctionDelegate == null)) {
                this.onBeginRunFunctionDelegate = new BeginOperationDelegate(this.OnBeginRunFunction);
            }
            if ((this.onEndRunFunctionDelegate == null)) {
                this.onEndRunFunctionDelegate = new EndOperationDelegate(this.OnEndRunFunction);
            }
            if ((this.onRunFunctionCompletedDelegate == null)) {
                this.onRunFunctionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunFunctionCompleted);
            }
            base.InvokeAsync(this.onBeginRunFunctionDelegate, new object[] {
                        HeaderInfo,
                        functionNamespace,
                        arguments}, this.onEndRunFunctionDelegate, this.onRunFunctionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunFunctionInNewThread(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn request) {
            return base.Channel.RunFunctionInNewThread(request);
        }
        
        public void RunFunctionInNewThread(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            inValue.arguments = arguments;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunFunctionInNewThread(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunFunctionInNewThread(Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunFunctionInNewThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunFunctionInNewThread(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            inValue.arguments = arguments;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunFunctionInNewThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunFunctionInNewThread(System.IAsyncResult result) {
            return base.Channel.EndRunFunctionInNewThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunFunctionInNewThread(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunFunctionInNewThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunFunctionInNewThread(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunFunctionInNewThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string functionNamespace = ((string)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            return this.BeginRunFunctionInNewThread(HeaderInfo, functionNamespace, arguments, callback, asyncState);
        }
        
        private object[] OnEndRunFunctionInNewThread(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunFunctionInNewThread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRunFunctionInNewThreadCompleted(object state) {
            if ((this.RunFunctionInNewThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunFunctionInNewThreadCompleted(this, new RunFunctionInNewThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunFunctionInNewThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments) {
            this.RunFunctionInNewThreadAsync(HeaderInfo, functionNamespace, arguments, null);
        }
        
        public void RunFunctionInNewThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, string arguments, object userState) {
            if ((this.onBeginRunFunctionInNewThreadDelegate == null)) {
                this.onBeginRunFunctionInNewThreadDelegate = new BeginOperationDelegate(this.OnBeginRunFunctionInNewThread);
            }
            if ((this.onEndRunFunctionInNewThreadDelegate == null)) {
                this.onEndRunFunctionInNewThreadDelegate = new EndOperationDelegate(this.OnEndRunFunctionInNewThread);
            }
            if ((this.onRunFunctionInNewThreadCompletedDelegate == null)) {
                this.onRunFunctionInNewThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunFunctionInNewThreadCompleted);
            }
            base.InvokeAsync(this.onBeginRunFunctionInNewThreadDelegate, new object[] {
                        HeaderInfo,
                        functionNamespace,
                        arguments}, this.onEndRunFunctionInNewThreadDelegate, this.onRunFunctionInNewThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunEditor(Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn request) {
            return base.Channel.RunEditor(request);
        }
        
        public bool RunEditor(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunEditor(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunEditor(Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunEditor(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunEditor(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.functionNamespace = functionNamespace;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunEditor(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunEditor(System.IAsyncResult result) {
            return base.Channel.EndRunEditor(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunEditor(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunEditorOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunEditor(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunEditor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string functionNamespace = ((string)(inValues[1]));
            return this.BeginRunEditor(HeaderInfo, functionNamespace, callback, asyncState);
        }
        
        private object[] OnEndRunEditor(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunEditor(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunEditorCompleted(object state) {
            if ((this.RunEditorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunEditorCompleted(this, new RunEditorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunEditorAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace) {
            this.RunEditorAsync(HeaderInfo, functionNamespace, null);
        }
        
        public void RunEditorAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string functionNamespace, object userState) {
            if ((this.onBeginRunEditorDelegate == null)) {
                this.onBeginRunEditorDelegate = new BeginOperationDelegate(this.OnBeginRunEditor);
            }
            if ((this.onEndRunEditorDelegate == null)) {
                this.onEndRunEditorDelegate = new EndOperationDelegate(this.OnEndRunEditor);
            }
            if ((this.onRunEditorCompletedDelegate == null)) {
                this.onRunEditorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunEditorCompleted);
            }
            base.InvokeAsync(this.onBeginRunEditorDelegate, new object[] {
                        HeaderInfo,
                        functionNamespace}, this.onEndRunEditorDelegate, this.onRunEditorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn request) {
            return base.Channel.CloseDocument(request);
        }
        
        public bool CloseDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CloseDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCloseDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCloseDocument(System.IAsyncResult result) {
            return base.Channel.EndCloseDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCloseDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCloseDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCloseDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginCloseDocument(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndCloseDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCloseDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCloseDocumentCompleted(object state) {
            if ((this.CloseDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseDocumentCompleted(this, new CloseDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.CloseDocumentAsync(HeaderInfo, documentHandle, null);
        }
        
        public void CloseDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginCloseDocumentDelegate == null)) {
                this.onBeginCloseDocumentDelegate = new BeginOperationDelegate(this.OnBeginCloseDocument);
            }
            if ((this.onEndCloseDocumentDelegate == null)) {
                this.onEndCloseDocumentDelegate = new EndOperationDelegate(this.OnEndCloseDocument);
            }
            if ((this.onCloseDocumentCompletedDelegate == null)) {
                this.onCloseDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndCloseDocumentDelegate, this.onCloseDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunIconizedDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn request) {
            return base.Channel.RunIconizedDocument(request);
        }
        
        public bool RunIconizedDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunIconizedDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunIconizedDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunIconizedDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunIconizedDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunIconizedDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunIconizedDocument(System.IAsyncResult result) {
            return base.Channel.EndRunIconizedDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunIconizedDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunIconizedDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunIconizedDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunIconizedDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginRunIconizedDocument(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndRunIconizedDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunIconizedDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunIconizedDocumentCompleted(object state) {
            if ((this.RunIconizedDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunIconizedDocumentCompleted(this, new RunIconizedDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunIconizedDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.RunIconizedDocumentAsync(HeaderInfo, documentHandle, null);
        }
        
        public void RunIconizedDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginRunIconizedDocumentDelegate == null)) {
                this.onBeginRunIconizedDocumentDelegate = new BeginOperationDelegate(this.OnBeginRunIconizedDocument);
            }
            if ((this.onEndRunIconizedDocumentDelegate == null)) {
                this.onEndRunIconizedDocumentDelegate = new EndOperationDelegate(this.OnEndRunIconizedDocument);
            }
            if ((this.onRunIconizedDocumentCompletedDelegate == null)) {
                this.onRunIconizedDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunIconizedDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginRunIconizedDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndRunIconizedDocumentDelegate, this.onRunIconizedDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CanCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn request) {
            return base.Channel.CanCloseDocument(request);
        }
        
        public bool CanCloseDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CanCloseDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCanCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanCloseDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanCloseDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCanCloseDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCanCloseDocument(System.IAsyncResult result) {
            return base.Channel.EndCanCloseDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCanCloseDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCanCloseDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCanCloseDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginCanCloseDocument(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndCanCloseDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCanCloseDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCanCloseDocumentCompleted(object state) {
            if ((this.CanCloseDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanCloseDocumentCompleted(this, new CanCloseDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanCloseDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.CanCloseDocumentAsync(HeaderInfo, documentHandle, null);
        }
        
        public void CanCloseDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginCanCloseDocumentDelegate == null)) {
                this.onBeginCanCloseDocumentDelegate = new BeginOperationDelegate(this.OnBeginCanCloseDocument);
            }
            if ((this.onEndCanCloseDocumentDelegate == null)) {
                this.onEndCanCloseDocumentDelegate = new EndOperationDelegate(this.OnEndCanCloseDocument);
            }
            if ((this.onCanCloseDocumentCompletedDelegate == null)) {
                this.onCanCloseDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanCloseDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginCanCloseDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndCanCloseDocumentDelegate, this.onCanCloseDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.ExistDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn request) {
            return base.Channel.ExistDocument(request);
        }
        
        public bool ExistDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).ExistDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginExistDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExistDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginExistDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginExistDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndExistDocument(System.IAsyncResult result) {
            return base.Channel.EndExistDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndExistDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.ExistDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndExistDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginExistDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginExistDocument(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndExistDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndExistDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnExistDocumentCompleted(object state) {
            if ((this.ExistDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExistDocumentCompleted(this, new ExistDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExistDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.ExistDocumentAsync(HeaderInfo, documentHandle, null);
        }
        
        public void ExistDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginExistDocumentDelegate == null)) {
                this.onBeginExistDocumentDelegate = new BeginOperationDelegate(this.OnBeginExistDocument);
            }
            if ((this.onEndExistDocumentDelegate == null)) {
                this.onEndExistDocumentDelegate = new EndOperationDelegate(this.OnEndExistDocument);
            }
            if ((this.onExistDocumentCompletedDelegate == null)) {
                this.onExistDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExistDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginExistDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndExistDocumentDelegate, this.onExistDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DestroyDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn request) {
            return base.Channel.DestroyDocument(request);
        }
        
        public bool DestroyDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DestroyDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDestroyDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDestroyDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDestroyDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDestroyDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDestroyDocument(System.IAsyncResult result) {
            return base.Channel.EndDestroyDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDestroyDocument(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DestroyDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDestroyDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDestroyDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginDestroyDocument(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndDestroyDocument(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDestroyDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDestroyDocumentCompleted(object state) {
            if ((this.DestroyDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DestroyDocumentCompleted(this, new DestroyDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DestroyDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.DestroyDocumentAsync(HeaderInfo, documentHandle, null);
        }
        
        public void DestroyDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginDestroyDocumentDelegate == null)) {
                this.onBeginDestroyDocumentDelegate = new BeginOperationDelegate(this.OnBeginDestroyDocument);
            }
            if ((this.onEndDestroyDocumentDelegate == null)) {
                this.onEndDestroyDocumentDelegate = new EndOperationDelegate(this.OnEndDestroyDocument);
            }
            if ((this.onDestroyDocumentCompletedDelegate == null)) {
                this.onDestroyDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDestroyDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginDestroyDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndDestroyDocumentDelegate, this.onDestroyDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CloseAllDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn request) {
            return base.Channel.CloseAllDocuments(request);
        }
        
        public bool CloseAllDocuments(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CloseAllDocuments(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCloseAllDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseAllDocuments(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCloseAllDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCloseAllDocuments(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCloseAllDocuments(System.IAsyncResult result) {
            return base.Channel.EndCloseAllDocuments(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCloseAllDocuments(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CloseAllDocumentsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCloseAllDocuments(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCloseAllDocuments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginCloseAllDocuments(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndCloseAllDocuments(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCloseAllDocuments(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCloseAllDocumentsCompleted(object state) {
            if ((this.CloseAllDocumentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseAllDocumentsCompleted(this, new CloseAllDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAllDocumentsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.CloseAllDocumentsAsync(HeaderInfo, null);
        }
        
        public void CloseAllDocumentsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginCloseAllDocumentsDelegate == null)) {
                this.onBeginCloseAllDocumentsDelegate = new BeginOperationDelegate(this.OnBeginCloseAllDocuments);
            }
            if ((this.onEndCloseAllDocumentsDelegate == null)) {
                this.onEndCloseAllDocumentsDelegate = new EndOperationDelegate(this.OnEndCloseAllDocuments);
            }
            if ((this.onCloseAllDocumentsCompletedDelegate == null)) {
                this.onCloseAllDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseAllDocumentsCompleted);
            }
            base.InvokeAsync(this.onBeginCloseAllDocumentsDelegate, new object[] {
                        HeaderInfo}, this.onEndCloseAllDocumentsDelegate, this.onCloseAllDocumentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetOpenDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn request) {
            return base.Channel.GetOpenDocuments(request);
        }
        
        public int[] GetOpenDocuments(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetOpenDocuments(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetOpenDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOpenDocuments(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOpenDocuments(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetOpenDocuments(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetOpenDocuments(System.IAsyncResult result) {
            return base.Channel.EndGetOpenDocuments(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetOpenDocuments(System.IAsyncResult result, out int[] @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetOpenDocumentsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetOpenDocuments(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetOpenDocuments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetOpenDocuments(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetOpenDocuments(System.IAsyncResult result) {
            int[] @return = this.GetDefaultValueForInitialization<int[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetOpenDocuments(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetOpenDocumentsCompleted(object state) {
            if ((this.GetOpenDocumentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOpenDocumentsCompleted(this, new GetOpenDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOpenDocumentsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetOpenDocumentsAsync(HeaderInfo, null);
        }
        
        public void GetOpenDocumentsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetOpenDocumentsDelegate == null)) {
                this.onBeginGetOpenDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetOpenDocuments);
            }
            if ((this.onEndGetOpenDocumentsDelegate == null)) {
                this.onEndGetOpenDocumentsDelegate = new EndOperationDelegate(this.OnEndGetOpenDocuments);
            }
            if ((this.onGetOpenDocumentsCompletedDelegate == null)) {
                this.onGetOpenDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOpenDocumentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOpenDocumentsDelegate, new object[] {
                        HeaderInfo}, this.onEndGetOpenDocumentsDelegate, this.onGetOpenDocumentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetApplicationContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn request) {
            return base.Channel.GetApplicationContextMessages(request);
        }
        
        public void GetApplicationContextMessages(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, ref string[] messages, ref int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetApplicationContextMessages(inValue);
            HeaderInfo = retVal.HeaderInfo;
            messages = retVal.messages;
            types = retVal.types;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetApplicationContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationContextMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetApplicationContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetApplicationContextMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetApplicationContextMessages(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationContextMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetApplicationContextMessages(System.IAsyncResult result, out string[] messages, out int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetApplicationContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetApplicationContextMessages(result);
            messages = retVal.messages;
            types = retVal.types;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetApplicationContextMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            bool clearMessages = ((bool)(inValues[1]));
            string[] messages = ((string[])(inValues[2]));
            int[] types = ((int[])(inValues[3]));
            return this.BeginGetApplicationContextMessages(HeaderInfo, clearMessages, messages, types, callback, asyncState);
        }
        
        private object[] OnEndGetApplicationContextMessages(System.IAsyncResult result) {
            string[] messages = this.GetDefaultValueForInitialization<string[]>();
            int[] types = this.GetDefaultValueForInitialization<int[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetApplicationContextMessages(result, out messages, out types);
            return new object[] {
                    messages,
                    types,
                    retVal};
        }
        
        private void OnGetApplicationContextMessagesCompleted(object state) {
            if ((this.GetApplicationContextMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationContextMessagesCompleted(this, new GetApplicationContextMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types) {
            this.GetApplicationContextMessagesAsync(HeaderInfo, clearMessages, messages, types, null);
        }
        
        public void GetApplicationContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types, object userState) {
            if ((this.onBeginGetApplicationContextMessagesDelegate == null)) {
                this.onBeginGetApplicationContextMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationContextMessages);
            }
            if ((this.onEndGetApplicationContextMessagesDelegate == null)) {
                this.onEndGetApplicationContextMessagesDelegate = new EndOperationDelegate(this.OnEndGetApplicationContextMessages);
            }
            if ((this.onGetApplicationContextMessagesCompletedDelegate == null)) {
                this.onGetApplicationContextMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationContextMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationContextMessagesDelegate, new object[] {
                        HeaderInfo,
                        clearMessages,
                        messages,
                        types}, this.onEndGetApplicationContextMessagesDelegate, this.onGetApplicationContextMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetLoginContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn request) {
            return base.Channel.GetLoginContextMessages(request);
        }
        
        public void GetLoginContextMessages(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, ref string[] messages, ref int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetLoginContextMessages(inValue);
            HeaderInfo = retVal.HeaderInfo;
            messages = retVal.messages;
            types = retVal.types;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetLoginContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginContextMessages(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLoginContextMessages(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.clearMessages = clearMessages;
            inValue.messages = messages;
            inValue.types = types;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetLoginContextMessages(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetLoginContextMessages(System.IAsyncResult result) {
            return base.Channel.EndGetLoginContextMessages(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetLoginContextMessages(System.IAsyncResult result, out string[] messages, out int[] types) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginContextMessagesOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetLoginContextMessages(result);
            messages = retVal.messages;
            types = retVal.types;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetLoginContextMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            bool clearMessages = ((bool)(inValues[1]));
            string[] messages = ((string[])(inValues[2]));
            int[] types = ((int[])(inValues[3]));
            return this.BeginGetLoginContextMessages(HeaderInfo, clearMessages, messages, types, callback, asyncState);
        }
        
        private object[] OnEndGetLoginContextMessages(System.IAsyncResult result) {
            string[] messages = this.GetDefaultValueForInitialization<string[]>();
            int[] types = this.GetDefaultValueForInitialization<int[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetLoginContextMessages(result, out messages, out types);
            return new object[] {
                    messages,
                    types,
                    retVal};
        }
        
        private void OnGetLoginContextMessagesCompleted(object state) {
            if ((this.GetLoginContextMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginContextMessagesCompleted(this, new GetLoginContextMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types) {
            this.GetLoginContextMessagesAsync(HeaderInfo, clearMessages, messages, types, null);
        }
        
        public void GetLoginContextMessagesAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool clearMessages, string[] messages, int[] types, object userState) {
            if ((this.onBeginGetLoginContextMessagesDelegate == null)) {
                this.onBeginGetLoginContextMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetLoginContextMessages);
            }
            if ((this.onEndGetLoginContextMessagesDelegate == null)) {
                this.onEndGetLoginContextMessagesDelegate = new EndOperationDelegate(this.OnEndGetLoginContextMessages);
            }
            if ((this.onGetLoginContextMessagesCompletedDelegate == null)) {
                this.onGetLoginContextMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginContextMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginContextMessagesDelegate, new object[] {
                        HeaderInfo,
                        clearMessages,
                        messages,
                        types}, this.onEndGetLoginContextMessagesDelegate, this.onGetLoginContextMessagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CanCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn request) {
            return base.Channel.CanCloseTB(request);
        }
        
        public bool CanCloseTB(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CanCloseTB(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCanCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanCloseTB(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanCloseTB(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCanCloseTB(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCanCloseTB(System.IAsyncResult result) {
            return base.Channel.EndCanCloseTB(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCanCloseTB(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanCloseTBOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCanCloseTB(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCanCloseTB(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginCanCloseTB(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndCanCloseTB(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCanCloseTB(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCanCloseTBCompleted(object state) {
            if ((this.CanCloseTBCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanCloseTBCompleted(this, new CanCloseTBCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanCloseTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.CanCloseTBAsync(HeaderInfo, null);
        }
        
        public void CanCloseTBAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginCanCloseTBDelegate == null)) {
                this.onBeginCanCloseTBDelegate = new BeginOperationDelegate(this.OnBeginCanCloseTB);
            }
            if ((this.onEndCanCloseTBDelegate == null)) {
                this.onEndCanCloseTBDelegate = new EndOperationDelegate(this.OnEndCanCloseTB);
            }
            if ((this.onCanCloseTBCompletedDelegate == null)) {
                this.onCanCloseTBCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanCloseTBCompleted);
            }
            base.InvokeAsync(this.onBeginCanCloseTBDelegate, new object[] {
                        HeaderInfo}, this.onEndCanCloseTBDelegate, this.onCanCloseTBCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.KillThread(Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn request) {
            return base.Channel.KillThread(request);
        }
        
        public void KillThread(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).KillThread(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginKillThread(Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKillThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginKillThread(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginKillThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndKillThread(System.IAsyncResult result) {
            return base.Channel.EndKillThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndKillThread(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.KillThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndKillThread(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginKillThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int ThreadId = ((int)(inValues[1]));
            return this.BeginKillThread(HeaderInfo, ThreadId, callback, asyncState);
        }
        
        private object[] OnEndKillThread(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndKillThread(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKillThreadCompleted(object state) {
            if ((this.KillThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.KillThreadCompleted(this, new KillThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void KillThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.KillThreadAsync(HeaderInfo, ThreadId, null);
        }
        
        public void KillThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, object userState) {
            if ((this.onBeginKillThreadDelegate == null)) {
                this.onBeginKillThreadDelegate = new BeginOperationDelegate(this.OnBeginKillThread);
            }
            if ((this.onEndKillThreadDelegate == null)) {
                this.onEndKillThreadDelegate = new EndOperationDelegate(this.OnEndKillThread);
            }
            if ((this.onKillThreadCompletedDelegate == null)) {
                this.onKillThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKillThreadCompleted);
            }
            base.InvokeAsync(this.onBeginKillThreadDelegate, new object[] {
                        HeaderInfo,
                        ThreadId}, this.onEndKillThreadDelegate, this.onKillThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.StopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn request) {
            return base.Channel.StopThread(request);
        }
        
        public bool StopThread(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).StopThread(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginStopThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndStopThread(System.IAsyncResult result) {
            return base.Channel.EndStopThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndStopThread(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.StopThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndStopThread(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginStopThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int ThreadId = ((int)(inValues[1]));
            return this.BeginStopThread(HeaderInfo, ThreadId, callback, asyncState);
        }
        
        private object[] OnEndStopThread(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndStopThread(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnStopThreadCompleted(object state) {
            if ((this.StopThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopThreadCompleted(this, new StopThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.StopThreadAsync(HeaderInfo, ThreadId, null);
        }
        
        public void StopThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, object userState) {
            if ((this.onBeginStopThreadDelegate == null)) {
                this.onBeginStopThreadDelegate = new BeginOperationDelegate(this.OnBeginStopThread);
            }
            if ((this.onEndStopThreadDelegate == null)) {
                this.onEndStopThreadDelegate = new EndOperationDelegate(this.OnEndStopThread);
            }
            if ((this.onStopThreadCompletedDelegate == null)) {
                this.onStopThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopThreadCompleted);
            }
            base.InvokeAsync(this.onBeginStopThreadDelegate, new object[] {
                        HeaderInfo,
                        ThreadId}, this.onEndStopThreadDelegate, this.onStopThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CanStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn request) {
            return base.Channel.CanStopThread(request);
        }
        
        public bool CanStopThread(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CanStopThread(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCanStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanStopThread(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanStopThread(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.ThreadId = ThreadId;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCanStopThread(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCanStopThread(System.IAsyncResult result) {
            return base.Channel.EndCanStopThread(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCanStopThread(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CanStopThreadOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCanStopThread(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCanStopThread(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int ThreadId = ((int)(inValues[1]));
            return this.BeginCanStopThread(HeaderInfo, ThreadId, callback, asyncState);
        }
        
        private object[] OnEndCanStopThread(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCanStopThread(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCanStopThreadCompleted(object state) {
            if ((this.CanStopThreadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanStopThreadCompleted(this, new CanStopThreadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanStopThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId) {
            this.CanStopThreadAsync(HeaderInfo, ThreadId, null);
        }
        
        public void CanStopThreadAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int ThreadId, object userState) {
            if ((this.onBeginCanStopThreadDelegate == null)) {
                this.onBeginCanStopThreadDelegate = new BeginOperationDelegate(this.OnBeginCanStopThread);
            }
            if ((this.onEndCanStopThreadDelegate == null)) {
                this.onEndCanStopThreadDelegate = new EndOperationDelegate(this.OnEndCanStopThread);
            }
            if ((this.onCanStopThreadCompletedDelegate == null)) {
                this.onCanStopThreadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanStopThreadCompleted);
            }
            base.InvokeAsync(this.onBeginCanStopThreadDelegate, new object[] {
                        HeaderInfo,
                        ThreadId}, this.onEndCanStopThreadDelegate, this.onCanStopThreadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn request) {
            return base.Channel.GetActiveThreads(request);
        }
        
        public string GetActiveThreads(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetActiveThreads(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActiveThreads(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetActiveThreads(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetActiveThreads(System.IAsyncResult result) {
            return base.Channel.EndGetActiveThreads(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetActiveThreads(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetActiveThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetActiveThreads(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetActiveThreads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetActiveThreads(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetActiveThreads(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetActiveThreads(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetActiveThreadsCompleted(object state) {
            if ((this.GetActiveThreadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActiveThreadsCompleted(this, new GetActiveThreadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActiveThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetActiveThreadsAsync(HeaderInfo, null);
        }
        
        public void GetActiveThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetActiveThreadsDelegate == null)) {
                this.onBeginGetActiveThreadsDelegate = new BeginOperationDelegate(this.OnBeginGetActiveThreads);
            }
            if ((this.onEndGetActiveThreadsDelegate == null)) {
                this.onEndGetActiveThreadsDelegate = new EndOperationDelegate(this.OnEndGetActiveThreads);
            }
            if ((this.onGetActiveThreadsCompletedDelegate == null)) {
                this.onGetActiveThreadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActiveThreadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetActiveThreadsDelegate, new object[] {
                        HeaderInfo}, this.onEndGetActiveThreadsDelegate, this.onGetActiveThreadsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetLoginActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn request) {
            return base.Channel.GetLoginActiveThreads(request);
        }
        
        public string GetLoginActiveThreads(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetLoginActiveThreads(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetLoginActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginActiveThreads(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLoginActiveThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetLoginActiveThreads(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetLoginActiveThreads(System.IAsyncResult result) {
            return base.Channel.EndGetLoginActiveThreads(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetLoginActiveThreads(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginActiveThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetLoginActiveThreads(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetLoginActiveThreads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetLoginActiveThreads(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetLoginActiveThreads(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetLoginActiveThreads(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetLoginActiveThreadsCompleted(object state) {
            if ((this.GetLoginActiveThreadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginActiveThreadsCompleted(this, new GetLoginActiveThreadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginActiveThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetLoginActiveThreadsAsync(HeaderInfo, null);
        }
        
        public void GetLoginActiveThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetLoginActiveThreadsDelegate == null)) {
                this.onBeginGetLoginActiveThreadsDelegate = new BeginOperationDelegate(this.OnBeginGetLoginActiveThreads);
            }
            if ((this.onEndGetLoginActiveThreadsDelegate == null)) {
                this.onEndGetLoginActiveThreadsDelegate = new EndOperationDelegate(this.OnEndGetLoginActiveThreads);
            }
            if ((this.onGetLoginActiveThreadsCompletedDelegate == null)) {
                this.onGetLoginActiveThreadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginActiveThreadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginActiveThreadsDelegate, new object[] {
                        HeaderInfo}, this.onEndGetLoginActiveThreadsDelegate, this.onGetLoginActiveThreadsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetDocumentThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn request) {
            return base.Channel.GetDocumentThreads(request);
        }
        
        public int[] GetDocumentThreads(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetDocumentThreads(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetDocumentThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentThreads(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentThreads(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetDocumentThreads(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetDocumentThreads(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentThreads(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetDocumentThreads(System.IAsyncResult result, out int[] @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetDocumentThreadsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetDocumentThreads(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetDocumentThreads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetDocumentThreads(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentThreads(System.IAsyncResult result) {
            int[] @return = this.GetDefaultValueForInitialization<int[]>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetDocumentThreads(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetDocumentThreadsCompleted(object state) {
            if ((this.GetDocumentThreadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentThreadsCompleted(this, new GetDocumentThreadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetDocumentThreadsAsync(HeaderInfo, null);
        }
        
        public void GetDocumentThreadsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetDocumentThreadsDelegate == null)) {
                this.onBeginGetDocumentThreadsDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentThreads);
            }
            if ((this.onEndGetDocumentThreadsDelegate == null)) {
                this.onEndGetDocumentThreadsDelegate = new EndOperationDelegate(this.OnEndGetDocumentThreads);
            }
            if ((this.onGetDocumentThreadsCompletedDelegate == null)) {
                this.onGetDocumentThreadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentThreadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentThreadsDelegate, new object[] {
                        HeaderInfo}, this.onEndGetDocumentThreadsDelegate, this.onGetDocumentThreadsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.SetMenuHandle(Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn request) {
            return base.Channel.SetMenuHandle(request);
        }
        
        public void SetMenuHandle(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int menuWindowHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.menuWindowHandle = menuWindowHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).SetMenuHandle(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginSetMenuHandle(Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetMenuHandle(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetMenuHandle(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int menuWindowHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.menuWindowHandle = menuWindowHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginSetMenuHandle(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndSetMenuHandle(System.IAsyncResult result) {
            return base.Channel.EndSetMenuHandle(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndSetMenuHandle(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetMenuHandleOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndSetMenuHandle(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginSetMenuHandle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int menuWindowHandle = ((int)(inValues[1]));
            return this.BeginSetMenuHandle(HeaderInfo, menuWindowHandle, callback, asyncState);
        }
        
        private object[] OnEndSetMenuHandle(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndSetMenuHandle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetMenuHandleCompleted(object state) {
            if ((this.SetMenuHandleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetMenuHandleCompleted(this, new SetMenuHandleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetMenuHandleAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int menuWindowHandle) {
            this.SetMenuHandleAsync(HeaderInfo, menuWindowHandle, null);
        }
        
        public void SetMenuHandleAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int menuWindowHandle, object userState) {
            if ((this.onBeginSetMenuHandleDelegate == null)) {
                this.onBeginSetMenuHandleDelegate = new BeginOperationDelegate(this.OnBeginSetMenuHandle);
            }
            if ((this.onEndSetMenuHandleDelegate == null)) {
                this.onEndSetMenuHandleDelegate = new EndOperationDelegate(this.OnEndSetMenuHandle);
            }
            if ((this.onSetMenuHandleCompletedDelegate == null)) {
                this.onSetMenuHandleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetMenuHandleCompleted);
            }
            base.InvokeAsync(this.onBeginSetMenuHandleDelegate, new object[] {
                        HeaderInfo,
                        menuWindowHandle}, this.onEndSetMenuHandleDelegate, this.onSetMenuHandleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.SetDocumentInForeground(Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn request) {
            return base.Channel.SetDocumentInForeground(request);
        }
        
        public bool SetDocumentInForeground(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).SetDocumentInForeground(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginSetDocumentInForeground(Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDocumentInForeground(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDocumentInForeground(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentHandle = documentHandle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginSetDocumentInForeground(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndSetDocumentInForeground(System.IAsyncResult result) {
            return base.Channel.EndSetDocumentInForeground(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndSetDocumentInForeground(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetDocumentInForegroundOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndSetDocumentInForeground(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginSetDocumentInForeground(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int documentHandle = ((int)(inValues[1]));
            return this.BeginSetDocumentInForeground(HeaderInfo, documentHandle, callback, asyncState);
        }
        
        private object[] OnEndSetDocumentInForeground(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndSetDocumentInForeground(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnSetDocumentInForegroundCompleted(object state) {
            if ((this.SetDocumentInForegroundCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDocumentInForegroundCompleted(this, new SetDocumentInForegroundCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDocumentInForegroundAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle) {
            this.SetDocumentInForegroundAsync(HeaderInfo, documentHandle, null);
        }
        
        public void SetDocumentInForegroundAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int documentHandle, object userState) {
            if ((this.onBeginSetDocumentInForegroundDelegate == null)) {
                this.onBeginSetDocumentInForegroundDelegate = new BeginOperationDelegate(this.OnBeginSetDocumentInForeground);
            }
            if ((this.onEndSetDocumentInForegroundDelegate == null)) {
                this.onEndSetDocumentInForegroundDelegate = new EndOperationDelegate(this.OnEndSetDocumentInForeground);
            }
            if ((this.onSetDocumentInForegroundCompletedDelegate == null)) {
                this.onSetDocumentInForegroundCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDocumentInForegroundCompleted);
            }
            base.InvokeAsync(this.onBeginSetDocumentInForegroundDelegate, new object[] {
                        HeaderInfo,
                        documentHandle}, this.onEndSetDocumentInForegroundDelegate, this.onSetDocumentInForegroundCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetCurrentUser(Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn request) {
            return base.Channel.GetCurrentUser(request);
        }
        
        public bool GetCurrentUser(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, ref string strUser, ref string strCompany) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.strUser = strUser;
            inValue.strCompany = strCompany;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetCurrentUser(inValue);
            HeaderInfo = retVal.HeaderInfo;
            strUser = retVal.strUser;
            strCompany = retVal.strCompany;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetCurrentUser(Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentUser(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string strUser, string strCompany, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.strUser = strUser;
            inValue.strCompany = strCompany;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetCurrentUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetCurrentUser(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetCurrentUser(System.IAsyncResult result, out bool @return, out string strUser, out string strCompany) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetCurrentUserOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetCurrentUser(result);
            @return = retVal.@return;
            strUser = retVal.strUser;
            strCompany = retVal.strCompany;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetCurrentUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string strUser = ((string)(inValues[1]));
            string strCompany = ((string)(inValues[2]));
            return this.BeginGetCurrentUser(HeaderInfo, strUser, strCompany, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentUser(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            string strUser = this.GetDefaultValueForInitialization<string>();
            string strCompany = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetCurrentUser(result, out @return, out strUser, out strCompany);
            return new object[] {
                    @return,
                    strUser,
                    strCompany,
                    retVal};
        }
        
        private void OnGetCurrentUserCompleted(object state) {
            if ((this.GetCurrentUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentUserCompleted(this, new GetCurrentUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentUserAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string strUser, string strCompany) {
            this.GetCurrentUserAsync(HeaderInfo, strUser, strCompany, null);
        }
        
        public void GetCurrentUserAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string strUser, string strCompany, object userState) {
            if ((this.onBeginGetCurrentUserDelegate == null)) {
                this.onBeginGetCurrentUserDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentUser);
            }
            if ((this.onEndGetCurrentUserDelegate == null)) {
                this.onEndGetCurrentUserDelegate = new EndOperationDelegate(this.OnEndGetCurrentUser);
            }
            if ((this.onGetCurrentUserCompletedDelegate == null)) {
                this.onGetCurrentUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentUserDelegate, new object[] {
                        HeaderInfo,
                        strUser,
                        strCompany}, this.onEndGetCurrentUserDelegate, this.onGetCurrentUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn request) {
            return base.Channel.RunDocument(request);
        }
        
        public int RunDocument(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string arguments) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.arguments = arguments;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunDocument(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunDocument(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunDocument(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string arguments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.documentNamespace = documentNamespace;
            inValue.arguments = arguments;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunDocument(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunDocument(System.IAsyncResult result) {
            return base.Channel.EndRunDocument(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunDocument(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunDocumentOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunDocument(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string documentNamespace = ((string)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            return this.BeginRunDocument(HeaderInfo, documentNamespace, arguments, callback, asyncState);
        }
        
        private object[] OnEndRunDocument(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunDocument(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunDocumentCompleted(object state) {
            if ((this.RunDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunDocumentCompleted(this, new RunDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string arguments) {
            this.RunDocumentAsync(HeaderInfo, documentNamespace, arguments, null);
        }
        
        public void RunDocumentAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string documentNamespace, string arguments, object userState) {
            if ((this.onBeginRunDocumentDelegate == null)) {
                this.onBeginRunDocumentDelegate = new BeginOperationDelegate(this.OnBeginRunDocument);
            }
            if ((this.onEndRunDocumentDelegate == null)) {
                this.onEndRunDocumentDelegate = new EndOperationDelegate(this.OnEndRunDocument);
            }
            if ((this.onRunDocumentCompletedDelegate == null)) {
                this.onRunDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginRunDocumentDelegate, new object[] {
                        HeaderInfo,
                        documentNamespace,
                        arguments}, this.onEndRunDocumentDelegate, this.onRunDocumentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunReport(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn request) {
            return base.Channel.RunReport(request);
        }
        
        public int RunReport(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string arguments) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            inValue.arguments = arguments;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunReport(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunReport(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunReport(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunReport(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string arguments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.reportNamespace = reportNamespace;
            inValue.arguments = arguments;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunReport(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunReport(System.IAsyncResult result) {
            return base.Channel.EndRunReport(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunReport(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunReport(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string reportNamespace = ((string)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            return this.BeginRunReport(HeaderInfo, reportNamespace, arguments, callback, asyncState);
        }
        
        private object[] OnEndRunReport(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunReport(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunReportCompleted(object state) {
            if ((this.RunReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunReportCompleted(this, new RunReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunReportAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string arguments) {
            this.RunReportAsync(HeaderInfo, reportNamespace, arguments, null);
        }
        
        public void RunReportAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string reportNamespace, string arguments, object userState) {
            if ((this.onBeginRunReportDelegate == null)) {
                this.onBeginRunReportDelegate = new BeginOperationDelegate(this.OnBeginRunReport);
            }
            if ((this.onEndRunReportDelegate == null)) {
                this.onEndRunReportDelegate = new EndOperationDelegate(this.OnEndRunReport);
            }
            if ((this.onRunReportCompletedDelegate == null)) {
                this.onRunReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunReportCompleted);
            }
            base.InvokeAsync(this.onBeginRunReportDelegate, new object[] {
                        HeaderInfo,
                        reportNamespace,
                        arguments}, this.onEndRunReportDelegate, this.onRunReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.RunReportFromWoormInfo(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn request) {
            return base.Channel.RunReportFromWoormInfo(request);
        }
        
        public int RunReportFromWoormInfo(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string arguments) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.woormInfoHandle = woormInfoHandle;
            inValue.arguments = arguments;
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).RunReportFromWoormInfo(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginRunReportFromWoormInfo(Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunReportFromWoormInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRunReportFromWoormInfo(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string arguments, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.woormInfoHandle = woormInfoHandle;
            inValue.arguments = arguments;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginRunReportFromWoormInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndRunReportFromWoormInfo(System.IAsyncResult result) {
            return base.Channel.EndRunReportFromWoormInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndRunReportFromWoormInfo(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.RunReportFromWoormInfoOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndRunReportFromWoormInfo(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginRunReportFromWoormInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int woormInfoHandle = ((int)(inValues[1]));
            string arguments = ((string)(inValues[2]));
            return this.BeginRunReportFromWoormInfo(HeaderInfo, woormInfoHandle, arguments, callback, asyncState);
        }
        
        private object[] OnEndRunReportFromWoormInfo(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndRunReportFromWoormInfo(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnRunReportFromWoormInfoCompleted(object state) {
            if ((this.RunReportFromWoormInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunReportFromWoormInfoCompleted(this, new RunReportFromWoormInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunReportFromWoormInfoAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string arguments) {
            this.RunReportFromWoormInfoAsync(HeaderInfo, woormInfoHandle, arguments, null);
        }
        
        public void RunReportFromWoormInfoAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int woormInfoHandle, string arguments, object userState) {
            if ((this.onBeginRunReportFromWoormInfoDelegate == null)) {
                this.onBeginRunReportFromWoormInfoDelegate = new BeginOperationDelegate(this.OnBeginRunReportFromWoormInfo);
            }
            if ((this.onEndRunReportFromWoormInfoDelegate == null)) {
                this.onEndRunReportFromWoormInfoDelegate = new EndOperationDelegate(this.OnEndRunReportFromWoormInfo);
            }
            if ((this.onRunReportFromWoormInfoCompletedDelegate == null)) {
                this.onRunReportFromWoormInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunReportFromWoormInfoCompleted);
            }
            base.InvokeAsync(this.onBeginRunReportFromWoormInfoDelegate, new object[] {
                        HeaderInfo,
                        woormInfoHandle,
                        arguments}, this.onEndRunReportFromWoormInfoDelegate, this.onRunReportFromWoormInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_PressToolbarButton(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn request) {
            return base.Channel.CAbstractFormDoc_PressToolbarButton(request);
        }
        
        public bool CAbstractFormDoc_PressToolbarButton(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string buttonName) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.buttonName = buttonName;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_PressToolbarButton(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_PressToolbarButton(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_PressToolbarButton(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_PressToolbarButton(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string buttonName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.buttonName = buttonName;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_PressToolbarButton(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_PressToolbarButton(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_PressToolbarButton(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_PressToolbarButton(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_PressToolbarButtonOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_PressToolbarButton(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_PressToolbarButton(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string buttonName = ((string)(inValues[2]));
            return this.BeginCAbstractFormDoc_PressToolbarButton(HeaderInfo, handle, buttonName, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_PressToolbarButton(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_PressToolbarButton(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_PressToolbarButtonCompleted(object state) {
            if ((this.CAbstractFormDoc_PressToolbarButtonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_PressToolbarButtonCompleted(this, new CAbstractFormDoc_PressToolbarButtonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_PressToolbarButtonAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string buttonName) {
            this.CAbstractFormDoc_PressToolbarButtonAsync(HeaderInfo, handle, buttonName, null);
        }
        
        public void CAbstractFormDoc_PressToolbarButtonAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string buttonName, object userState) {
            if ((this.onBeginCAbstractFormDoc_PressToolbarButtonDelegate == null)) {
                this.onBeginCAbstractFormDoc_PressToolbarButtonDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_PressToolbarButton);
            }
            if ((this.onEndCAbstractFormDoc_PressToolbarButtonDelegate == null)) {
                this.onEndCAbstractFormDoc_PressToolbarButtonDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_PressToolbarButton);
            }
            if ((this.onCAbstractFormDoc_PressToolbarButtonCompletedDelegate == null)) {
                this.onCAbstractFormDoc_PressToolbarButtonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_PressToolbarButtonCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_PressToolbarButtonDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        buttonName}, this.onEndCAbstractFormDoc_PressToolbarButtonDelegate, this.onCAbstractFormDoc_PressToolbarButtonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_GetMaster(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn request) {
            return base.Channel.CAbstractFormDoc_GetMaster(request);
        }
        
        public int CAbstractFormDoc_GetMaster(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_GetMaster(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_GetMaster(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_GetMaster(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_GetMaster(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_GetMaster(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_GetMaster(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_GetMaster(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_GetMaster(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetMasterOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_GetMaster(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_GetMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginCAbstractFormDoc_GetMaster(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_GetMaster(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_GetMaster(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_GetMasterCompleted(object state) {
            if ((this.CAbstractFormDoc_GetMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_GetMasterCompleted(this, new CAbstractFormDoc_GetMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_GetMasterAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.CAbstractFormDoc_GetMasterAsync(HeaderInfo, handle, null);
        }
        
        public void CAbstractFormDoc_GetMasterAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginCAbstractFormDoc_GetMasterDelegate == null)) {
                this.onBeginCAbstractFormDoc_GetMasterDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_GetMaster);
            }
            if ((this.onEndCAbstractFormDoc_GetMasterDelegate == null)) {
                this.onEndCAbstractFormDoc_GetMasterDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_GetMaster);
            }
            if ((this.onCAbstractFormDoc_GetMasterCompletedDelegate == null)) {
                this.onCAbstractFormDoc_GetMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_GetMasterCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_GetMasterDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndCAbstractFormDoc_GetMasterDelegate, this.onCAbstractFormDoc_GetMasterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_GetHotLinkValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn request) {
            return base.Channel.CAbstractFormDoc_GetHotLinkValue(request);
        }
        
        public string CAbstractFormDoc_GetHotLinkValue(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aCtrlNamespace, string aHotLinkFieldName) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aCtrlNamespace = aCtrlNamespace;
            inValue.aHotLinkFieldName = aHotLinkFieldName;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_GetHotLinkValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_GetHotLinkValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_GetHotLinkValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_GetHotLinkValue(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aCtrlNamespace, string aHotLinkFieldName, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aCtrlNamespace = aCtrlNamespace;
            inValue.aHotLinkFieldName = aHotLinkFieldName;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_GetHotLinkValue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_GetHotLinkValue(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_GetHotLinkValue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_GetHotLinkValue(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetHotLinkValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_GetHotLinkValue(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_GetHotLinkValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string aCtrlNamespace = ((string)(inValues[2]));
            string aHotLinkFieldName = ((string)(inValues[3]));
            return this.BeginCAbstractFormDoc_GetHotLinkValue(HeaderInfo, handle, aCtrlNamespace, aHotLinkFieldName, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_GetHotLinkValue(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_GetHotLinkValue(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_GetHotLinkValueCompleted(object state) {
            if ((this.CAbstractFormDoc_GetHotLinkValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_GetHotLinkValueCompleted(this, new CAbstractFormDoc_GetHotLinkValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_GetHotLinkValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aCtrlNamespace, string aHotLinkFieldName) {
            this.CAbstractFormDoc_GetHotLinkValueAsync(HeaderInfo, handle, aCtrlNamespace, aHotLinkFieldName, null);
        }
        
        public void CAbstractFormDoc_GetHotLinkValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aCtrlNamespace, string aHotLinkFieldName, object userState) {
            if ((this.onBeginCAbstractFormDoc_GetHotLinkValueDelegate == null)) {
                this.onBeginCAbstractFormDoc_GetHotLinkValueDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_GetHotLinkValue);
            }
            if ((this.onEndCAbstractFormDoc_GetHotLinkValueDelegate == null)) {
                this.onEndCAbstractFormDoc_GetHotLinkValueDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_GetHotLinkValue);
            }
            if ((this.onCAbstractFormDoc_GetHotLinkValueCompletedDelegate == null)) {
                this.onCAbstractFormDoc_GetHotLinkValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_GetHotLinkValueCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_GetHotLinkValueDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        aCtrlNamespace,
                        aHotLinkFieldName}, this.onEndCAbstractFormDoc_GetHotLinkValueDelegate, this.onCAbstractFormDoc_GetHotLinkValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_GetFieldData(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn request) {
            return base.Channel.CAbstractFormDoc_GetFieldData(request);
        }
        
        public int CAbstractFormDoc_GetFieldData(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_GetFieldData(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_GetFieldData(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_GetFieldData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_GetFieldData(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_GetFieldData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_GetFieldData(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_GetFieldData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_GetFieldData(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldDataOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_GetFieldData(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_GetFieldData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string aDBTNamespace = ((string)(inValues[2]));
            string aFieldName = ((string)(inValues[3]));
            int nRow = ((int)(inValues[4]));
            return this.BeginCAbstractFormDoc_GetFieldData(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_GetFieldData(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_GetFieldData(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_GetFieldDataCompleted(object state) {
            if ((this.CAbstractFormDoc_GetFieldDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_GetFieldDataCompleted(this, new CAbstractFormDoc_GetFieldDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_GetFieldDataAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            this.CAbstractFormDoc_GetFieldDataAsync(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, null);
        }
        
        public void CAbstractFormDoc_GetFieldDataAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, object userState) {
            if ((this.onBeginCAbstractFormDoc_GetFieldDataDelegate == null)) {
                this.onBeginCAbstractFormDoc_GetFieldDataDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_GetFieldData);
            }
            if ((this.onEndCAbstractFormDoc_GetFieldDataDelegate == null)) {
                this.onEndCAbstractFormDoc_GetFieldDataDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_GetFieldData);
            }
            if ((this.onCAbstractFormDoc_GetFieldDataCompletedDelegate == null)) {
                this.onCAbstractFormDoc_GetFieldDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_GetFieldDataCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_GetFieldDataDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        aDBTNamespace,
                        aFieldName,
                        nRow}, this.onEndCAbstractFormDoc_GetFieldDataDelegate, this.onCAbstractFormDoc_GetFieldDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_GetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn request) {
            return base.Channel.CAbstractFormDoc_GetFieldValue(request);
        }
        
        public string CAbstractFormDoc_GetFieldValue(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_GetFieldValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_GetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_GetFieldValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_GetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_GetFieldValue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_GetFieldValue(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_GetFieldValue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_GetFieldValue(System.IAsyncResult result, out string @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetFieldValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_GetFieldValue(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_GetFieldValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string aDBTNamespace = ((string)(inValues[2]));
            string aFieldName = ((string)(inValues[3]));
            int nRow = ((int)(inValues[4]));
            return this.BeginCAbstractFormDoc_GetFieldValue(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_GetFieldValue(System.IAsyncResult result) {
            string @return = this.GetDefaultValueForInitialization<string>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_GetFieldValue(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_GetFieldValueCompleted(object state) {
            if ((this.CAbstractFormDoc_GetFieldValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_GetFieldValueCompleted(this, new CAbstractFormDoc_GetFieldValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_GetFieldValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow) {
            this.CAbstractFormDoc_GetFieldValueAsync(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, null);
        }
        
        public void CAbstractFormDoc_GetFieldValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, object userState) {
            if ((this.onBeginCAbstractFormDoc_GetFieldValueDelegate == null)) {
                this.onBeginCAbstractFormDoc_GetFieldValueDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_GetFieldValue);
            }
            if ((this.onEndCAbstractFormDoc_GetFieldValueDelegate == null)) {
                this.onEndCAbstractFormDoc_GetFieldValueDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_GetFieldValue);
            }
            if ((this.onCAbstractFormDoc_GetFieldValueCompletedDelegate == null)) {
                this.onCAbstractFormDoc_GetFieldValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_GetFieldValueCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_GetFieldValueDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        aDBTNamespace,
                        aFieldName,
                        nRow}, this.onEndCAbstractFormDoc_GetFieldValueDelegate, this.onCAbstractFormDoc_GetFieldValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_SetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn request) {
            return base.Channel.CAbstractFormDoc_SetFieldValue(request);
        }
        
        public void CAbstractFormDoc_SetFieldValue(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, string aValue) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            inValue.aValue = aValue;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_SetFieldValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_SetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_SetFieldValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_SetFieldValue(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, string aValue, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.aDBTNamespace = aDBTNamespace;
            inValue.aFieldName = aFieldName;
            inValue.nRow = nRow;
            inValue.aValue = aValue;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_SetFieldValue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_SetFieldValue(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_SetFieldValue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_SetFieldValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_SetFieldValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_SetFieldValue(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_SetFieldValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string aDBTNamespace = ((string)(inValues[2]));
            string aFieldName = ((string)(inValues[3]));
            int nRow = ((int)(inValues[4]));
            string aValue = ((string)(inValues[5]));
            return this.BeginCAbstractFormDoc_SetFieldValue(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, aValue, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_SetFieldValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_SetFieldValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCAbstractFormDoc_SetFieldValueCompleted(object state) {
            if ((this.CAbstractFormDoc_SetFieldValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_SetFieldValueCompleted(this, new CAbstractFormDoc_SetFieldValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_SetFieldValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, string aValue) {
            this.CAbstractFormDoc_SetFieldValueAsync(HeaderInfo, handle, aDBTNamespace, aFieldName, nRow, aValue, null);
        }
        
        public void CAbstractFormDoc_SetFieldValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string aDBTNamespace, string aFieldName, int nRow, string aValue, object userState) {
            if ((this.onBeginCAbstractFormDoc_SetFieldValueDelegate == null)) {
                this.onBeginCAbstractFormDoc_SetFieldValueDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_SetFieldValue);
            }
            if ((this.onEndCAbstractFormDoc_SetFieldValueDelegate == null)) {
                this.onEndCAbstractFormDoc_SetFieldValueDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_SetFieldValue);
            }
            if ((this.onCAbstractFormDoc_SetFieldValueCompletedDelegate == null)) {
                this.onCAbstractFormDoc_SetFieldValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_SetFieldValueCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_SetFieldValueDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        aDBTNamespace,
                        aFieldName,
                        nRow,
                        aValue}, this.onEndCAbstractFormDoc_SetFieldValueDelegate, this.onCAbstractFormDoc_SetFieldValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_GetConnection(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn request) {
            return base.Channel.CAbstractFormDoc_GetConnection(request);
        }
        
        public int CAbstractFormDoc_GetConnection(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_GetConnection(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_GetConnection(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_GetConnection(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_GetConnection(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_GetConnection(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_GetConnection(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_GetConnection(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_GetConnection(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_GetConnectionOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_GetConnection(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_GetConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginCAbstractFormDoc_GetConnection(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_GetConnection(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_GetConnection(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_GetConnectionCompleted(object state) {
            if ((this.CAbstractFormDoc_GetConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_GetConnectionCompleted(this, new CAbstractFormDoc_GetConnectionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_GetConnectionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.CAbstractFormDoc_GetConnectionAsync(HeaderInfo, handle, null);
        }
        
        public void CAbstractFormDoc_GetConnectionAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginCAbstractFormDoc_GetConnectionDelegate == null)) {
                this.onBeginCAbstractFormDoc_GetConnectionDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_GetConnection);
            }
            if ((this.onEndCAbstractFormDoc_GetConnectionDelegate == null)) {
                this.onEndCAbstractFormDoc_GetConnectionDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_GetConnection);
            }
            if ((this.onCAbstractFormDoc_GetConnectionCompletedDelegate == null)) {
                this.onCAbstractFormDoc_GetConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_GetConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_GetConnectionDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndCAbstractFormDoc_GetConnectionDelegate, this.onCAbstractFormDoc_GetConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.HotKeyLink_SetParamValue(Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn request) {
            return base.Channel.HotKeyLink_SetParamValue(request);
        }
        
        public void HotKeyLink_SetParamValue(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string name, int value) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.name = name;
            inValue.value = value;
            Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).HotKeyLink_SetParamValue(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginHotKeyLink_SetParamValue(Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHotKeyLink_SetParamValue(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHotKeyLink_SetParamValue(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string name, int value, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.name = name;
            inValue.value = value;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginHotKeyLink_SetParamValue(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndHotKeyLink_SetParamValue(System.IAsyncResult result) {
            return base.Channel.EndHotKeyLink_SetParamValue(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndHotKeyLink_SetParamValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.HotKeyLink_SetParamValueOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndHotKeyLink_SetParamValue(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginHotKeyLink_SetParamValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string name = ((string)(inValues[2]));
            int value = ((int)(inValues[3]));
            return this.BeginHotKeyLink_SetParamValue(HeaderInfo, handle, name, value, callback, asyncState);
        }
        
        private object[] OnEndHotKeyLink_SetParamValue(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndHotKeyLink_SetParamValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHotKeyLink_SetParamValueCompleted(object state) {
            if ((this.HotKeyLink_SetParamValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HotKeyLink_SetParamValueCompleted(this, new HotKeyLink_SetParamValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HotKeyLink_SetParamValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string name, int value) {
            this.HotKeyLink_SetParamValueAsync(HeaderInfo, handle, name, value, null);
        }
        
        public void HotKeyLink_SetParamValueAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string name, int value, object userState) {
            if ((this.onBeginHotKeyLink_SetParamValueDelegate == null)) {
                this.onBeginHotKeyLink_SetParamValueDelegate = new BeginOperationDelegate(this.OnBeginHotKeyLink_SetParamValue);
            }
            if ((this.onEndHotKeyLink_SetParamValueDelegate == null)) {
                this.onEndHotKeyLink_SetParamValueDelegate = new EndOperationDelegate(this.OnEndHotKeyLink_SetParamValue);
            }
            if ((this.onHotKeyLink_SetParamValueCompletedDelegate == null)) {
                this.onHotKeyLink_SetParamValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHotKeyLink_SetParamValueCompleted);
            }
            base.InvokeAsync(this.onBeginHotKeyLink_SetParamValueDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        name,
                        value}, this.onEndHotKeyLink_SetParamValueDelegate, this.onHotKeyLink_SetParamValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetLogins(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn request) {
            return base.Channel.GetLogins(request);
        }
        
        public int GetLogins(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetLogins(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetLogins(Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogins(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLogins(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetLogins(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetLogins(System.IAsyncResult result) {
            return base.Channel.EndGetLogins(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetLogins(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetLoginsOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetLogins(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetLogins(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetLogins(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetLogins(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetLogins(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetLoginsCompleted(object state) {
            if ((this.GetLoginsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginsCompleted(this, new GetLoginsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetLoginsAsync(HeaderInfo, null);
        }
        
        public void GetLoginsAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetLoginsDelegate == null)) {
                this.onBeginGetLoginsDelegate = new BeginOperationDelegate(this.OnBeginGetLogins);
            }
            if ((this.onEndGetLoginsDelegate == null)) {
                this.onEndGetLoginsDelegate = new EndOperationDelegate(this.OnEndGetLogins);
            }
            if ((this.onGetLoginsCompletedDelegate == null)) {
                this.onGetLoginsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginsCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginsDelegate, new object[] {
                        HeaderInfo}, this.onEndGetLoginsDelegate, this.onGetLoginsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.SetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn request) {
            return base.Channel.SetUserInteractionMode(request);
        }
        
        public void SetUserInteractionMode(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int mode) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.mode = mode;
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).SetUserInteractionMode(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginSetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetUserInteractionMode(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetUserInteractionMode(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int mode, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.mode = mode;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginSetUserInteractionMode(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndSetUserInteractionMode(System.IAsyncResult result) {
            return base.Channel.EndSetUserInteractionMode(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndSetUserInteractionMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.SetUserInteractionModeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndSetUserInteractionMode(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginSetUserInteractionMode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int mode = ((int)(inValues[1]));
            return this.BeginSetUserInteractionMode(HeaderInfo, mode, callback, asyncState);
        }
        
        private object[] OnEndSetUserInteractionMode(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndSetUserInteractionMode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetUserInteractionModeCompleted(object state) {
            if ((this.SetUserInteractionModeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetUserInteractionModeCompleted(this, new SetUserInteractionModeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetUserInteractionModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int mode) {
            this.SetUserInteractionModeAsync(HeaderInfo, mode, null);
        }
        
        public void SetUserInteractionModeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int mode, object userState) {
            if ((this.onBeginSetUserInteractionModeDelegate == null)) {
                this.onBeginSetUserInteractionModeDelegate = new BeginOperationDelegate(this.OnBeginSetUserInteractionMode);
            }
            if ((this.onEndSetUserInteractionModeDelegate == null)) {
                this.onEndSetUserInteractionModeDelegate = new EndOperationDelegate(this.OnEndSetUserInteractionMode);
            }
            if ((this.onSetUserInteractionModeCompletedDelegate == null)) {
                this.onSetUserInteractionModeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetUserInteractionModeCompleted);
            }
            base.InvokeAsync(this.onBeginSetUserInteractionModeDelegate, new object[] {
                        HeaderInfo,
                        mode}, this.onEndSetUserInteractionModeDelegate, this.onSetUserInteractionModeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.UseRemoteInterface(Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn request) {
            return base.Channel.UseRemoteInterface(request);
        }
        
        public void UseRemoteInterface(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool set) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.set = set;
            Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).UseRemoteInterface(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginUseRemoteInterface(Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUseRemoteInterface(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUseRemoteInterface(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool set, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.set = set;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginUseRemoteInterface(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndUseRemoteInterface(System.IAsyncResult result) {
            return base.Channel.EndUseRemoteInterface(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndUseRemoteInterface(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.UseRemoteInterfaceOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndUseRemoteInterface(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginUseRemoteInterface(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            bool set = ((bool)(inValues[1]));
            return this.BeginUseRemoteInterface(HeaderInfo, set, callback, asyncState);
        }
        
        private object[] OnEndUseRemoteInterface(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndUseRemoteInterface(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUseRemoteInterfaceCompleted(object state) {
            if ((this.UseRemoteInterfaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UseRemoteInterfaceCompleted(this, new UseRemoteInterfaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UseRemoteInterfaceAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool set) {
            this.UseRemoteInterfaceAsync(HeaderInfo, set, null);
        }
        
        public void UseRemoteInterfaceAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, bool set, object userState) {
            if ((this.onBeginUseRemoteInterfaceDelegate == null)) {
                this.onBeginUseRemoteInterfaceDelegate = new BeginOperationDelegate(this.OnBeginUseRemoteInterface);
            }
            if ((this.onEndUseRemoteInterfaceDelegate == null)) {
                this.onEndUseRemoteInterfaceDelegate = new EndOperationDelegate(this.OnEndUseRemoteInterface);
            }
            if ((this.onUseRemoteInterfaceCompletedDelegate == null)) {
                this.onUseRemoteInterfaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUseRemoteInterfaceCompleted);
            }
            base.InvokeAsync(this.onBeginUseRemoteInterfaceDelegate, new object[] {
                        HeaderInfo,
                        set}, this.onEndUseRemoteInterfaceDelegate, this.onUseRemoteInterfaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.Login(Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn request) {
            return base.Channel.Login(request);
        }
        
        public bool Login(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).Login(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.LoginIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.authenticationToken = authenticationToken;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndLogin(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.LoginOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndLogin(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            string authenticationToken = ((string)(inValues[1]));
            return this.BeginLogin(HeaderInfo, authenticationToken, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndLogin(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken) {
            this.LoginAsync(HeaderInfo, authenticationToken, null);
        }
        
        public void LoginAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, string authenticationToken, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        HeaderInfo,
                        authenticationToken}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.GetProcessID(Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn request) {
            return base.Channel.GetProcessID(request);
        }
        
        public int GetProcessID(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn();
            inValue.HeaderInfo = HeaderInfo;
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).GetProcessID(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginGetProcessID(Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProcessID(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProcessID(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDIn();
            inValue.HeaderInfo = HeaderInfo;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginGetProcessID(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndGetProcessID(System.IAsyncResult result) {
            return base.Channel.EndGetProcessID(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndGetProcessID(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.GetProcessIDOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndGetProcessID(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginGetProcessID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            return this.BeginGetProcessID(HeaderInfo, callback, asyncState);
        }
        
        private object[] OnEndGetProcessID(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndGetProcessID(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnGetProcessIDCompleted(object state) {
            if ((this.GetProcessIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProcessIDCompleted(this, new GetProcessIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProcessIDAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo) {
            this.GetProcessIDAsync(HeaderInfo, null);
        }
        
        public void GetProcessIDAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, object userState) {
            if ((this.onBeginGetProcessIDDelegate == null)) {
                this.onBeginGetProcessIDDelegate = new BeginOperationDelegate(this.OnBeginGetProcessID);
            }
            if ((this.onEndGetProcessIDDelegate == null)) {
                this.onEndGetProcessIDDelegate = new EndOperationDelegate(this.OnEndGetProcessID);
            }
            if ((this.onGetProcessIDCompletedDelegate == null)) {
                this.onGetProcessIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProcessIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetProcessIDDelegate, new object[] {
                        HeaderInfo}, this.onEndGetProcessIDDelegate, this.onGetProcessIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTObject_GetRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn request) {
            return base.Channel.DBTObject_GetRecord(request);
        }
        
        public int DBTObject_GetRecord(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTObject_GetRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTObject_GetRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTObject_GetRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTObject_GetRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTObject_GetRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTObject_GetRecord(System.IAsyncResult result) {
            return base.Channel.EndDBTObject_GetRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTObject_GetRecord(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTObject_GetRecord(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTObject_GetRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTObject_GetRecord(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTObject_GetRecord(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTObject_GetRecord(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTObject_GetRecordCompleted(object state) {
            if ((this.DBTObject_GetRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTObject_GetRecordCompleted(this, new DBTObject_GetRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTObject_GetRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTObject_GetRecordAsync(HeaderInfo, handle, null);
        }
        
        public void DBTObject_GetRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTObject_GetRecordDelegate == null)) {
                this.onBeginDBTObject_GetRecordDelegate = new BeginOperationDelegate(this.OnBeginDBTObject_GetRecord);
            }
            if ((this.onEndDBTObject_GetRecordDelegate == null)) {
                this.onEndDBTObject_GetRecordDelegate = new EndOperationDelegate(this.OnEndDBTObject_GetRecord);
            }
            if ((this.onDBTObject_GetRecordCompletedDelegate == null)) {
                this.onDBTObject_GetRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTObject_GetRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDBTObject_GetRecordDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTObject_GetRecordDelegate, this.onDBTObject_GetRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTObject_GetTable(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn request) {
            return base.Channel.DBTObject_GetTable(request);
        }
        
        public int DBTObject_GetTable(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTObject_GetTable(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTObject_GetTable(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTObject_GetTable(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTObject_GetTable(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTObject_GetTable(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTObject_GetTable(System.IAsyncResult result) {
            return base.Channel.EndDBTObject_GetTable(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTObject_GetTable(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTObject_GetTableOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTObject_GetTable(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTObject_GetTable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTObject_GetTable(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTObject_GetTable(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTObject_GetTable(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTObject_GetTableCompleted(object state) {
            if ((this.DBTObject_GetTableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTObject_GetTableCompleted(this, new DBTObject_GetTableCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTObject_GetTableAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTObject_GetTableAsync(HeaderInfo, handle, null);
        }
        
        public void DBTObject_GetTableAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTObject_GetTableDelegate == null)) {
                this.onBeginDBTObject_GetTableDelegate = new BeginOperationDelegate(this.OnBeginDBTObject_GetTable);
            }
            if ((this.onEndDBTObject_GetTableDelegate == null)) {
                this.onEndDBTObject_GetTableDelegate = new EndOperationDelegate(this.OnEndDBTObject_GetTable);
            }
            if ((this.onDBTObject_GetTableCompletedDelegate == null)) {
                this.onDBTObject_GetTableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTObject_GetTableCompleted);
            }
            base.InvokeAsync(this.onBeginDBTObject_GetTableDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTObject_GetTableDelegate, this.onDBTObject_GetTableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_AddRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn request) {
            return base.Channel.DBTSlaveBuffered_AddRecord(request);
        }
        
        public int DBTSlaveBuffered_AddRecord(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_AddRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_AddRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_AddRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_AddRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_AddRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_AddRecord(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_AddRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_AddRecord(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_AddRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_AddRecord(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_AddRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTSlaveBuffered_AddRecord(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_AddRecord(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_AddRecord(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_AddRecordCompleted(object state) {
            if ((this.DBTSlaveBuffered_AddRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_AddRecordCompleted(this, new DBTSlaveBuffered_AddRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_AddRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTSlaveBuffered_AddRecordAsync(HeaderInfo, handle, null);
        }
        
        public void DBTSlaveBuffered_AddRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTSlaveBuffered_AddRecordDelegate == null)) {
                this.onBeginDBTSlaveBuffered_AddRecordDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_AddRecord);
            }
            if ((this.onEndDBTSlaveBuffered_AddRecordDelegate == null)) {
                this.onEndDBTSlaveBuffered_AddRecordDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_AddRecord);
            }
            if ((this.onDBTSlaveBuffered_AddRecordCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_AddRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_AddRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_AddRecordDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTSlaveBuffered_AddRecordDelegate, this.onDBTSlaveBuffered_AddRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_GetRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn request) {
            return base.Channel.DBTSlaveBuffered_GetRow(request);
        }
        
        public int DBTSlaveBuffered_GetRow(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_GetRow(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_GetRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_GetRow(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_GetRow(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_GetRow(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_GetRow(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_GetRow(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_GetRow(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_GetRow(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_GetRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            int row = ((int)(inValues[2]));
            return this.BeginDBTSlaveBuffered_GetRow(HeaderInfo, handle, row, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_GetRow(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_GetRow(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_GetRowCompleted(object state) {
            if ((this.DBTSlaveBuffered_GetRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_GetRowCompleted(this, new DBTSlaveBuffered_GetRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_GetRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.DBTSlaveBuffered_GetRowAsync(HeaderInfo, handle, row, null);
        }
        
        public void DBTSlaveBuffered_GetRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, object userState) {
            if ((this.onBeginDBTSlaveBuffered_GetRowDelegate == null)) {
                this.onBeginDBTSlaveBuffered_GetRowDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_GetRow);
            }
            if ((this.onEndDBTSlaveBuffered_GetRowDelegate == null)) {
                this.onEndDBTSlaveBuffered_GetRowDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_GetRow);
            }
            if ((this.onDBTSlaveBuffered_GetRowCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_GetRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_GetRowCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_GetRowDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        row}, this.onEndDBTSlaveBuffered_GetRowDelegate, this.onDBTSlaveBuffered_GetRowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_GetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn request) {
            return base.Channel.DBTSlaveBuffered_GetCurrentRow(request);
        }
        
        public int DBTSlaveBuffered_GetCurrentRow(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_GetCurrentRow(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_GetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_GetCurrentRow(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_GetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_GetCurrentRow(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_GetCurrentRow(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_GetCurrentRow(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_GetCurrentRow(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_GetCurrentRow(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_GetCurrentRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTSlaveBuffered_GetCurrentRow(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_GetCurrentRow(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_GetCurrentRow(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_GetCurrentRowCompleted(object state) {
            if ((this.DBTSlaveBuffered_GetCurrentRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_GetCurrentRowCompleted(this, new DBTSlaveBuffered_GetCurrentRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_GetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTSlaveBuffered_GetCurrentRowAsync(HeaderInfo, handle, null);
        }
        
        public void DBTSlaveBuffered_GetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTSlaveBuffered_GetCurrentRowDelegate == null)) {
                this.onBeginDBTSlaveBuffered_GetCurrentRowDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_GetCurrentRow);
            }
            if ((this.onEndDBTSlaveBuffered_GetCurrentRowDelegate == null)) {
                this.onEndDBTSlaveBuffered_GetCurrentRowDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_GetCurrentRow);
            }
            if ((this.onDBTSlaveBuffered_GetCurrentRowCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_GetCurrentRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_GetCurrentRowCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_GetCurrentRowDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTSlaveBuffered_GetCurrentRowDelegate, this.onDBTSlaveBuffered_GetCurrentRowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_SetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn request) {
            return base.Channel.DBTSlaveBuffered_SetCurrentRow(request);
        }
        
        public void DBTSlaveBuffered_SetCurrentRow(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_SetCurrentRow(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_SetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_SetCurrentRow(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_SetCurrentRow(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_SetCurrentRow(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_SetCurrentRow(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_SetCurrentRow(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_SetCurrentRow(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_SetCurrentRowOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_SetCurrentRow(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_SetCurrentRow(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            int row = ((int)(inValues[2]));
            return this.BeginDBTSlaveBuffered_SetCurrentRow(HeaderInfo, handle, row, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_SetCurrentRow(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_SetCurrentRow(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_SetCurrentRowCompleted(object state) {
            if ((this.DBTSlaveBuffered_SetCurrentRowCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_SetCurrentRowCompleted(this, new DBTSlaveBuffered_SetCurrentRowCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_SetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.DBTSlaveBuffered_SetCurrentRowAsync(HeaderInfo, handle, row, null);
        }
        
        public void DBTSlaveBuffered_SetCurrentRowAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, object userState) {
            if ((this.onBeginDBTSlaveBuffered_SetCurrentRowDelegate == null)) {
                this.onBeginDBTSlaveBuffered_SetCurrentRowDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_SetCurrentRow);
            }
            if ((this.onEndDBTSlaveBuffered_SetCurrentRowDelegate == null)) {
                this.onEndDBTSlaveBuffered_SetCurrentRowDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_SetCurrentRow);
            }
            if ((this.onDBTSlaveBuffered_SetCurrentRowCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_SetCurrentRowCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_SetCurrentRowCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_SetCurrentRowDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        row}, this.onEndDBTSlaveBuffered_SetCurrentRowDelegate, this.onDBTSlaveBuffered_SetCurrentRowCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_GetCurrentRowIndex(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn request) {
            return base.Channel.DBTSlaveBuffered_GetCurrentRowIndex(request);
        }
        
        public int DBTSlaveBuffered_GetCurrentRowIndex(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_GetCurrentRowIndex(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_GetCurrentRowIndex(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_GetCurrentRowIndex(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_GetCurrentRowIndex(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_GetCurrentRowIndex(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_GetCurrentRowIndex(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_GetCurrentRowIndex(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_GetCurrentRowIndex(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetCurrentRowIndexOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_GetCurrentRowIndex(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_GetCurrentRowIndex(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTSlaveBuffered_GetCurrentRowIndex(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_GetCurrentRowIndex(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_GetCurrentRowIndex(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_GetCurrentRowIndexCompleted(object state) {
            if ((this.DBTSlaveBuffered_GetCurrentRowIndexCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_GetCurrentRowIndexCompleted(this, new DBTSlaveBuffered_GetCurrentRowIndexCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_GetCurrentRowIndexAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTSlaveBuffered_GetCurrentRowIndexAsync(HeaderInfo, handle, null);
        }
        
        public void DBTSlaveBuffered_GetCurrentRowIndexAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTSlaveBuffered_GetCurrentRowIndexDelegate == null)) {
                this.onBeginDBTSlaveBuffered_GetCurrentRowIndexDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_GetCurrentRowIndex);
            }
            if ((this.onEndDBTSlaveBuffered_GetCurrentRowIndexDelegate == null)) {
                this.onEndDBTSlaveBuffered_GetCurrentRowIndexDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_GetCurrentRowIndex);
            }
            if ((this.onDBTSlaveBuffered_GetCurrentRowIndexCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_GetCurrentRowIndexCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_GetCurrentRowIndexCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_GetCurrentRowIndexDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTSlaveBuffered_GetCurrentRowIndexDelegate, this.onDBTSlaveBuffered_GetCurrentRowIndexCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_GetSize(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn request) {
            return base.Channel.DBTSlaveBuffered_GetSize(request);
        }
        
        public int DBTSlaveBuffered_GetSize(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_GetSize(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_GetSize(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_GetSize(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_GetSize(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_GetSize(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_GetSize(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_GetSize(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_GetSize(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_GetSizeOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_GetSize(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_GetSize(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTSlaveBuffered_GetSize(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_GetSize(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_GetSize(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_GetSizeCompleted(object state) {
            if ((this.DBTSlaveBuffered_GetSizeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_GetSizeCompleted(this, new DBTSlaveBuffered_GetSizeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_GetSizeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTSlaveBuffered_GetSizeAsync(HeaderInfo, handle, null);
        }
        
        public void DBTSlaveBuffered_GetSizeAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTSlaveBuffered_GetSizeDelegate == null)) {
                this.onBeginDBTSlaveBuffered_GetSizeDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_GetSize);
            }
            if ((this.onEndDBTSlaveBuffered_GetSizeDelegate == null)) {
                this.onEndDBTSlaveBuffered_GetSizeDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_GetSize);
            }
            if ((this.onDBTSlaveBuffered_GetSizeCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_GetSizeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_GetSizeCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_GetSizeDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTSlaveBuffered_GetSizeDelegate, this.onDBTSlaveBuffered_GetSizeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_InsertRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn request) {
            return base.Channel.DBTSlaveBuffered_InsertRecord(request);
        }
        
        public int DBTSlaveBuffered_InsertRecord(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_InsertRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_InsertRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_InsertRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_InsertRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_InsertRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_InsertRecord(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_InsertRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_InsertRecord(System.IAsyncResult result, out int @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_InsertRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_InsertRecord(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_InsertRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            int row = ((int)(inValues[2]));
            return this.BeginDBTSlaveBuffered_InsertRecord(HeaderInfo, handle, row, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_InsertRecord(System.IAsyncResult result) {
            int @return = this.GetDefaultValueForInitialization<int>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_InsertRecord(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_InsertRecordCompleted(object state) {
            if ((this.DBTSlaveBuffered_InsertRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_InsertRecordCompleted(this, new DBTSlaveBuffered_InsertRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_InsertRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.DBTSlaveBuffered_InsertRecordAsync(HeaderInfo, handle, row, null);
        }
        
        public void DBTSlaveBuffered_InsertRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, object userState) {
            if ((this.onBeginDBTSlaveBuffered_InsertRecordDelegate == null)) {
                this.onBeginDBTSlaveBuffered_InsertRecordDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_InsertRecord);
            }
            if ((this.onEndDBTSlaveBuffered_InsertRecordDelegate == null)) {
                this.onEndDBTSlaveBuffered_InsertRecordDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_InsertRecord);
            }
            if ((this.onDBTSlaveBuffered_InsertRecordCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_InsertRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_InsertRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_InsertRecordDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        row}, this.onEndDBTSlaveBuffered_InsertRecordDelegate, this.onDBTSlaveBuffered_InsertRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_DeleteRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn request) {
            return base.Channel.DBTSlaveBuffered_DeleteRecord(request);
        }
        
        public void DBTSlaveBuffered_DeleteRecord(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_DeleteRecord(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_DeleteRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_DeleteRecord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_DeleteRecord(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.row = row;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_DeleteRecord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_DeleteRecord(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_DeleteRecord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_DeleteRecord(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_DeleteRecordOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_DeleteRecord(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_DeleteRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            int row = ((int)(inValues[2]));
            return this.BeginDBTSlaveBuffered_DeleteRecord(HeaderInfo, handle, row, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_DeleteRecord(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_DeleteRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_DeleteRecordCompleted(object state) {
            if ((this.DBTSlaveBuffered_DeleteRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_DeleteRecordCompleted(this, new DBTSlaveBuffered_DeleteRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_DeleteRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row) {
            this.DBTSlaveBuffered_DeleteRecordAsync(HeaderInfo, handle, row, null);
        }
        
        public void DBTSlaveBuffered_DeleteRecordAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, int row, object userState) {
            if ((this.onBeginDBTSlaveBuffered_DeleteRecordDelegate == null)) {
                this.onBeginDBTSlaveBuffered_DeleteRecordDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_DeleteRecord);
            }
            if ((this.onEndDBTSlaveBuffered_DeleteRecordDelegate == null)) {
                this.onEndDBTSlaveBuffered_DeleteRecordDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_DeleteRecord);
            }
            if ((this.onDBTSlaveBuffered_DeleteRecordCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_DeleteRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_DeleteRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_DeleteRecordDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        row}, this.onEndDBTSlaveBuffered_DeleteRecordDelegate, this.onDBTSlaveBuffered_DeleteRecordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.DBTSlaveBuffered_RemoveAll(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn request) {
            return base.Channel.DBTSlaveBuffered_RemoveAll(request);
        }
        
        public void DBTSlaveBuffered_RemoveAll(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).DBTSlaveBuffered_RemoveAll(inValue);
            HeaderInfo = retVal.HeaderInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginDBTSlaveBuffered_RemoveAll(Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDBTSlaveBuffered_RemoveAll(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDBTSlaveBuffered_RemoveAll(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginDBTSlaveBuffered_RemoveAll(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndDBTSlaveBuffered_RemoveAll(System.IAsyncResult result) {
            return base.Channel.EndDBTSlaveBuffered_RemoveAll(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndDBTSlaveBuffered_RemoveAll(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.DBTSlaveBuffered_RemoveAllOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndDBTSlaveBuffered_RemoveAll(result);
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginDBTSlaveBuffered_RemoveAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            return this.BeginDBTSlaveBuffered_RemoveAll(HeaderInfo, handle, callback, asyncState);
        }
        
        private object[] OnEndDBTSlaveBuffered_RemoveAll(System.IAsyncResult result) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndDBTSlaveBuffered_RemoveAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDBTSlaveBuffered_RemoveAllCompleted(object state) {
            if ((this.DBTSlaveBuffered_RemoveAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DBTSlaveBuffered_RemoveAllCompleted(this, new DBTSlaveBuffered_RemoveAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DBTSlaveBuffered_RemoveAllAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle) {
            this.DBTSlaveBuffered_RemoveAllAsync(HeaderInfo, handle, null);
        }
        
        public void DBTSlaveBuffered_RemoveAllAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, object userState) {
            if ((this.onBeginDBTSlaveBuffered_RemoveAllDelegate == null)) {
                this.onBeginDBTSlaveBuffered_RemoveAllDelegate = new BeginOperationDelegate(this.OnBeginDBTSlaveBuffered_RemoveAll);
            }
            if ((this.onEndDBTSlaveBuffered_RemoveAllDelegate == null)) {
                this.onEndDBTSlaveBuffered_RemoveAllDelegate = new EndOperationDelegate(this.OnEndDBTSlaveBuffered_RemoveAll);
            }
            if ((this.onDBTSlaveBuffered_RemoveAllCompletedDelegate == null)) {
                this.onDBTSlaveBuffered_RemoveAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDBTSlaveBuffered_RemoveAllCompleted);
            }
            base.InvokeAsync(this.onBeginDBTSlaveBuffered_RemoveAllDelegate, new object[] {
                        HeaderInfo,
                        handle}, this.onEndDBTSlaveBuffered_RemoveAllDelegate, this.onDBTSlaveBuffered_RemoveAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.CAbstractFormDoc_ActivateTab(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn request) {
            return base.Channel.CAbstractFormDoc_ActivateTab(request);
        }
        
        public bool CAbstractFormDoc_ActivateTab(ref Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string NsTab) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.NsTab = NsTab;
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).CAbstractFormDoc_ActivateTab(inValue);
            HeaderInfo = retVal.HeaderInfo;
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.BeginCAbstractFormDoc_ActivateTab(Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCAbstractFormDoc_ActivateTab(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCAbstractFormDoc_ActivateTab(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string NsTab, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn inValue = new Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabIn();
            inValue.HeaderInfo = HeaderInfo;
            inValue.handle = handle;
            inValue.NsTab = NsTab;
            return ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).BeginCAbstractFormDoc_ActivateTab(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes.EndCAbstractFormDoc_ActivateTab(System.IAsyncResult result) {
            return base.Channel.EndCAbstractFormDoc_ActivateTab(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo EndCAbstractFormDoc_ActivateTab(System.IAsyncResult result, out bool @return) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.CAbstractFormDoc_ActivateTabOut retVal = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TbGes)(this)).EndCAbstractFormDoc_ActivateTab(result);
            @return = retVal.@return;
            return retVal.HeaderInfo;
        }
        
        private System.IAsyncResult OnBeginCAbstractFormDoc_ActivateTab(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo = ((Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo)(inValues[0]));
            int handle = ((int)(inValues[1]));
            string NsTab = ((string)(inValues[2]));
            return this.BeginCAbstractFormDoc_ActivateTab(HeaderInfo, handle, NsTab, callback, asyncState);
        }
        
        private object[] OnEndCAbstractFormDoc_ActivateTab(System.IAsyncResult result) {
            bool @return = this.GetDefaultValueForInitialization<bool>();
            Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo retVal = this.EndCAbstractFormDoc_ActivateTab(result, out @return);
            return new object[] {
                    @return,
                    retVal};
        }
        
        private void OnCAbstractFormDoc_ActivateTabCompleted(object state) {
            if ((this.CAbstractFormDoc_ActivateTabCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CAbstractFormDoc_ActivateTabCompleted(this, new CAbstractFormDoc_ActivateTabCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CAbstractFormDoc_ActivateTabAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string NsTab) {
            this.CAbstractFormDoc_ActivateTabAsync(HeaderInfo, handle, NsTab, null);
        }
        
        public void CAbstractFormDoc_ActivateTabAsync(Microarea.TaskBuilderNet.Core.TbGesInterface.TBHeaderInfo HeaderInfo, int handle, string NsTab, object userState) {
            if ((this.onBeginCAbstractFormDoc_ActivateTabDelegate == null)) {
                this.onBeginCAbstractFormDoc_ActivateTabDelegate = new BeginOperationDelegate(this.OnBeginCAbstractFormDoc_ActivateTab);
            }
            if ((this.onEndCAbstractFormDoc_ActivateTabDelegate == null)) {
                this.onEndCAbstractFormDoc_ActivateTabDelegate = new EndOperationDelegate(this.OnEndCAbstractFormDoc_ActivateTab);
            }
            if ((this.onCAbstractFormDoc_ActivateTabCompletedDelegate == null)) {
                this.onCAbstractFormDoc_ActivateTabCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCAbstractFormDoc_ActivateTabCompleted);
            }
            base.InvokeAsync(this.onBeginCAbstractFormDoc_ActivateTabDelegate, new object[] {
                        HeaderInfo,
                        handle,
                        NsTab}, this.onEndCAbstractFormDoc_ActivateTabDelegate, this.onCAbstractFormDoc_ActivateTabCompletedDelegate, userState);
        }
    }
}
