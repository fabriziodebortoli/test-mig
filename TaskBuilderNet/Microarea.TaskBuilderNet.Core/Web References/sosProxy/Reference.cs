//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Microarea.TaskBuilderNet.Core.sosProxy {
	using System;
	using System.Web.Services;
	using System.Diagnostics;
	using System.Web.Services.Protocols;
	using System.Xml.Serialization;
	using System.ComponentModel;
	using WebServicesWrapper;


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SOSProxySoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Spedizione))]
    public partial class SOSProxy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingoloOperationCompleted;
        
        private System.Threading.SendOrPostCallback SequenzaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SempliceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FrammentataOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatoSpedizioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback EsitoSpedizioneOperationCompleted;
        
        private System.Threading.SendOrPostCallback ElencoClassiDocumentaliOperationCompleted;
        
        private System.Threading.SendOrPostCallback ElencoChiaviClasseDocumentaleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SOSProxy() {
            this.Url = global::Microarea.TaskBuilderNet.Core.Properties.Settings.Default.Microarea_TaskBuilderNet_Core_sosProxy_SOSProxy;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InitCompletedEventHandler InitCompleted;
        
        /// <remarks/>
        public event SingoloCompletedEventHandler SingoloCompleted;
        
        /// <remarks/>
        public event SequenzaCompletedEventHandler SequenzaCompleted;
        
        /// <remarks/>
        public event SempliceCompletedEventHandler SempliceCompleted;
        
        /// <remarks/>
        public event FrammentataCompletedEventHandler FrammentataCompleted;
        
        /// <remarks/>
        public event StatoSpedizioneCompletedEventHandler StatoSpedizioneCompleted;
        
        /// <remarks/>
        public event EsitoSpedizioneCompletedEventHandler EsitoSpedizioneCompleted;
        
        /// <remarks/>
        public event ElencoClassiDocumentaliCompletedEventHandler ElencoClassiDocumentaliCompleted;
        
        /// <remarks/>
        public event ElencoChiaviClasseDocumentaleCompletedEventHandler ElencoChiaviClasseDocumentaleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Init", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Init(string url) {
            this.Invoke("Init", new object[] {
                        url});
        }
        
        /// <remarks/>
        public void InitAsync(string url) {
            this.InitAsync(url, null);
        }
        
        /// <remarks/>
        public void InitAsync(string url, object userState) {
            if ((this.InitOperationCompleted == null)) {
                this.InitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitOperationCompleted);
            }
            this.InvokeAsync("Init", new object[] {
                        url}, this.InitOperationCompleted, userState);
        }
        
        private void OnInitOperationCompleted(object arg) {
            if ((this.InitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Singolo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Singolo(string codiceConservatore, string codiceCliente, string password, out Ticket ticket) {
            object[] results = this.Invoke("Singolo", new object[] {
                        codiceConservatore,
                        codiceCliente,
                        password});
            ticket = ((Ticket)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SingoloAsync(string codiceConservatore, string codiceCliente, string password) {
            this.SingoloAsync(codiceConservatore, codiceCliente, password, null);
        }
        
        /// <remarks/>
        public void SingoloAsync(string codiceConservatore, string codiceCliente, string password, object userState) {
            if ((this.SingoloOperationCompleted == null)) {
                this.SingoloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingoloOperationCompleted);
            }
            this.InvokeAsync("Singolo", new object[] {
                        codiceConservatore,
                        codiceCliente,
                        password}, this.SingoloOperationCompleted, userState);
        }
        
        private void OnSingoloOperationCompleted(object arg) {
            if ((this.SingoloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingoloCompleted(this, new SingoloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sequenza", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Sequenza(string codiceConservatore, string codiceCliente, string password, int numeroChunk, int dimensione, out Ticket ticket) {
            object[] results = this.Invoke("Sequenza", new object[] {
                        codiceConservatore,
                        codiceCliente,
                        password,
                        numeroChunk,
                        dimensione});
            ticket = ((Ticket)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SequenzaAsync(string codiceConservatore, string codiceCliente, string password, int numeroChunk, int dimensione) {
            this.SequenzaAsync(codiceConservatore, codiceCliente, password, numeroChunk, dimensione, null);
        }
        
        /// <remarks/>
        public void SequenzaAsync(string codiceConservatore, string codiceCliente, string password, int numeroChunk, int dimensione, object userState) {
            if ((this.SequenzaOperationCompleted == null)) {
                this.SequenzaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSequenzaOperationCompleted);
            }
            this.InvokeAsync("Sequenza", new object[] {
                        codiceConservatore,
                        codiceCliente,
                        password,
                        numeroChunk,
                        dimensione}, this.SequenzaOperationCompleted, userState);
        }
        
        private void OnSequenzaOperationCompleted(object arg) {
            if ((this.SequenzaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SequenzaCompleted(this, new SequenzaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Semplice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Semplice(string ticketGUID, string nomeFileZip, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] contenutoFileZip, out RispostaSpedizione spedizioneSemplice) {
            object[] results = this.Invoke("Semplice", new object[] {
                        ticketGUID,
                        nomeFileZip,
                        contenutoFileZip});
            spedizioneSemplice = ((RispostaSpedizione)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SempliceAsync(string ticketGUID, string nomeFileZip, byte[] contenutoFileZip) {
            this.SempliceAsync(ticketGUID, nomeFileZip, contenutoFileZip, null);
        }
        
        /// <remarks/>
        public void SempliceAsync(string ticketGUID, string nomeFileZip, byte[] contenutoFileZip, object userState) {
            if ((this.SempliceOperationCompleted == null)) {
                this.SempliceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSempliceOperationCompleted);
            }
            this.InvokeAsync("Semplice", new object[] {
                        ticketGUID,
                        nomeFileZip,
                        contenutoFileZip}, this.SempliceOperationCompleted, userState);
        }
        
        private void OnSempliceOperationCompleted(object arg) {
            if ((this.SempliceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SempliceCompleted(this, new SempliceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Frammentata", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Frammentata(string ticketGUID, string ticketChunkGUID, string nomeFileZip, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] contenutoBlocco, out RispostaSpedizione spedizioneFrammentata) {
            object[] results = this.Invoke("Frammentata", new object[] {
                        ticketGUID,
                        ticketChunkGUID,
                        nomeFileZip,
                        contenutoBlocco});
            spedizioneFrammentata = ((RispostaSpedizione)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FrammentataAsync(string ticketGUID, string ticketChunkGUID, string nomeFileZip, byte[] contenutoBlocco) {
            this.FrammentataAsync(ticketGUID, ticketChunkGUID, nomeFileZip, contenutoBlocco, null);
        }
        
        /// <remarks/>
        public void FrammentataAsync(string ticketGUID, string ticketChunkGUID, string nomeFileZip, byte[] contenutoBlocco, object userState) {
            if ((this.FrammentataOperationCompleted == null)) {
                this.FrammentataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFrammentataOperationCompleted);
            }
            this.InvokeAsync("Frammentata", new object[] {
                        ticketGUID,
                        ticketChunkGUID,
                        nomeFileZip,
                        contenutoBlocco}, this.FrammentataOperationCompleted, userState);
        }
        
        private void OnFrammentataOperationCompleted(object arg) {
            if ((this.FrammentataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FrammentataCompleted(this, new FrammentataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatoSpedizione", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool StatoSpedizione(string conservatore, string soggetto, string ticketGUID, string nomeFileZip, [System.Xml.Serialization.XmlElementAttribute("statospedizione")] out StatoSpedizione statospedizione1) {
            object[] results = this.Invoke("StatoSpedizione", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        nomeFileZip});
            statospedizione1 = ((StatoSpedizione)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void StatoSpedizioneAsync(string conservatore, string soggetto, string ticketGUID, string nomeFileZip) {
            this.StatoSpedizioneAsync(conservatore, soggetto, ticketGUID, nomeFileZip, null);
        }
        
        /// <remarks/>
        public void StatoSpedizioneAsync(string conservatore, string soggetto, string ticketGUID, string nomeFileZip, object userState) {
            if ((this.StatoSpedizioneOperationCompleted == null)) {
                this.StatoSpedizioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatoSpedizioneOperationCompleted);
            }
            this.InvokeAsync("StatoSpedizione", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        nomeFileZip}, this.StatoSpedizioneOperationCompleted, userState);
        }
        
        private void OnStatoSpedizioneOperationCompleted(object arg) {
            if ((this.StatoSpedizioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatoSpedizioneCompleted(this, new StatoSpedizioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EsitoSpedizione", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EsitoSpedizione(string conservatore, string soggetto, string ticketGUID, string nomeFileZip, string codiceClasseDocumentale, [System.Xml.Serialization.XmlElementAttribute("esitoSpedizione")] out EsitoSpedizione esitoSpedizione1) {
            object[] results = this.Invoke("EsitoSpedizione", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        nomeFileZip,
                        codiceClasseDocumentale});
            esitoSpedizione1 = ((EsitoSpedizione)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EsitoSpedizioneAsync(string conservatore, string soggetto, string ticketGUID, string nomeFileZip, string codiceClasseDocumentale) {
            this.EsitoSpedizioneAsync(conservatore, soggetto, ticketGUID, nomeFileZip, codiceClasseDocumentale, null);
        }
        
        /// <remarks/>
        public void EsitoSpedizioneAsync(string conservatore, string soggetto, string ticketGUID, string nomeFileZip, string codiceClasseDocumentale, object userState) {
            if ((this.EsitoSpedizioneOperationCompleted == null)) {
                this.EsitoSpedizioneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEsitoSpedizioneOperationCompleted);
            }
            this.InvokeAsync("EsitoSpedizione", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        nomeFileZip,
                        codiceClasseDocumentale}, this.EsitoSpedizioneOperationCompleted, userState);
        }
        
        private void OnEsitoSpedizioneOperationCompleted(object arg) {
            if ((this.EsitoSpedizioneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EsitoSpedizioneCompleted(this, new EsitoSpedizioneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ElencoClassiDocumentali", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ElencoClassiDocumentali(string conservatore, string soggetto, string ticketGUID, out ClasseDocumentale[] classeDocList) {
            object[] results = this.Invoke("ElencoClassiDocumentali", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID});
            classeDocList = ((ClasseDocumentale[])(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ElencoClassiDocumentaliAsync(string conservatore, string soggetto, string ticketGUID) {
            this.ElencoClassiDocumentaliAsync(conservatore, soggetto, ticketGUID, null);
        }
        
        /// <remarks/>
        public void ElencoClassiDocumentaliAsync(string conservatore, string soggetto, string ticketGUID, object userState) {
            if ((this.ElencoClassiDocumentaliOperationCompleted == null)) {
                this.ElencoClassiDocumentaliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnElencoClassiDocumentaliOperationCompleted);
            }
            this.InvokeAsync("ElencoClassiDocumentali", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID}, this.ElencoClassiDocumentaliOperationCompleted, userState);
        }
        
        private void OnElencoClassiDocumentaliOperationCompleted(object arg) {
            if ((this.ElencoClassiDocumentaliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ElencoClassiDocumentaliCompleted(this, new ElencoClassiDocumentaliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ElencoChiaviClasseDocumentale", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ElencoChiaviClasseDocumentale(string conservatore, string soggetto, string ticketGUID, string codiceClasseDocumentale, out ClasseDocumentale docClass) {
            object[] results = this.Invoke("ElencoChiaviClasseDocumentale", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        codiceClasseDocumentale});
            docClass = ((ClasseDocumentale)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ElencoChiaviClasseDocumentaleAsync(string conservatore, string soggetto, string ticketGUID, string codiceClasseDocumentale) {
            this.ElencoChiaviClasseDocumentaleAsync(conservatore, soggetto, ticketGUID, codiceClasseDocumentale, null);
        }
        
        /// <remarks/>
        public void ElencoChiaviClasseDocumentaleAsync(string conservatore, string soggetto, string ticketGUID, string codiceClasseDocumentale, object userState) {
            if ((this.ElencoChiaviClasseDocumentaleOperationCompleted == null)) {
                this.ElencoChiaviClasseDocumentaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnElencoChiaviClasseDocumentaleOperationCompleted);
            }
            this.InvokeAsync("ElencoChiaviClasseDocumentale", new object[] {
                        conservatore,
                        soggetto,
                        ticketGUID,
                        codiceClasseDocumentale}, this.ElencoChiaviClasseDocumentaleOperationCompleted, userState);
        }
        
        private void OnElencoChiaviClasseDocumentaleOperationCompleted(object arg) {
            if ((this.ElencoChiaviClasseDocumentaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ElencoChiaviClasseDocumentaleCompleted(this, new ElencoChiaviClasseDocumentaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SingoloCompletedEventHandler(object sender, SingoloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingoloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingoloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Ticket ticket {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Ticket)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SequenzaCompletedEventHandler(object sender, SequenzaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequenzaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SequenzaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Ticket ticket {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Ticket)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SempliceCompletedEventHandler(object sender, SempliceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SempliceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SempliceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public RispostaSpedizione spedizioneSemplice {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RispostaSpedizione)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void FrammentataCompletedEventHandler(object sender, FrammentataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FrammentataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FrammentataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public RispostaSpedizione spedizioneFrammentata {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RispostaSpedizione)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void StatoSpedizioneCompletedEventHandler(object sender, StatoSpedizioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatoSpedizioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatoSpedizioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public StatoSpedizione statospedizione1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatoSpedizione)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void EsitoSpedizioneCompletedEventHandler(object sender, EsitoSpedizioneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EsitoSpedizioneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EsitoSpedizioneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EsitoSpedizione esitoSpedizione1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EsitoSpedizione)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ElencoClassiDocumentaliCompletedEventHandler(object sender, ElencoClassiDocumentaliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ElencoClassiDocumentaliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ElencoClassiDocumentaliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClasseDocumentale[] classeDocList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClasseDocumentale[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void ElencoChiaviClasseDocumentaleCompletedEventHandler(object sender, ElencoChiaviClasseDocumentaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ElencoChiaviClasseDocumentaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ElencoChiaviClasseDocumentaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ClasseDocumentale docClass {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClasseDocumentale)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591