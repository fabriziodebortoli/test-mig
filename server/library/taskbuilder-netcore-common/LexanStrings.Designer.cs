//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microarea.Common {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LexanStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LexanStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microarea.Common.LexanStrings", typeof(LexanStrings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close() already executed.
        /// </summary>
        public static string AlreadyCloseError {
            get {
                return ResourceManager.GetString("AlreadyCloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Tag value.
        /// </summary>
        public static string BadTag {
            get {
                return ResourceManager.GetString("BadTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token expected {0}; Token found {1}.
        /// </summary>
        public static string BadTokenFound {
            get {
                return ResourceManager.GetString("BadTokenFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bracket token {0} not found.
        /// </summary>
        public static string BracketNotFound {
            get {
                return ResourceManager.GetString("BracketNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to include file {0}.
        /// </summary>
        public static string CannotInclude {
            get {
                return ResourceManager.GetString("CannotInclude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file does not exist.
        /// </summary>
        public static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid date/time format: {0}.
        /// </summary>
        public static string InvalidDateTimeFormat {
            get {
                return ResourceManager.GetString("InvalidDateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal define {0}. Only numerical values are allowed.
        /// </summary>
        public static string InvalidDefine {
            get {
                return ResourceManager.GetString("InvalidDefine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file name..
        /// </summary>
        public static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid preprocessor directive.
        /// </summary>
        public static string InvalidPreprocessorDirective {
            get {
                return ResourceManager.GetString("InvalidPreprocessorDirective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include file error.
        /// </summary>
        public static string InvalidPreprocessorFile {
            get {
                return ResourceManager.GetString("InvalidPreprocessorFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Call Close() before.
        /// </summary>
        public static string NoCloseError {
            get {
                return ResourceManager.GetString("NoCloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operator token {0} not found.
        /// </summary>
        public static string OperatorNotFound {
            get {
                return ResourceManager.GetString("OperatorNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected Token: &apos;{0}&apos;; found token: &apos;{1}&apos;.
        /// </summary>
        public static string TokenNotFound {
            get {
                return ResourceManager.GetString("TokenNotFound", resourceCulture);
            }
        }
    }
}
