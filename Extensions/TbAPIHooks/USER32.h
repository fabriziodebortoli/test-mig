#pragma once

int WINAPI _TBNAME(MessageBoxW)(HWND hWnd,LPCWSTR lpText,LPCWSTR lpCaption,UINT uType);
int WINAPI _TBNAME(MessageBoxA)(__in_opt HWND hWnd,__in_opt LPCSTR lpText,__in_opt LPCSTR lpCaption,__in UINT uType);
HWND WINAPI _TBNAME(CreateWindowExW) (DWORD dwExStyle,LPCWSTR lpClassName,LPCWSTR lpWindowName, DWORD dwStyle, int X,int Y,int nWidth,int nHeight,HWND hWndParent,HMENU hMenu,HINSTANCE hInstance,LPVOID lpParam);
HWND WINAPI _TBNAME(CreateDialogIndirectParamW)(__in_opt HINSTANCE hInstance, __in LPCDLGTEMPLATE lpTemplate, __in_opt HWND hWndParent, __in_opt DLGPROC lpDialogFunc,__in LPARAM dwInitParam = 0);
LRESULT WINAPI _TBNAME(CallWindowProcW)(__in WNDPROC lpPrevWndFunc,__in HWND hWnd,__in UINT Msg,__in WPARAM wParam,__in LPARAM lParam);
LRESULT WINAPI  CALLBACK _TBNAME(DefWindowProcW)(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);
LRESULT WINAPI  CALLBACK _TBNAME(DefDlgProcW)(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);
LRESULT WINAPI _TBNAME(SendMessageW)(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);
BOOL WINAPI _TBNAME(SendMessageCallbackW)(__in HWND hWnd, __in UINT Msg, __in WPARAM wParam, __in LPARAM lParam, __in SENDASYNCPROC lpResultCallBack, __in ULONG_PTR dwData);
BOOL WINAPI _TBNAME(PostMessageW)(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);
BOOL WINAPI _TBNAME(PostThreadMessageW)(DWORD dwThreadId, UINT message, WPARAM wParam, LPARAM lParam);
void WINAPI _TBNAME(PostQuitMessage)(int exitCode);
BOOL WINAPI _TBNAME(PeekMessageW)(__out LPMSG lpMsg, __in_opt HWND hWnd, __in UINT wMsgFilterMin, __in UINT wMsgFilterMax,__in UINT wRemoveMsg);
BOOL WINAPI _TBNAME(GetMessageW)(__out LPMSG lpMsg, __in_opt HWND hWnd, __in UINT wMsgFilterMin, __in UINT wMsgFilterMax);
BOOL WINAPI _TBNAME(TranslateMessage)(__in CONST MSG *lpMsg);
LRESULT WINAPI _TBNAME(DispatchMessageW)(__in CONST MSG *lpMsg);
BOOL WINAPI _TBNAME(IsWindow)(HWND hwnd);
DWORD WINAPI _TBNAME(GetWindowThreadProcessId)(__in HWND hWnd, __out_opt LPDWORD lpdwProcessId);
BOOL WINAPI _TBNAME(IsWindowEnabled)(HWND hwnd);
BOOL WINAPI _TBNAME(EnableWindow)(HWND hwnd, BOOL bEnable = TRUE);
BOOL WINAPI _TBNAME(DestroyWindow)(HWND hwnd);
HWND WINAPI _TBNAME(SetParent)(HWND hwnd, HWND hwndParent);
HWND WINAPI _TBNAME(GetParent)(HWND hwnd);
HWND WINAPI _TBNAME(GetAncestor)(_In_  HWND hwnd,_In_  UINT gaFlags);
LONG WINAPI _TBNAME(SetWindowLongW)(__in HWND hWnd, __in int nIndex, __in LONG dwNewLong);
LONG WINAPI _TBNAME(GetWindowLongW)(__in HWND hWnd,__in int nIndex);
int WINAPI _TBNAME(SetWindowRgn)(_In_ HWND hWnd,_In_opt_ HRGN hRgn,_In_ BOOL bRedraw);
int WINAPI _TBNAME(GetWindowRgn)(_In_ HWND hWnd, _In_ HRGN hRgn);
HWND WINAPI _TBNAME(GetWindow)(HWND hwnd, UINT uCmd);
HWND WINAPI _TBNAME(GetTopWindow)(HWND hwnd);
HWND WINAPI _TBNAME(GetDesktopWindow)(VOID);
HDC WINAPI _TBNAME(GetDC)(__in_opt HWND hWnd);
HDC WINAPI _TBNAME(GetWindowDC)(__in_opt HWND hWnd);
int WINAPI _TBNAME(ReleaseDC)(__in_opt HWND hWnd, __in HDC hDC);

HMENU WINAPI _TBNAME(GetMenu)(__in_opt HWND hWnd);
BOOL WINAPI _TBNAME(SetMenu)(__in HWND hWnd,__in_opt HMENU hMenu);
BOOL WINAPI _TBNAME(ShowWindow)(__in HWND hwnd,__in int nCmdShow);
BOOL WINAPI _TBNAME(ShowScrollBar)(__in HWND hWnd,__in int wBar,__in BOOL bShow);
BOOL WINAPI _TBNAME(IsWindowVisible)(__in HWND hwnd);
BOOL WINAPI _TBNAME(GetWindowRect)(__in HWND hWnd,__out LPRECT lpRect);
int WINAPI _TBNAME(GetWindowTextW)(__in HWND hWnd, __out_ecount(nMaxCount) LPWSTR lpString,__in int nMaxCount);
BOOL WINAPI _TBNAME(SetWindowTextW)(__in HWND hWnd, __in_opt LPCTSTR lpString);
int WINAPI _TBNAME(GetWindowTextLengthW)(__in HWND hWnd);
int WINAPI _TBNAME(GetClassNameW)(HWND hWnd, LPWSTR lpClassName, int nMaxCount);
HWND WINAPI _TBNAME(SetFocus)(__in HWND hWnd);
HWND WINAPI _TBNAME(GetFocus)();
HWND WINAPI _TBNAME(SetActiveWindow)(_In_ HWND hWnd);
HWND WINAPI _TBNAME(GetActiveWindow)();
HWND WINAPI _TBNAME(GetDlgItem)(__in_opt HWND hDlg, __in int nIDDlgItem);
BOOL WINAPI _TBNAME(IsChild)(__in HWND hWndParent, __in HWND hWnd);
HHOOK WINAPI _TBNAME(SetWindowsHookExW)(__in int idHook, __in HOOKPROC lpfn, __in_opt HINSTANCE hmod, __in DWORD dwThreadId);
BOOL WINAPI _TBNAME(UnhookWindowsHookEx)(__in HHOOK);
LRESULT WINAPI _TBNAME(CallNextHookEx)(__in_opt HHOOK hhk,__in int nCode,__in WPARAM wParam,__in LPARAM lParam);
UINT WINAPI _TBNAME(GetDlgCtrlID)(HWND hwnd);
BOOL WINAPI _TBNAME(ScreenToClient)( __in HWND hWnd, __inout LPPOINT lpPoint);
BOOL WINAPI _TBNAME(ClientToScreen)(__in HWND hWnd, __inout LPPOINT lpPoint);
BOOL WINAPI _TBNAME(MoveWindow)(__in HWND hWnd,__in int X,__in int Y,__in int nWidth,__in int nHeight,__in BOOL bRepaint);
BOOL WINAPI _TBNAME(SetWindowPos)(__in HWND hWnd,__in_opt HWND hWndInsertAfter,__in int X,__in int Y,__in int cx,__in int cy,__in UINT uFlags);
BOOL WINAPI _TBNAME(IsDialogMessageW)(_In_  HWND hDlg, _In_  LPMSG lpMsg);
BOOL WINAPI _TBNAME(MapDialogRect)(__in HWND hDlg, __inout LPRECT lpRect);
BOOL WINAPI _TBNAME(GetComboBoxInfo)(__in HWND hwndCombo,__inout PCOMBOBOXINFO pcbi);
BOOL WINAPI _TBNAME(GetClientRect)(__in HWND hWnd,__out LPRECT lpRect);
HDWP WINAPI _TBNAME(BeginDeferWindowPos)(__in int nNumWindows);
HDWP WINAPI _TBNAME(DeferWindowPos)(__in HDWP hWinPosInfo,__in HWND hWnd,__in_opt HWND hWndInsertAfter,__in int x,__in int y,__in int cx,__in int cy,__in UINT uFlags);
BOOL WINAPI _TBNAME(EndDeferWindowPos)(__in HDWP hWinPosInfo);
HBITMAP WINAPI _TBNAME(LoadBitmapW)(__in_opt HINSTANCE hInstance,__in LPCWSTR lpBitmapName);
HANDLE WINAPI _TBNAME(LoadImageW)(__in_opt HINSTANCE hInst,__in LPCWSTR name,__in UINT type,__in int cx,__in int cy,__in UINT fuLoad);
UINT_PTR WINAPI _TBNAME(SetTimer)(_In_opt_ HWND hWnd, _In_ UINT_PTR nIDEvent, _In_ UINT uElapse, _In_opt_ TIMERPROC lpTimerFunc); 
BOOL WINAPI _TBNAME(KillTimer)(_In_opt_ HWND hWnd, _In_ UINT_PTR uIDEvent);
BOOL WINAPI _TBNAME(SetScrollRange)(_In_ HWND hWnd, _In_ int nBar, _In_ int nMinPos, _In_ int nMaxPos, _In_ BOOL bRedraw);
BOOL WINAPI _TBNAME(GetScrollRange)(_In_ HWND hWnd, _In_ int nBar, _Out_ LPINT lpMinPos, _Out_ LPINT lpMaxPos);

//MENU
HMENU WINAPI _TBNAME(CreateMenu)();
BOOL WINAPI _TBNAME(DestroyMenu)(_In_ HMENU hMenu);
BOOL WINAPI _TBNAME(IsMenu)(HMENU hmenu);
BOOL WINAPI _TBNAME(AppendMenuW)(_In_ HMENU hMenu,_In_ UINT uFlags,_In_ UINT_PTR uIDNewItem,_In_opt_ LPCWSTR lpNewItem);
BOOL WINAPI _TBNAME(InsertMenuW)(_In_ HMENU hMenu, _In_ UINT uPosition, _In_ UINT uFlags, _In_ UINT_PTR uIDNewItem, _In_opt_ LPCTSTR  lpNewItem );

BOOL WINAPI _TBNAME(ChangeMenuW)(_In_ HMENU hMenu, _In_ UINT cmd, _In_opt_ LPCWSTR lpszNewItem, _In_ UINT cmdInsert, _In_ UINT flags);
int	 WINAPI	_TBNAME(GetMenuStringW)(_In_ HMENU hMenu, _In_ UINT uIDItem, _Out_writes_opt_(cchMax) LPWSTR lpString, _In_ int cchMax, _In_ UINT flags);
UINT WINAPI	_TBNAME(GetMenuState)(_In_ HMENU hMenu, _In_ UINT uId, _In_ UINT uFlags);
HMENU WINAPI _TBNAME(GetSystemMenu)(_In_ HWND hWnd, _In_ BOOL bRevert);
HMENU WINAPI _TBNAME(CreatePopupMenu)(VOID);
DWORD WINAPI _TBNAME(CheckMenuItem)(_In_ HMENU hMenu, _In_ UINT uIDCheckItem, _In_ UINT uCheck);
BOOL WINAPI _TBNAME(EnableMenuItem)(_In_ HMENU hMenu, _In_ UINT uIDEnableItem, _In_ UINT uEnable);
HMENU WINAPI _TBNAME(GetSubMenu)(_In_ HMENU hMenu, _In_ int nPos);
UINT WINAPI	_TBNAME(GetMenuItemID)(_In_ HMENU hMenu, _In_ int nPos);
int  WINAPI	_TBNAME(GetMenuItemCount)(_In_opt_ HMENU hMenu);
BOOL WINAPI	_TBNAME(ModifyMenuW)(_In_ HMENU hMnu, _In_ UINT uPosition, _In_ UINT uFlags, _In_ UINT_PTR uIDNewItem, _In_opt_ LPCWSTR lpNewItem);
BOOL WINAPI	_TBNAME(RemoveMenu)(_In_ HMENU hMenu, _In_ UINT uPosition, _In_ UINT uFlags);
BOOL WINAPI	_TBNAME(DeleteMenu)(_In_ HMENU hMenu, _In_ UINT uPosition, _In_ UINT uFlags);
BOOL WINAPI	_TBNAME(SetMenuItemBitmaps)(_In_ HMENU hMenu, _In_ UINT uPosition, _In_ UINT uFlags, _In_opt_ HBITMAP hBitmapUnchecked, _In_opt_ HBITMAP hBitmapChecked);
BOOL WINAPI	_TBNAME(TrackPopupMenu)(_In_ HMENU hMenu, _In_ UINT uFlags, _In_ int x, _In_ int y, _Reserved_ int nReserved, _In_ HWND hWnd, _Reserved_ CONST RECT *prcRect);
BOOL WINAPI	_TBNAME(TrackPopupMenuEx)(_In_ HMENU hMenu, _In_ UINT uFlags, _In_ int x, _In_ int y, _In_ HWND hwnd, _In_opt_ LPTPMPARAMS lptpm);
BOOL WINAPI	_TBNAME(GetMenuInfo)(_In_ HMENU, _Inout_ LPMENUINFO);
BOOL WINAPI _TBNAME(GetMenuItemInfoW)(_In_ HMENU hmenu,_In_ UINT item,_In_ BOOL fByPosition,_Inout_ LPMENUITEMINFOW lpmii);
BOOL WINAPI _TBNAME(SetMenuItemInfoW)(_In_ HMENU hmenu,_In_ UINT item,_In_ BOOL fByPositon,_In_ LPCMENUITEMINFOW lpmii);
BOOL WINAPI	_TBNAME(SetMenuInfo)(_In_ HMENU, _In_ LPCMENUINFO);
BOOL WINAPI	_TBNAME(EndMenu)(VOID);
BOOL WINAPI _TBNAME(GetMenuItemRect)(_In_opt_ HWND hWnd,_In_ HMENU hMenu,_In_ UINT uItem, _Out_ LPRECT lprcItem);

HMONITOR WINAPI _TBNAME(MonitorFromPoint)(_In_ POINT pt,_In_ DWORD dwFlags);
HMONITOR WINAPI _TBNAME(MonitorFromRect)(_In_ LPCRECT lprc,_In_ DWORD dwFlags);
HMONITOR WINAPI _TBNAME(MonitorFromWindow)(_In_ HWND hwnd,_In_ DWORD dwFlags);
BOOL WINAPI _TBNAME(GetMonitorInfoW)(_In_ HMONITOR hMonitor, _Inout_ LPMONITORINFO lpmi);
