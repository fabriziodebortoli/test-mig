<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmptyApplicationNameErrMsg" xml:space="preserve">
    <value>Application name has not been specified.</value>
  </data>
  <data name="MissingEnumTypeErrorMsg" xml:space="preserve">
    <value>The definition of the '{0}' table is incomplete since the enumeration type of the '{1}' column is missing.</value>
  </data>
  <data name="DirectoryNotFoundExceptionErrorMsg" xml:space="preserve">
    <value>The specified path was not found.</value>
  </data>
  <data name="UndefinedDataTypeDescription" xml:space="preserve">
    <value>Undefined</value>
  </data>
  <data name="StringDataTypeDescription" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="QuantityDataTypeDescription" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="LoadFromFileXmlExceptionErrMsg" xml:space="preserve">
    <value>An error has been encountered during the load of the project {0}.</value>
  </data>
  <data name="InvalidApplicationInfoErrMsg" xml:space="preserve">
    <value>The application data contained in the project {0} is not valid.</value>
  </data>
  <data name="MonetaryDataTypeDescription" xml:space="preserve">
    <value>Monetary</value>
  </data>
  <data name="NotClosedInjectionPointsErrorMsg" xml:space="preserve">
    <value>Injection points are not properly closed.</value>
  </data>
  <data name="NotSupportedExceptionErrorMsg" xml:space="preserve">
    <value>The path is not in a valid format.</value>
  </data>
  <data name="InvalidProjectFileErrMsg" xml:space="preserve">
    <value>Project file {0} is not valid</value>
  </data>
  <data name="EmptyInjectionPointHeaderMsg" xml:space="preserve">
    <value>The name of an injection point cannot be empty.
This name is used to uniquely identify the injection point within the file it belongs to.</value>
  </data>
  <data name="DefaultLibraryNameFmtText" xml:space="preserve">
    <value>Library{0}</value>
  </data>
  <data name="UnauthorizedAccessExceptionErrorMsg" xml:space="preserve">
    <value>The file is read-only or you don't have the required permission.</value>
  </data>
  <data name="InvalidClassNameExceptionErrorMsg" xml:space="preserve">
    <value>Invalid class name.</value>
  </data>
  <data name="DoubleDataTypeDescription" xml:space="preserve">
    <value>Decimal</value>
  </data>
  <data name="IOExceptionErrorMsg" xml:space="preserve">
    <value>An I/O error was encountered when an attempt was made to open a file.</value>
  </data>
  <data name="EmptyApplicationShortNameErrMsg" xml:space="preserve">
    <value>Application short name has not been specified.</value>
  </data>
  <data name="NestedInjectionPointsNotAllowedMsg" xml:space="preserve">
    <value>Nested injection points are not supported.
It is not allowed to place an injection point inside another injection point.</value>
  </data>
  <data name="ClassNamesConflictFmtMessage" xml:space="preserve">
    <value>The class name '{0}' is used both in the {1} library and in the {2} library.</value>
  </data>
  <data name="ExceptionRaisedDuringLoadErrMsg" xml:space="preserve">
    <value>An exception has been thrown during project file loading.</value>
  </data>
  <data name="EnumDataTypeDescription" xml:space="preserve">
    <value>Enumeration</value>
  </data>
  <data name="PathTooLongExceptionErrorMsg" xml:space="preserve">
    <value>The filename is too long and exceeds the system-defined maximum length.</value>
  </data>
  <data name="EnsureDirectoryExistenceErrorMsg" xml:space="preserve">
    <value>An error has been encountered during folder '{0}' creation or while the program was checking for its existence: {1}</value>
  </data>
  <data name="InvalidObjectNameExceptionErrorMsg" xml:space="preserve">
    <value>Invalid object name.</value>
  </data>
  <data name="InjectionPointHeaderNotUniqueMsg" xml:space="preserve">
    <value>The name '{0}' is used more than once within the same code file.</value>
  </data>
  <data name="NotEndedInjectionPointErrorMsg" xml:space="preserve">
    <value>In the file '{0}' the injection point whose header is '{1}' has not been ended correctly. </value>
  </data>
  <data name="SaveFileXmlExceptionErrMsg" xml:space="preserve">
    <value>An error has been encountered during the save of the project {0}.</value>
  </data>
  <data name="InvalidPathStringErrorMsg" xml:space="preserve">
    <value>String is a zero-length string, contains only white space, or contains one or more invalid characters for filenames.</value>
  </data>
  <data name="TextDataTypeDescription" xml:space="preserve">
    <value>Text</value>
  </data>
	<data name="NTextDataTypeDescription" xml:space="preserve">
    <value>Unicode Text</value>
  </data>
  <data name="GuidDataTypeDescription" xml:space="preserve">
    <value>Unique Identifier</value>
  </data>
  <data name="WriteXmlMenuFileErrorMsg" xml:space="preserve">
    <value>An error has been encountered during the write of the menu files.</value>
  </data>
  <data name="NotOpenedInjectionPointsErrorMsg" xml:space="preserve">
    <value>A statement that marks the end of an injection point does not match any previously located statement representing its beginning.</value>
  </data>
  <data name="BooleanDataTypeDescription" xml:space="preserve">
    <value>Boolean</value>
  </data>
  <data name="DateDataTypeDescription" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="GenericXmlExceptionErrMsg" xml:space="preserve">
    <value>An exception has been thrown during the execution of the TBWizardProjectParser.{0} method.</value>
  </data>
  <data name="PercentDataTypeDescription" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="ShortDataTypeDescription" xml:space="preserve">
    <value>Integer</value>
  </data>
  <data name="LongDataTypeDescription" xml:space="preserve">
    <value>Long integer</value>
  </data>
</root>