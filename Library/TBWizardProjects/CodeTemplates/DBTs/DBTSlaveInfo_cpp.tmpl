//=============================================================================
// module name  : @(DBTClassName).cpp
//=============================================================================
#include "stdafx.h"

// local declarations
#include <@(ModuleName)\@(LibrarySourceFolder)\@(DBTClassName).h>

//TBWIZ-INJECT{@(DBTClassName)(IncludeFiles)
//TBWIZ-INJECT}

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

@(RepeatOnForeignKeySegments{static TCHAR szParam@(ColumnName)[] = _T("@(ColumnName)");, "\r\n"})
//////////////////////////////////////////////////////////////////////////////
//             class @(DBTClassName) implementation
//////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNAMIC(@(DBTClassName), DBTSlave)

//-----------------------------------------------------------------------------	
@(DBTClassName)::@(DBTClassName)
	(
		CRuntimeClass*		pClass, 
		CAbstractFormDoc*	pDocument
	)
	:
	DBTSlave (pClass, pDocument, _NS_DBT("@(DBTName)"), ALLOW_EMPTY_BODY)
{
}

//-----------------------------------------------------------------------------
void @(DBTClassName)::OnDefineQuery()
{ 
	@(TableClassName)* pRecord = Get@(TableClassName)();
	
	m_pTable->SelectAll();

@(RepeatOnForeignKeySegments{\tm_pTable->AddFilterColumn(@(IfIsNotTableReferenced(pRecord->f_@(ColumnName)))@(IfIsTableReferenced(*pRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))));, "\r\n"})
	
@(RepeatOnForeignKeySegments{\tm_pTable->AddParam(szParam@(ColumnName), @(IfIsNotTableReferenced(pRecord->f_@(ColumnName)))@(IfIsTableReferenced(*pRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))));, "\r\n"})
}

//-----------------------------------------------------------------------------
void @(DBTClassName)::OnPrepareQuery()
{
	@(MasterTableClassName)* pMasterRecord = GetMasterRecord();

@(RepeatOnForeignKeySegments{\tm_pTable->SetParamValue(szParam@(ColumnName), *(@(ColumnDataObjClassName)*)pMasterRecord->GetDataObjFromColumnName(_T("@(RelatedColumnName)")));, "\r\n"})
}

//-----------------------------------------------------------------------------	
BOOL @(DBTClassName)::OnCheckPrimaryKey()
{   
	//TBWIZ-INJECT{@(DBTClassName)(OnCheckPrimaryKey)
	//TBWIZ-INJECT}

    return TRUE;
}

//-----------------------------------------------------------------------------
void @(DBTClassName)::OnPreparePrimaryKey()
{
	@(TableClassName)* pRecord = Get@(TableClassName)();
	@(MasterTableClassName)* pMasterRecord = GetMasterRecord();

@(RepeatOnForeignKeySegments{\t@(IfIsNotTableReferenced(pRecord->f_@(ColumnName)))@(IfIsTableReferenced(*(@(ColumnDataObjClassName)*)pRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))) = *(@(ColumnDataObjClassName)*)pMasterRecord->GetDataObjFromColumnName(_T("@(RelatedColumnName)"));, "\r\n"})

	//TBWIZ-INJECT{@(DBTClassName)(OnPreparePrimaryKey)
	//TBWIZ-INJECT}
}  

//-----------------------------------------------------------------------------
BOOL @(DBTClassName)::IsEmptyData()
{
	return FALSE;
}

//TBWIZ-INJECT{@(DBTClassName)(AdditionalCode)
//TBWIZ-INJECT}
