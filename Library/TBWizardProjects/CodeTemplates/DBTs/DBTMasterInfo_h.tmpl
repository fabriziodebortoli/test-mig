//=============================================================================
// module name  : @(DBTClassName).h
//=============================================================================
#pragma once

@(DeleteDuplicatedLines{@(+)
#include @(IfIsNotTableReferenced(<@(TableModuleName)\@(TableLibrarySourceFolder)\@(TableClassName).h>))@(IfIsTableReferenced("@(ReferencedTableHeaderRelativePath)"))\n@(+)  
@(IfShowsAdditionalColumns(@(RepeatOnVisibleAdditionalColumnsInfo{#include <@(AdditionalColumnsModuleName)\@(AdditionalColumnsLibrarySourceFolder)\@(AdditionalColumnsClassName).h>, "\r\n"})\n))@(+)
})

//TBWIZ-INJECT{@(DBTClassName)(IncludeFiles)
//TBWIZ-INJECT}

#include "beginh.dex"

//////////////////////////////////////////////////////////////////////////////
//             @(DBTClassName) class declaration
//////////////////////////////////////////////////////////////////////////////
class TB_EXPORT @(DBTClassName) : public DBTMaster
{ 
	DECLARE_DYNAMIC(@(DBTClassName))

public:
	@(DBTClassName)(CRuntimeClass*, CAbstractFormDoc*);

public:
	@(TableClassName)* Get@(TableClassName) () const { return (@(TableClassName)*)GetRecord(); }

protected:
 	virtual	void	OnDefineQuery		();
	virtual	void	OnPrepareQuery		();
	virtual	void	OnPrepareBrowser 	(SqlTable*);
	virtual	void	OnPrepareFindQuery 	(SqlTable*);

protected:
	virtual	BOOL	OnCheckPrimaryKey		();
	virtual	void	OnPreparePrimaryKey		();
	virtual	void	OnEnableControlsForFind	();
	virtual void	OnDisableControlsForEdit();

	//TBWIZ-INJECT{@(DBTClassName)(AdditionalMembers)
	//TBWIZ-INJECT}
};

//TBWIZ-INJECT{@(DBTClassName)(AdditionalDeclarations)
//TBWIZ-INJECT}

#include "endh.dex"
