//=============================================================================
// module name  : @(ClientDocumentClassName).cpp
//=============================================================================

#include "stdafx.h" 

@(DeleteDuplicatedLines(@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(ClientDocumentClassName).h>\n@(+) 
@(IfInterfacePresent(@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(ClientDocumentViewFileName).h>\n@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(ClientDocumentViewFileName).hrc>\n@(+)
@(RepeatOnTabbedPanes{@(+)
@(RepeatOnApplicationHotLinkColumns{#include <@(ColumnHotLinkModuleName)\@(ColumnHotLinkLibrarySourceFolder)\@(ColumnHotLinkParentFileName).h>, "\r\n"})\n@(+)
@(RepeatOnReferencedHotLinkIncludeFiles{#include "@(RelativeFileName)", "\r\n"})\n@(+)
, "\r\n"})))))

//TBWIZ-INJECT{@(ClientDocumentClassName)(IncludeFiles)
//TBWIZ-INJECT}

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

@(IsSlaveFormViewToCreate{@(+)
const TaskBuilderToolbarImageSet @(ClientDocumentClassName)ImageSet (_NS_LIB("@(LibraryNameSpace)"), IDB_@@(_RB(_)ClientDocumentName)_BUTTON_NORMAL_LARGE, IDB_@@(_RB(_)ClientDocumentName)_BUTTON_NORMAL_SMALL, IDB_@@(_RB(_)ClientDocumentName)_BUTTON_DISABLED_LARGE, IDB_@@(_RB(_)ClientDocumentName)_BUTTON_DISABLED_SMALL, 0,0);\n\n@(+)
})
//////////////////////////////////////////////////////////////////////////////
//							@(ClientDocumentClassName)						//
//////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNCREATE(@(ClientDocumentClassName), CClientDoc)

//-----------------------------------------------------------------------------
BEGIN_MESSAGE_MAP(@(ClientDocumentClassName), CClientDoc)
	//{{AFX_MSG_MAP(@(ClientDocumentClassName))
@(_NOEMPTYLINES:IsSlaveFormViewToCreate{\tON_COMMAND (ID_@@(_RB(_)ClientDocumentName)_COMMAND, On@(_RB(_)ClientDocumentName)Command)\n})
@(_NOEMPTYLINES:RepeatOnTabbedPanes(@(_NOEMPTYLINES:RepeatOnHotLinkColumns{@(IfColumnShowsHotLinkDescription{\tON_EN_VALUE_CHANGED	(IDC_@@(_RB(_)ClientDocumentName)_@@(_RB(_)TabbedPaneName)_@@(ColumnName), On@(TabbedPaneName)@(ColumnName)Changed)}), "\r\n"}), "\r\n"))
	//TBWIZ-INJECT{@(ClientDocumentClassName)(MessageMap)
	//TBWIZ-INJECT}
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

//-----------------------------------------------------------------------------
@(ClientDocumentClassName)::@(ClientDocumentClassName)() 
	: 
	CClientDoc()
{
@(IfNoMsgRoutingModeBoth{@(+)
@(IfMsgRoutingModeBefore(\tSetMsgRoutingMode(CD_MSG_BEFORE);))@(+)
@(IfMsgRoutingModeAfter(\tSetMsgRoutingMode(CD_MSG_AFTER);))@(+)
})
@(IfMsgRoutingModeBoth(\tSetMsgRoutingMode(CD_MSG_BOTH);))

	//TBWIZ-INJECT{@(ClientDocumentClassName)(Constructor)
	//TBWIZ-INJECT}
}

@(IfInterfacePresent{@(+)
//-----------------------------------------------------------------------------\n@(+)
void @(ClientDocumentClassName)::Customize()\n@(+)
{\n@(+)
	@(IsSlaveFormViewToCreate{\tAddButton(ID_@@(_RB(_)ClientDocumentName)_COMMAND, @(ClientDocumentClassName)ImageSet, _T(""));\n})@(+)
	@(AddTabsToServerDocumentTabber{@(RepeatOnTabbedPanes{@(+)
	\tAddTabDialog\n@(+)
	\t\t(\n@(+)
	\t\t\tIDD_@@(_RB(_)ClientDocumentName)_@@(_RB(_)TabbedPaneName),\n@(+)
	\t\t\tRUNTIME_CLASS(@(ClientDocumentName)@(TabbedPaneName)TabDlg)\n@(+)
	\t\t);\n@(+)
	})})\n@(+)
	\t//TBWIZ-INJECT{@(ClientDocumentClassName)(Customize)\n@(+)
	\t//TBWIZ-INJECT}\n@(+)
}\n@(+)
})
@(IsSlaveFormViewToCreate{@(+)
//-----------------------------------------------------------------------------\n@(+)
void @(ClientDocumentClassName)::On@(_RB(_)ClientDocumentName)Command()\n@(+)
{\n@(+)
	\tGetServerDoc()->CreateSlaveView(RUNTIME_CLASS(@(ClientDocumentClassName)View),IDD_@@(_RB(_)ClientDocumentName)_SLAVEFORMVIEW);\n@(+)
}\n@(+)
})
//-----------------------------------------------------------------------------
BOOL @(ClientDocumentClassName)::OnAttachData()
{
	m_pServerDoc = GetServerDoc();
@(IfDBTsPresent(\n@(+)
@(RepeatOnTabbedPanes{@(+)
	@(RepeatOnHotLinkColumns{@(+)
		\tm_pHKL@(_RB(_)TabbedPaneName)@(ColumnName) = new @(ColumnHKLClassName);\n@(+)
		\tAttachHotLink(m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName));\n@(+)
	,"\r\n\r\n"})@(+)
, "\r\n"})@(+)
@(RepeatOnDBTs{\n@(+)
	@(_NOEMPTYLINES:IfIsDBTRecordNotToEnhance(@(+)
		\tm_p@(DBTClassName) = new @(DBTClassName)(RUNTIME_CLASS(@(TableClassName)), m_pServerDoc);\n@(+) 
	))@(+)
	@(_NOEMPTYLINES:IfIsDBTRecordToEnhance(@(+)
		\tm_p@(DBTClassName) = new @(DBTClassName)(RUNTIME_CLASS(TEnhanced@(DBTClassName)@(TableClassName)), m_pServerDoc);\n@(+) 
	))@(+)
	\tAttachDBTSlave(m_p@(DBTClassName));@(+)
, "\r\n"})@(+)
))

	//TBWIZ-INJECT{@(ClientDocumentClassName)(OnAttachData)
	//TBWIZ-INJECT}

	return TRUE;
}    

//-----------------------------------------------------------------------------
BOOL @(ClientDocumentClassName)::OnInitAuxData()
{    
@(_NOEMPTYLINES:RepeatOnTabbedPanes(@(_NOEMPTYLINES:IfNotDBTSlaveBuffered(@(RepeatOnHotLinkColumns{@(IfColumnShowsHotLinkDescription{\tm_@(_RB(_)TabbedPaneName)@(ColumnName)HotLinkDescription.Clear();\n}),"\r\n"}))), "\r\n"))
	//TBWIZ-INJECT{@(ClientDocumentClassName)(OnInitAuxData)
	//TBWIZ-INJECT}

	return TRUE;
}

//-----------------------------------------------------------------------------
BOOL @(ClientDocumentClassName)::OnPrepareAuxData()
{
@(_NOEMPTYLINES:RepeatOnTabbedPanes(@(+)
	@(_NOEMPTYLINES:IfNotDBTSlaveBuffered(@(RepeatOnHotLinkColumns{@(+)
		@(IfColumnShowsHotLinkDescription{@(+)
			\tm_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->FindRecord(&Get@(DBTClassName)Record()->f_@(ColumnName));\n@(+)
			\tm_@(_RB(_)TabbedPaneName)@(ColumnName)HotLinkDescription = m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->GetRecord()->f_@(ColumnHKLDescriptionColumnName);\n@(+)
		})@(+)
	,"\r\n"})))@(+)
, "\r\n"))

	//TBWIZ-INJECT{@(ClientDocumentClassName)(OnPrepareAuxData)
	//TBWIZ-INJECT}

	return TRUE;
}

//-----------------------------------------------------------------------------
void @(ClientDocumentClassName)::OnPrepareAuxColumns (DBTSlaveBuffered* pDBT, SqlRecord* pRecord)
{
@(_NOEMPTYLINES:RepeatOnDBTs(@(+)
	@(_NOEMPTYLINES:IfIsDBTRecordToEnhance(@(+)
	\tif (pRecord && pDBT && pDBT->IsKindOf(RUNTIME_CLASS(@(DBTClassName))))\n@(+)
	\t{\n@(+)
	@(RepeatOnDBTTabbedPanes(@(+)
		@(RepeatOnHotLinkColumns{@(+)
			@(IfColumnShowsHotLinkDescription{@(+)
				\t\tm_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->FindRecord(&((@(TableClassName)*)pRecord)->f_@(ColumnName));\n@(+)
				\t\t@(ColumnHKLTableClassName)* p@(ColumnHKLTableClassName)Record = m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->GetRecord();\n@(+)
				\t\tif (p@(ColumnHKLTableClassName)Record)\n@(+)
				\t\t\t((TEnhanced@(DBTClassName)@(TableClassName)*)pRecord)->l_@(ColumnHKLTableName)@(ColumnHKLDescriptionColumnName) = p@(ColumnHKLTableClassName)Record->f_@(ColumnHKLDescriptionColumnName);\n@(+)
			})@(+)
		,"\r\n"})))@(+)
	\t}\n))@(+)
, "\r\n"))

	//TBWIZ-INJECT{@(ClientDocumentClassName)(OnPrepareAuxColumns)
	//TBWIZ-INJECT}
}

@(_NOEMPTYLINES:RepeatOnTabbedPanes(@(_NOEMPTYLINES:RepeatOnHotLinkColumns{@(IfColumnShowsHotLinkDescription{@(+)
//-----------------------------------------------------------------------------\n@(+)
void @(ClientDocumentClassName)::On@(TabbedPaneName)@(ColumnName)Changed()\n@(+)
{\n@(+)
	@(IfNotDBTSlaveBuffered(\tm_@(_RB(_)TabbedPaneName)@(ColumnName)HotLinkDescription = m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->GetRecord()->f_@(ColumnHKLDescriptionColumnName);\n))@(+)
	@(IfDBTSlaveBuffered(\tTEnhanced@(DBTClassName)@(TableClassName)* pCurrentRecord = m_p@(DBTClassName)->GetCurrent@(TableName)();\n\tpCurrentRecord->l_@(ColumnHKLTableName)@(ColumnHKLDescriptionColumnName) = m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)->GetRecord()->f_@(ColumnHKLDescriptionColumnName);))@(+)
\n@(+)
	\tm_pServerDoc->UpdateDataView();\n@(+)
}\n@(+)
}),"\r\n"})))

//TBWIZ-INJECT{@(ClientDocumentClassName)(AdditionalCode)
//TBWIZ-INJECT}
