//=============================================================================
// module name  : @(ClientDocumentViewFileName).h
//=============================================================================
#pragma once

@(DeleteDuplicatedLines(@(+)
@(ActOnMaster(#include <@(DBTModuleName)\@(DBTLibrarySourceFolder)\@(DBTClassName).h>))\n@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(ClientDocumentClassName).h>\n@(+)
@(RepeatOnTabbedPanes{@(+)
@(RepeatOnApplicationHotLinkColumns{#include <@(ColumnHotLinkModuleName)\@(ColumnHotLinkLibrarySourceFolder)\@(ColumnHotLinkParentFileName).h>, "\r\n"})\n@(+)
@(RepeatOnReferencedHotLinkIncludeFiles{#include "@(RelativeFileName)", "\r\n"})\n@(+)
@(IfShowsAdditionalColumns(@(RepeatOnVisibleAdditionalColumnsInfo{#include <@(AdditionalColumnsModuleName)\@(AdditionalColumnsLibrarySourceFolder)\@(AdditionalColumnsClassName).h>, "\r\n"})\n))@(+)
, "\r\n"})))

//TBWIZ-INJECT{@(ClientDocumentViewClassName)(IncludeFiles)
//TBWIZ-INJECT}

#include "beginh.dex"

@(IsSlaveFormViewToCreate{@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
//							@(ClientDocumentViewClassName)\n@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
class @(ClientDocumentViewClassName) : public CSlaveFormView\n@(+)
{\n@(+)
	\tDECLARE_DYNCREATE(@(ClientDocumentViewClassName))\n@(+)
\n@(+)
public:	\n@(+)
	\t@(ClientDocumentViewClassName)();\n@(+)
\n@(+)
public:\n@(+)
	\t@(ServerDocumentClassName)* GetDocument() const { return (@(ServerDocumentClassName)*)m_pDocument; }\n@(+)
	\t@(ClientDocumentClassName)* GetClientDocument() const { return (@(ClientDocumentClassName)*) GetDocument()->GetClientDoc(RUNTIME_CLASS(@(ClientDocumentClassName))); }\n@(+)
\n@(+)
public:\n@(+)
	\tvirtual void BuildDataControlLinks();\n@(+)
\n@(+)
protected:\n@(+)
	\t//{{AFX_MSG(@(ClientDocumentViewClassName))\n@(+)
	\t//}}AFX_MSG\n@(+)
	\tDECLARE_MESSAGE_MAP()\n@(+)
\n@(+)
	\t//TBWIZ-INJECT{@(ClientDocumentViewClassName)(AdditionalMembers)\n@(+)
	\t//TBWIZ-INJECT}\n@(+)
};\n@(+)
\n@(+)
})
@(IsTabberToCreate(@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
//							C@(ClientDocumentName)Tabber\n@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
class C@(ClientDocumentName)Tabber : public CTabManager\n@(+)
{\n@(+)
	\tDECLARE_DYNCREATE(C@(ClientDocumentName)Tabber)\n@(+)
protected:\n@(+)
	\tvirtual void Customize();\n@(+)
};\n\n@(+)
))
@(RepeatOnTabbedPanes{@(+)
@(IfDBTSlaveBuffered{@(+)
@(_NOEMPTYLINES:IfCreateRowForm{@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
//					C@(ClientDocumentName)@(TabbedPaneName)BodyEditRowView\n@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
class C@(ClientDocumentName)@(TabbedPaneName)BodyEditRowView : public CRowFormView\n@(+)
{\n@(+)
	\tDECLARE_DYNCREATE(C@(ClientDocumentName)@(TabbedPaneName)BodyEditRowView)\n\n@(+)
public:\n@(+)
	\tC@(ClientDocumentName)@(TabbedPaneName)BodyEditRowView();\n\n@(+)
public:\n@(+)
	\t@(ServerDocumentClassName)* GetDocument() const { return (@(ServerDocumentClassName)*) m_pDocument; }\n@(+)
	\t@(ClientDocumentClassName)* GetClientDocument() const { return (@(ClientDocumentClassName)*) GetDocument()->GetClientDoc(RUNTIME_CLASS(@(ClientDocumentClassName))); }\n@(+)
	\t@(TableClassName)* Get@(TableClassName)() const { return GetClientDocument()->Get@(DBTClassName)Record(); }\n@(+)
\n@(+)
public:\n@(+)	
	\tvirtual void BuildDataControlLinks();\n\n@(+)
protected:\n@(+)
	\t//{{AFX_MSG(C@(ClientDocumentName)@(TabbedPaneName)BodyEditRowView)\n@(+)
	\t//}}AFX_MSG\n@(+)
	\tDECLARE_MESSAGE_MAP()\n@(+)
};\n@(+)
})@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
//							C@(ClientDocumentName)@(TabbedPaneName)BodyEdit\n@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
class C@(ClientDocumentName)@(TabbedPaneName)BodyEdit : public CBodyEdit\n@(+)
{ \n@(+)
	\tDECLARE_DYNCREATE(C@(ClientDocumentName)@(TabbedPaneName)BodyEdit)\n@(+)
	\n@(+)
public:\n@(+)
	\tC@(ClientDocumentName)@(TabbedPaneName)BodyEdit();\n@(+)
	\n@(+)
public:\n@(+)
	\t@(ServerDocumentClassName)* GetDocument() const { return (@(ServerDocumentClassName)*)CBodyEdit::GetDocument(); }\n@(+)
	\t@(ClientDocumentClassName)* GetClientDocument() const { return (@(ClientDocumentClassName)*) GetDocument()->GetClientDoc(RUNTIME_CLASS(@(ClientDocumentClassName))); }\n@(+)
	\tvirtual void Customize();\n@(+)
};\n@(+)
})@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
//							C@(ClientDocumentName)@(TabbedPaneName)TabDlg\n@(+)
///////////////////////////////////////////////////////////////////////////////\n@(+)
class C@(ClientDocumentName)@(TabbedPaneName)TabDlg : public CTabDialog\n@(+)
{\n@(+)
	\tDECLARE_DYNCREATE(C@(ClientDocumentName)@(TabbedPaneName)TabDlg)\n@(+)
public:\n@(+)
	\tC@(ClientDocumentName)@(TabbedPaneName)TabDlg();\n@(+)
\n@(+)
	\t@(ServerDocumentClassName)* GetDocument() const { return (@(ServerDocumentClassName)*)m_pDocument; }\n@(+)
	\t@(ClientDocumentClassName)* GetClientDocument() const { return (@(ClientDocumentClassName)*) GetDocument()->GetClientDoc(RUNTIME_CLASS(@(ClientDocumentClassName))); }\n@(+)
	@(IfDBTMaster(\t@(TableClassName)* Get@(TableClassName)() const { return (@(TableClassName)*)GetDocument()->GetCurrentRecord(NULL); }\n))@(+)
	@(IfNotDBTMaster(\t@(TableClassName)* Get@(TableClassName)() const { return GetClientDocument()->Get@(DBTClassName)Record(); }\n))@(+)
\n@(+)
	\tvirtual void BuildDataControlLinks ();\n@(+)
};\n@(+)
, "\r\n"@(+)
})

//TBWIZ-INJECT{@(ClientDocumentViewClassName)(AdditionalDeclarations)
//TBWIZ-INJECT}

#include "endh.dex"
