//=============================================================================
// module name  : @(DocumentViewFileName).cpp
//=============================================================================

#include "stdafx.h" 

@(DeleteDuplicatedLines(@(+)
@(RepeatOnDBTs{#include <@(TableModuleName)\@(TableLibrarySourceFolder)\@(TableClassName).h>, "\r\n"})\n@(+)  
@(RepeatOnDBTs{#include <@(DBTModuleName)\@(DBTLibrarySourceFolder)\@(DBTClassName).h>, "\r\n"})\n@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(DocumentClassName).h>\n@(+)
#include <@(ModuleName)\@(LibrarySourceFolder)\@(DocumentViewFileName).h>\n@(+)
))

#include <@(ModuleName)\@(LibrarySourceFolder)\@(DocumentViewFileName).hrc>

//TBWIZ-INJECT{@(DocumentViewClassName)(IncludeFiles)
//TBWIZ-INJECT}

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[] = __FILE__; 
#endif

///////////////////////////////////////////////////////////////////////////////
//				Class @(DocumentViewClassName) Implementation				
///////////////////////////////////////////////////////////////////////////////
IMPLEMENT_DYNCREATE(@(DocumentViewClassName), CMasterFormView)

//-----------------------------------------------------------------------------
BEGIN_MESSAGE_MAP(@(DocumentViewClassName), CMasterFormView)
	//{{AFX_MSG_MAP(@(DocumentViewClassName))
	//TBWIZ-INJECT{@(DocumentViewClassName)(MessageMap)
	//TBWIZ-INJECT}
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

//-----------------------------------------------------------------------------
@(DocumentViewClassName)::@(DocumentViewClassName)()
	:
	CMasterFormView(_NS_VIEW("@(DocumentName)"), IDD_@@(_RB(_)DocumentName))
{
	//TBWIZ-INJECT{@(DocumentViewClassName)(Constructor)
	//TBWIZ-INJECT}
}

//-----------------------------------------------------------------------------
void @(DocumentViewClassName)::BuildDataControlLinks()
{
	@(MasterTableClassName)* pMasterRecord = GetMasterRecord();
	
	@(ActOnMaster(@(RepeatOnVisibleColumns{@(+)
		\tAddLink\n@(+)
			\t(\n@(+)
				\t\tIDC_@@(_RB(_)DocumentName)_@@(ColumnName),\n@(+)
				\t\t@(IfBaseTableColumn(@(+)
				@(IfIsNotTableReferenced(RDC(pMasterRecord, f_@(ColumnName))))@(+)
				@(IfIsTableReferenced(pMasterRecord->IsVirtual(pMasterRecord->Lookup(pMasterRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))) ? _T("@(ColumnName)") : (pMasterRecord->GetTableName() + _T("_") + _T("@(ColumnName)")),\n\t\tpMasterRecord,\n\t\tpMasterRecord->GetDataObjFromColumnName(_T("@(ColumnName)"))))@(+)
				))@(+)
				@(IfAdditionalColumn(_NS_LNK("@(ColumnName)"),\n\t\tAFC(((@(AdditionalColumnsClassName)*)(pMasterRecord->GetAddOnFields(RUNTIME_CLASS(@(AdditionalColumnsClassName))))), f_@(ColumnName)))),\n@(+)
				\t\tRUNTIME_CLASS(@(ColumnParsedControlClassName))@(IfHKLDefinedColumn(,\n\t\tGetDocument()->m_pHKL@(ColumnName)))\n@(+)
			\t);@(+)
		@(IfColumnShowsHotLinkDescription{\n\tAddLink\n\t(\n\t\tIDC_@@(_RB(_)DocumentName)_@@(ColumnName)_HOTLINK_DESCRIPTION_LABEL,\n\t\t_NS_LNK("@(_RB(_)DBTName)@(ColumnName)HotLinkDescription"),\n\t\tSDC(m_@(_RB(_)DBTName)@(ColumnName)HotLinkDescription),\n\t\tRUNTIME_CLASS(@(ColumnHKLDescriptionParsedStaticName))\n\t);})@(+)
		, "\r\n"@(+)
	})))
    @(IsTabberToCreate(AddTabManager(IDC_@@(_RB(_)DocumentName)_TAB, RUNTIME_CLASS(C@(DocumentName)Tabber), _NS_TABMNG("@(DocumentName)"));))

	//TBWIZ-INJECT{@(DocumentViewClassName)(BuildDataControlLinks)
	//TBWIZ-INJECT}
}

@(IsTabberToCreate(@(+)
//==============================================================================\n@(+)
//  C@(DocumentName)Tabber\n@(+)
//==============================================================================\n@(+)
IMPLEMENT_DYNCREATE(C@(DocumentName)Tabber, CTabManager)\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
void C@(DocumentName)Tabber::Customize()\n@(+)
{\n@(+)
	@(RepeatOnTabbedPanes{\tAddDialog(RUNTIME_CLASS(C@(DocumentName)@(TabbedPaneName)TabDlg), IDD_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName));\n, "\r\n"})\n@(+)
	\t//TBWIZ-INJECT{C@(DocumentName)Tabber(Customize)\n@(+)
	\t//TBWIZ-INJECT}\n@(+)
}\n\n@(+)
@(RepeatOnTabbedPanes{@(+)
@(IfDBTSlaveBuffered{@(+)
@(_NOEMPTYLINES:IfCreateRowForm{@(+)
//==============================================================================\n@(+)
//	C@(DocumentName)@(TabbedPaneName)BodyEditRowView\n@(+)
//==============================================================================\n@(+)
IMPLEMENT_DYNCREATE(C@(DocumentName)@(TabbedPaneName)BodyEditRowView, CRowFormView)\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
BEGIN_MESSAGE_MAP(C@(DocumentName)@(TabbedPaneName)BodyEditRowView, CRowFormView)\n@(+)
	//{{AFX_MSG_MAP(C@(DocumentName)@(TabbedPaneName)BodyEditRowView)\n@(+)
	//TBWIZ-INJECT{C@(DocumentName)@(TabbedPaneName)BodyEditRowView(MessageMap)\n@(+)
	//TBWIZ-INJECT}\n@(+)
	//}}AFX_MSG_MAP\n@(+)
END_MESSAGE_MAP()\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
C@(DocumentName)@(TabbedPaneName)BodyEditRowView::C@(DocumentName)@(TabbedPaneName)BodyEditRowView()\n@(+)
	\t:\n@(+)
	\tCRowFormView(_T("@(DBTSlaveTabTitle)"), IDD_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_ROW_FORM)\n@(+)
{}\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
void C@(DocumentName)@(TabbedPaneName)BodyEditRowView::BuildDataControlLinks()\n@(+)
{\n@(+)
	\t@(TableClassName)* pRecord = Get@(TableClassName)();\n@(+)
	@(RepeatOnRowFormColumns{@(+)
		\tAddLink\n@(+)
			\t(\n@(+)
				\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_ROW_FORM_@@(ColumnName),\n@(+)			
				\t\t@(IfBaseTableColumn(@(+)
				@(IfIsNotTableReferenced(RDC(pRecord, f_@(ColumnName))))@(+)
				@(IfIsTableReferenced(pRecord->IsVirtual(pRecord->Lookup(pRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))) ? _T("@(ColumnName)") : (pRecord->GetTableName() + _T("_") + _T("@(ColumnName)")),\n\t\tpRecord,\n\t\tpRecord->GetDataObjFromColumnName(_T("@(ColumnName)"))))@(+)
				))@(+)
				@(IfAdditionalColumn(_NS_LNK("@(ColumnName)"),\n\t\tAFC(((@(AdditionalColumnsClassName)*)(pRecord->GetAddOnFields(RUNTIME_CLASS(@(AdditionalColumnsClassName))))), f_@(ColumnName)))),\n@(+)
				\t\tRUNTIME_CLASS(@(ColumnParsedControlClassName))\n@(+)
			\t);@(+)
	, "\r\n"@(+)
	})\n@(+)
}\n@(+)
})@(+)
//==============================================================================\n@(+)
//  C@(DocumentName)@(TabbedPaneName)BodyEdit\n@(+)
//==============================================================================\n@(+)
IMPLEMENT_DYNCREATE(C@(DocumentName)@(TabbedPaneName)BodyEdit, CBodyEdit)\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
C@(DocumentName)@(TabbedPaneName)BodyEdit::C@(DocumentName)@(TabbedPaneName)BodyEdit()\n@(+)
\t:\n@(+)
\tCBodyEdit(_NS_BE("@(TableName)"))\n@(+)
{\n@(+)
}\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
void C@(DocumentName)@(TabbedPaneName)BodyEdit::Customize()\n@(+)
{\n@(+)
	\tEnableOrdering(TRUE);\n@(+)
@(IfIsDBTRecordToEnhance(\tTEnhanced@(DBTClassName)@(TableClassName)* pRecord = (TEnhanced@(DBTClassName)@(TableClassName)*)(m_pDBT->GetRecord());\n))@(+)
@(IfIsDBTRecordNotToEnhance(\t@(TableClassName)* pRecord = (@(TableClassName)*)(m_pDBT->GetRecord());\n))@(+)
    \tColumnInfo*	pColumnInfo;\n\n@(+)
	@(RepeatOnVisibleColumns{@(+)
	\tpColumnInfo = AddColumn\n@(+)
	\t(\n@(+)
		\t\t_NS_CLN("@(ColumnName)"),\n@(+)
		\t\t_TB("@(ColumnTitle)"),\n@(+)
		\t\t0,\n@(+)
		\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_@@(ColumnName),\n@(+)
		\t\t&(@(IfBaseTableColumn(pRecord))@(IfAdditionalColumn(((@(AdditionalColumnsClassName)*)(pRecord->GetAddOnFields(RUNTIME_CLASS(@(AdditionalColumnsClassName)))))))->f_@(ColumnName)),\n@(+)
		\t\tRUNTIME_CLASS(@(ColumnParsedControlClassName))@(IfHKLDefinedColumn(,\n\t\tGetDocument()->m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)))\n@(+)
	\t);\n@(+)
	@(IfColumnLengthIsGreaterThanMaxBodyEditColumnWidth{\tpColumnInfo->SetCtrlSize(@(MaxBodyEditColumnWidth), @(BodyEditColumnRowsNumber), @(DataLength));\n})@(+)
	\t//TBWIZ-INJECT{C@(DocumentName)@(TabbedPaneName)BodyEdit(Add@(ColumnName)Column)\n@(+)
	\t//TBWIZ-INJECT}\n@(+)
	@(IfColumnShowsHotLinkDescription{\n@(+)
	\tpColumnInfo = AddColumn\n@(+)
	\t(\n@(+)
		\t\t_NS_CLN("@(_RB(_)DBTName)@(ColumnName)HotLinkDescription"),\n@(+)
		\t\t_TB("@(ColumnHKLDescriptionColumnName)"),\n@(+)
		\t\t0,\n@(+)
		\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_@@(ColumnName)_HOTLINK_DESCRIPTION_LABEL,\n@(+)
		\t\t&(pRecord->l_@(ColumnHKLTableName)@(ColumnHKLDescriptionColumnName)),\n@(+)
		\t\tRUNTIME_CLASS(@(ColumnHKLDescriptionParsedStaticName))\n@(+)
	\t);\n@(+)
	\t//TBWIZ-INJECT{C@(DocumentName)@(TabbedPaneName)BodyEdit(Add@(_RB(_)DBTName)@(ColumnName)HotLinkDescriptionColumn)\n@(+)
	\t//TBWIZ-INJECT}\n})@(+)
	, "\r\n"@(+)
	})\n@(+)
}\n\n@(+)
})@(+)
//==============================================================================\n@(+)
//  C@(DocumentName)@(TabbedPaneName)TabDlg\n@(+)
//==============================================================================\n@(+)
IMPLEMENT_DYNCREATE(C@(DocumentName)@(TabbedPaneName)TabDlg, CTabDialog)\n\n@(+)
//-----------------------------------------------------------------------------\n@(+)
C@(DocumentName)@(TabbedPaneName)TabDlg::C@(DocumentName)@(TabbedPaneName)TabDlg()\n@(+)
\t:\n@(+)
\tCTabDialog(_NS_TABDLG("@(TableName)"), IDD_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName))\n@(+)
{\n@(+)
}\n@(+)
//-----------------------------------------------------------------------------\n@(+)
void C@(DocumentName)@(TabbedPaneName)TabDlg::BuildDataControlLinks()\n@(+)
{\n@(+)
	@(IfNotDBTSlaveBuffered{@(+)
		\t@(TableClassName)* pRecord = Get@(TableClassName)();\n@(+)
		@(RepeatOnVisibleColumns{@(+)
			\tAddLink\n@(+)
				\t(\n@(+)
					\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_@@(ColumnName),\n@(+)
					\t\t@(IfBaseTableColumn(@(+)
					@(IfIsNotTableReferenced(RDC(pRecord, f_@(ColumnName))))@(+)
					@(IfIsTableReferenced(pRecord->IsVirtual(pRecord->Lookup(pRecord->GetDataObjFromColumnName(_T("@(ColumnName)")))) ? _T("@(ColumnName)") : (pRecord->GetTableName() + _T("_") + _T("@(ColumnName)")),\n\t\tpRecord,\n\t\tpRecord->GetDataObjFromColumnName(_T("@(ColumnName)"))))@(+)
					))@(+)
					@(IfAdditionalColumn(_NS_LNK("@(ColumnName)"),\n\t\tAFC(((@(AdditionalColumnsClassName)*)(pRecord->GetAddOnFields(RUNTIME_CLASS(@(AdditionalColumnsClassName))))), f_@(ColumnName)))),\n@(+)
					\t\tRUNTIME_CLASS(@(ColumnParsedControlClassName))@(IfHKLDefinedColumn(,\n\t\tGetDocument()->m_pHKL@(_RB(_)TabbedPaneName)@(ColumnName)))\n@(+)
				\t);@(+)
			@(IfColumnShowsHotLinkDescription{\n\tAddLink\n\t(\n\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_@@(ColumnName)_HOTLINK_DESCRIPTION_LABEL,\n\t\t_NS_LNK("@(_RB(_)DBTName)@(ColumnName)HotLinkDescription"),\n\t\tSDC(m_@(_RB(_)DBTName)@(ColumnName)HotLinkDescription),\n\t\tRUNTIME_CLASS(@(ColumnHKLDescriptionParsedStaticName))\n\t);})@(+)
		, "\r\n"@(+)
		})\n@(+)
	})@(+)
	@(IfDBTSlaveBuffered{@(+)
	\tAddLink\n@(+)
		\t(\n@(+)
			\t\tIDC_@@(_RB(_)DocumentName)_@@(_RB(_)TabbedPaneName)_BODY_EDIT,\n@(+)
			\t\tGetDocument()->m_p@(DBTClassName),\n@(+)
			\t\tRUNTIME_CLASS(C@(DocumentName)@(TabbedPaneName)BodyEdit),\n@(+)
			\t\t@(IfNotCreateRowForm(NULL))@(IfCreateRowForm(RUNTIME_CLASS(C@(DocumentName)@(TabbedPaneName)BodyEditRowView))),\n@(+)
			\t\t_TB("@(DBTSlaveTabTitle)")\n@(+)
		\t);@(+)
	})@(+)
	\n@(+)
	\t//TBWIZ-INJECT{C@(DocumentName)@(TabbedPaneName)TabDlg(BuildDataControlLinks)\n@(+)
	\t//TBWIZ-INJECT}\n@(+)
}\n@(+)
, "\r\n"@(+)
})))

//TBWIZ-INJECT{@(DocumentViewClassName)(AdditionalCode)
//TBWIZ-INJECT}
