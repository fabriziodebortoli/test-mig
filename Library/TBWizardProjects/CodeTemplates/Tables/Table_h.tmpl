//=============================================================================
// module name  : @(TableClassName).h
//=============================================================================

#pragma once

//TBWIZ-INJECT{@(TableClassName)(IncludeFiles)
//TBWIZ-INJECT}

#include "beginh.dex"

/////////////////////////////////////////////////////////////////////////////
//					@(TableClassName) class declaration
/////////////////////////////////////////////////////////////////////////////
class TB_EXPORT @(TableClassName) : public SqlRecord
{
	DECLARE_DYNCREATE(@(TableClassName)) 

public:
@(RepeatOnDefinedColumns{\t@(ColumnDataObjClassName) f_@(ColumnName);, "\r\n"})

public:
	@(TableClassName)(BOOL bCallInit = TRUE);

public:
	virtual void BindRecord();

	static LPCTSTR GetStaticName();

	//TBWIZ-INJECT{@(TableClassName)(AdditionalMembers)
	//TBWIZ-INJECT}
};
@(IfTRDefined())
@(IfTRDefined(/////////////////////////////////////////////////////////////////////////////))
@(IfTRDefined(//				@(TableTRClassName) class definition))
@(IfTRDefined(/////////////////////////////////////////////////////////////////////////////))
@(IfTRDefined(class TB_EXPORT @(TableTRClassName) : public TableReader))
@(IfTRDefined({))
@(IfTRDefined(	DECLARE_DYNAMIC(@(TableTRClassName))))
@(IfTRDefined())
@(IfTRDefined(protected:))
@(IfTRDefined(@(RepeatOnPrimaryKeySegments{\t@(ColumnDataObjClassName) m_@(ColumnName);, "\r\n"})))
@(IfTRDefined())
@(IfTRDefined(public:))
@(IfTRDefined(	@(TableTRClassName) (CAbstractFormDoc* pDocument = NULL);))
@(IfTRDefined())
@(IfTRDefined(protected:))
@(IfTRDefined(	virtual void	OnDefineQuery	();))
@(IfTRDefined(	virtual void	OnPrepareQuery	();))
@(IfTRDefined(	virtual BOOL 	IsEmptyQuery	();))
@(IfTRDefined())
@(IfTRDefined(public:))
@(IfTRDefined(	FindResult FindRecord(@(RepeatOnPrimaryKeySegments{const @(ColumnDataObjClassName)& a@(ColumnName), ", "}));))
@(IfTRDefined())
@(IfTRDefined(	@(TableClassName)* GetRecord() const))
@(IfTRDefined(		{))
@(IfTRDefined(			ASSERT(m_pRecord->IsKindOf(RUNTIME_CLASS(@(TableClassName))));))
@(IfTRDefined(			return (@(TableClassName)*) m_pRecord;))
@(IfTRDefined(		}))
@(IfTRDefined(};))
@(IfHKLDefined())
@(IfHKLDefined(/////////////////////////////////////////////////////////////////////////////))
@(IfHKLDefined(//					@(TableHKLClassName) class definition))
@(IfHKLDefined(/////////////////////////////////////////////////////////////////////////////))
@(IfHKLDefined(class TB_EXPORT @(TableHKLClassName) : public HotKeyLink))
@(IfHKLDefined({))
@(IfHKLDefined(	DECLARE_DYNCREATE (@(TableHKLClassName))))
@(IfHKLDefined())
@(IfHKLDefined(protected:))
@(IfHKLDefined(@(RepeatOnHKLColumns{\t@(ColumnDataObjClassName) m_@(ColumnName);, "\r\n"})))
@(IfHKLDefined())
@(IfHKLDefined(public:))
@(IfHKLDefined(	@(TableHKLClassName)();))
@(IfHKLDefined(	virtual ~@(TableHKLClassName)();))
@(IfHKLDefined())
@(IfHKLDefined(public:))
@(IfHKLDefined(@(RepeatOnHKLColumns(\tvoid Set@(ColumnName)(@(ColumnDataObjClassName)& valueToSet) { m_@(ColumnName) = valueToSet; }, "\r\n"))))
@(IfHKLDefined())
@(IfHKLDefined(protected:))
@(IfHKLDefined(	virtual void		OnDefineQuery	(SelectionType nQuerySelection = DIRECT_ACCESS);))
@(IfHKLDefined(	virtual void		OnPrepareQuery	(DataObj*, SelectionType nQuerySelection = DIRECT_ACCESS);))
@(IfHKLDefined(	virtual DataObj*	GetDataObj		() const { return &GetRecord()->f_@(HKLCodeColumnName); };))
@(IfHKLDefined(	virtual	BOOL		Customize		(const DataObjArray&) { return TRUE; };))
@(IfHKLDefined(	))
@(IfHKLDefined(public:))
@(IfHKLDefined(	// local useful function))
@(IfHKLDefined(	@(TableClassName)* GetRecord () const))
@(IfHKLDefined(		{))
@(IfHKLDefined(			ASSERT(m_pRecord->IsKindOf(RUNTIME_CLASS(@(TableClassName))));))
@(IfHKLDefined(			return (@(TableClassName)*)m_pRecord;))
@(IfHKLDefined(		}))
@(IfHKLDefined(};))

//TBWIZ-INJECT{@(TableClassName)(AdditionalDeclarations)
//TBWIZ-INJECT}

#include "endh.dex"
